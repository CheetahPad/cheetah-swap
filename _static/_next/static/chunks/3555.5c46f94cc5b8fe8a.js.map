{"version":3,"file":"static/chunks/3555.5c46f94cc5b8fe8a.js","mappings":"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","sources":["webpack://_N_E/./src/utils/getTokenList.ts","webpack://_N_E/./src/utils/uriToHttp.ts","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n */\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\n  const urls: string[] = uriToHttp(listUrl)\n\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substring(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[3555],{\n\n/***/ 13555:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getTokenList; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47568);\n/* harmony import */ var _home_enoch_oven_swap_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34051);\n/* harmony import */ var _home_enoch_oven_swap_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_home_enoch_oven_swap_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40475);\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(65096);\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _uriToHttp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(90570);\n\n\n\n\n\nvar tokenListValidator = new (ajv__WEBPACK_IMPORTED_MODULE_2___default())({\n    allErrors: true\n}).compile(_uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n */ function getTokenList(listUrl) {\n    return _getTokenList.apply(this, arguments);\n};\nfunction _getTokenList() {\n    _getTokenList = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)(_home_enoch_oven_swap_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(listUrl) {\n        var urls, i, url, isLast, response, json, ref, ref1, validationErrors;\n        return _home_enoch_oven_swap_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    urls = (0,_uriToHttp__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(listUrl);\n                    i = 0;\n                case 2:\n                    if (!(i < urls.length)) {\n                        _ctx.next = 34;\n                        break;\n                    }\n                    url = urls[i];\n                    isLast = i === urls.length - 1;\n                    response = void 0;\n                    _ctx.prev = 6;\n                    _ctx.next = 9;\n                    return fetch(url);\n                case 9:\n                    response = _ctx.sent;\n                    _ctx.next = 18;\n                    break;\n                case 12:\n                    _ctx.prev = 12;\n                    _ctx.t0 = _ctx[\"catch\"](6);\n                    console.error(\"Failed to fetch list\", listUrl, _ctx.t0);\n                    if (!isLast) {\n                        _ctx.next = 17;\n                        break;\n                    }\n                    throw new Error(\"Failed to download list \".concat(listUrl));\n                case 17:\n                    return _ctx.abrupt(\"continue\", 31);\n                case 18:\n                    if (response.ok) {\n                        _ctx.next = 22;\n                        break;\n                    }\n                    if (!isLast) {\n                        _ctx.next = 21;\n                        break;\n                    }\n                    throw new Error(\"Failed to download list \".concat(listUrl));\n                case 21:\n                    return _ctx.abrupt(\"continue\", 31);\n                case 22:\n                    _ctx.next = 24;\n                    return response.json();\n                case 24:\n                    json = _ctx.sent;\n                    if (tokenListValidator(json)) {\n                        _ctx.next = 30;\n                        break;\n                    }\n                    ;\n                    ;\n                    validationErrors = (ref1 = (ref = tokenListValidator.errors) === null || ref === void 0 ? void 0 : ref.reduce(function(memo, error) {\n                        var _message;\n                        var add = \"\".concat(error.dataPath, \" \").concat((_message = error.message) !== null && _message !== void 0 ? _message : \"\");\n                        return memo.length > 0 ? \"\".concat(memo, \"; \").concat(add) : \"\".concat(add);\n                    }, \"\")) !== null && ref1 !== void 0 ? ref1 : \"unknown error\";\n                    throw new Error(\"Token list failed validation: \".concat(validationErrors));\n                case 30:\n                    return _ctx.abrupt(\"return\", json);\n                case 31:\n                    i++;\n                    _ctx.next = 2;\n                    break;\n                case 34:\n                    throw new Error(\"Unrecognized list URL protocol.\");\n                case 35:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                6,\n                12\n            ]\n        ]);\n    }));\n    return _getTokenList.apply(this, arguments);\n}\n\n\n/***/ }),\n\n/***/ 90570:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ uriToHttp; }\n/* harmony export */ });\n/* eslint-disable no-case-declarations */ /**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */ function uriToHttp(uri) {\n    var protocol = uri.split(\":\")[0].toLowerCase();\n    switch(protocol){\n        case \"https\":\n            return [\n                uri\n            ];\n        case \"http\":\n            return [\n                \"https\".concat(uri.substring(4)),\n                uri\n            ];\n        case \"ipfs\":\n            var ref;\n            var hash = (ref = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)) === null || ref === void 0 ? void 0 : ref[2];\n            return [\n                \"https://cloudflare-ipfs.com/ipfs/\".concat(hash, \"/\"),\n                \"https://ipfs.io/ipfs/\".concat(hash, \"/\")\n            ];\n        case \"ipns\":\n            var ref1;\n            var name = (ref1 = uri.match(/^ipns:(\\/\\/)?(.*)$/i)) === null || ref1 === void 0 ? void 0 : ref1[2];\n            return [\n                \"https://cloudflare-ipfs.com/ipns/\".concat(name, \"/\"),\n                \"https://ipfs.io/ipns/\".concat(name, \"/\")\n            ];\n        default:\n            return [];\n    }\n};\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","r","d","getTokenList","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__","_home_enoch_oven_swap_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__","_home_enoch_oven_swap_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default","n","_uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_1__","ajv__WEBPACK_IMPORTED_MODULE_2__","ajv__WEBPACK_IMPORTED_MODULE_2___default","_uriToHttp__WEBPACK_IMPORTED_MODULE_4__","tokenListValidator","allErrors","compile","listUrl","_getTokenList","apply","arguments","Z","mark","_callee","urls","i","url","isLast","response","json","ref","ref1","validationErrors","wrap","_ctx","prev","next","length","fetch","sent","t0","console","error","concat","abrupt","ok","errors","reduce","memo","_message","add","dataPath","message","stop","uriToHttp","uri","protocol","split","toLowerCase","substring","hash","match","name"],"sourceRoot":""}