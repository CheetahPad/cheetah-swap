{"version":3,"file":"static/chunks/pages/limit-orders-abb593c1454fafad.js","mappings":"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","sources":["webpack://_N_E/?cac5","webpack://_N_E/./packages/uikit/src/components/Table/Cell.tsx","webpack://_N_E/./packages/uikit/src/components/Table/Table.tsx","webpack://_N_E/./src/components/DisclaimerModal/index.tsx","webpack://_N_E/./src/hooks/useSubgraphHealth.ts","webpack://_N_E/./src/components/SubgraphHealthIndicator/index.tsx","webpack://_N_E/./src/views/LimitOrders/utils/getPriceForOneToken.ts","webpack://_N_E/./src/state/limitOrders/hooks.ts","webpack://_N_E/./src/views/LimitOrders/types.ts","webpack://_N_E/./src/views/LimitOrders/hooks/useGelatoLimitOrdersHistory.ts","webpack://_N_E/./src/hooks/limitOrders/useGelatoLimitOrdersHandlers.ts","webpack://_N_E/./src/hooks/limitOrders/useGelatoLimitOrders.ts","webpack://_N_E/./src/hooks/limitOrders/useGasOverhead.ts","webpack://_N_E/./src/views/LimitOrders/components/ClaimWarning.tsx","webpack://_N_E/./src/views/LimitOrders/styles.tsx","webpack://_N_E/./src/views/LimitOrders/components/CurrencyInputHeader.tsx","webpack://_N_E/./src/views/LimitOrders/utils/getRatePercentageMessage.ts","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderPrice.tsx","webpack://_N_E/./src/views/LimitOrders/components/SwitchTokensButton.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/OrderTab.tsx","webpack://_N_E/./src/views/LimitOrders/hooks/useFormattedOrderData.ts","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/TextIcon.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/CurrencyFormat.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/CellFormat.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderDisclaimer.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/DetailLimitOrderModal.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/OrderStatus.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/CompactRow.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/CompactLimitOrderTable.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/FullRow.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/SpaciousLimitOrderTable.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/NoOrdersMessage.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/LoadingTable.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/TableNavigation.tsx","webpack://_N_E/./src/views/LimitOrders/components/LimitOrderTable/index.tsx","webpack://_N_E/./src/views/LimitOrders/components/ConfirmLimitOrderModal.tsx","webpack://_N_E/./src/views/LimitOrders/utils/getRatePercentageDifference.ts","webpack://_N_E/./src/views/LimitOrders/index.tsx","webpack://_N_E/./src/pages/limit-orders.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/limit-orders\",\n      function () {\n        return require(\"private-next-pages/limit-orders.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/limit-orders\"])\n      });\n    }\n  ","import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  border-bottom: 1px solid \",\n        \";\\n  color: \",\n        \";\\n  padding: 16px;\\n  vertical-align: middle;\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = _tagged_template_literal([\n        \"\\n  color: \",\n        \";\\n  font-size: 12px;\\n  text-transform: uppercase;\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nimport styled from \"styled-components\";\nimport { typography } from \"styled-system\";\nexport var Td = styled.td.withConfig({\n    componentId: \"sc-ea0e7240-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.text;\n}, typography);\nexport var Th = styled(Td).attrs({\n    as: \"th\"\n}).withConfig({\n    componentId: \"sc-ea0e7240-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.colors.secondary;\n});\n","import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  max-width: 100%;\\n  width: 100%;\\n\\n  tbody tr:last-child {\\n    \",\n        \" {\\n      border-bottom: 0;\\n    }\\n  }\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { Td } from \"./Cell\";\nvar Table = styled.table.withConfig({\n    componentId: \"sc-4fe367f7-0\"\n})(_templateObject(), Td, space);\nexport default Table;\n","import { useState, useCallback } from 'react'\nimport {\n  ModalContainer,\n  ModalBody,\n  Text,\n  Button,\n  Flex,\n  InjectedModalProps,\n  Checkbox,\n  ModalHeader,\n  ModalTitle,\n  Heading,\n  Box,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\n\ninterface CheckType {\n  key: string\n  value?: boolean\n  content: string\n}\n\ninterface RiskDisclaimerProps extends InjectedModalProps {\n  onSuccess: () => void\n  checks: CheckType[]\n  header: string\n  id: string\n  subtitle?: string\n}\n\nconst GradientModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  padding-bottom: 24px;\n  padding-top: 24px;\n`\n\n// TODO: Copy from src/views/Predictions/components/RiskDisclaimer.tsx\n// Will replace that with this modal.\n\nconst DisclaimerModal: React.FC<RiskDisclaimerProps> = ({ id, onSuccess, onDismiss, checks, header, subtitle }) => {\n  const [checkState, setCheckState] = useState(checks || [])\n  const { t } = useTranslation()\n\n  const handleSetAcknowledgeRisk = useCallback(\n    (currentKey) => {\n      const newCheckState = checkState.map((check) => {\n        if (currentKey === check.key) {\n          return { ...check, value: !check.value }\n        }\n\n        return check\n      })\n\n      setCheckState(newCheckState)\n    },\n    [checkState],\n  )\n\n  const handleConfirm = useCallback(() => {\n    onSuccess()\n    onDismiss()\n  }, [onSuccess, onDismiss])\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\" id={id}>\n      <GradientModalHeader>\n        <ModalTitle>\n          <Heading scale=\"lg\">{t('Welcome!')}</Heading>\n        </ModalTitle>\n      </GradientModalHeader>\n      <ModalBody p=\"24px\" maxWidth={['100%', '100%', '100%', '400px']}>\n        <Box maxHeight=\"300px\" overflowY=\"auto\">\n          <Heading as=\"h3\" mb=\"24px\">\n            {header}\n          </Heading>\n          {subtitle && (\n            <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n              {subtitle}\n            </Text>\n          )}\n          {checkState.map((check) => (\n            <label\n              key={check.key}\n              htmlFor={check.key}\n              style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}\n            >\n              <Flex alignItems=\"center\">\n                <div style={{ flex: 'none', alignSelf: 'flex-start', paddingTop: '8px' }}>\n                  <Checkbox\n                    id={check.key}\n                    scale=\"sm\"\n                    checked={check.value}\n                    onChange={() => handleSetAcknowledgeRisk(check.key)}\n                  />\n                </div>\n                <Text ml=\"8px\">{check.content}</Text>\n              </Flex>\n            </label>\n          ))}\n        </Box>\n        <Button\n          id={`${id}-continue`}\n          width=\"100%\"\n          onClick={handleConfirm}\n          disabled={checkState.some((check) => !check.value)}\n        >\n          {t('Continue')}\n        </Button>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default DisclaimerModal\n","import { useState } from 'react'\nimport { request, gql } from 'graphql-request'\nimport { bscRpcProvider } from 'utils/providers'\nimport { GRAPH_HEALTH } from 'config/constants/endpoints'\nimport { useSlowRefreshEffect } from './useRefreshEffect'\n\nexport enum SubgraphStatus {\n  OK,\n  WARNING,\n  NOT_OK,\n  UNKNOWN,\n}\n\nexport type SubgraphHealthState = {\n  status: SubgraphStatus\n  currentBlock: number\n  chainHeadBlock: number\n  latestBlock: number\n  blockDifference: number\n}\n\nconst NOT_OK_BLOCK_DIFFERENCE = 200 // ~15 minutes delay\nconst WARNING_BLOCK_DIFFERENCE = 50 // ~2.5 minute delay\n\nconst useSubgraphHealth = (subgraphName: string) => {\n  const [sgHealth, setSgHealth] = useState<SubgraphHealthState>({\n    status: SubgraphStatus.UNKNOWN,\n    currentBlock: 0,\n    chainHeadBlock: 0,\n    latestBlock: 0,\n    blockDifference: 0,\n  })\n\n  useSlowRefreshEffect(\n    (currentBlockNumber) => {\n      const getSubgraphHealth = async () => {\n        try {\n          const [{ indexingStatusForCurrentVersion }, currentBlock] = await Promise.all([\n            request(\n              GRAPH_HEALTH,\n              gql`\n            query getNftMarketSubgraphHealth {\n              indexingStatusForCurrentVersion(subgraphName: \"${subgraphName}\") {\n                synced\n                health\n                chains {\n                  chainHeadBlock {\n                    number\n                  }\n                  latestBlock {\n                    number\n                  }\n                }\n              }\n            }\n          `,\n            ),\n            currentBlockNumber ? Promise.resolve(currentBlockNumber) : bscRpcProvider.getBlockNumber(),\n          ])\n\n          const isHealthy = indexingStatusForCurrentVersion.health === 'healthy'\n          const chainHeadBlock = parseInt(indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number)\n          const latestBlock = parseInt(indexingStatusForCurrentVersion.chains[0].latestBlock.number)\n          const blockDifference = currentBlock - latestBlock\n          // Sometimes subgraph might report old block as chainHeadBlock, so its important to compare\n          // it with block retrieved from simpleRpcProvider.getBlockNumber()\n          const chainHeadBlockDifference = currentBlock - chainHeadBlock\n          if (\n            !isHealthy ||\n            blockDifference > NOT_OK_BLOCK_DIFFERENCE ||\n            chainHeadBlockDifference > NOT_OK_BLOCK_DIFFERENCE\n          ) {\n            setSgHealth({ status: SubgraphStatus.NOT_OK, currentBlock, chainHeadBlock, latestBlock, blockDifference })\n          } else if (\n            blockDifference > WARNING_BLOCK_DIFFERENCE ||\n            chainHeadBlockDifference > WARNING_BLOCK_DIFFERENCE\n          ) {\n            setSgHealth({ status: SubgraphStatus.WARNING, currentBlock, chainHeadBlock, latestBlock, blockDifference })\n          } else {\n            setSgHealth({ status: SubgraphStatus.OK, currentBlock, chainHeadBlock, latestBlock, blockDifference })\n          }\n        } catch (error) {\n          console.error(`Failed to perform health check for ${subgraphName} subgraph`, error)\n        }\n      }\n      getSubgraphHealth()\n    },\n    [subgraphName],\n  )\n\n  return sgHealth\n}\n\nexport default useSubgraphHealth\n","import { BSC_BLOCK_TIME } from 'config'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslateFunction } from 'contexts/Localization/types'\nimport styled from 'styled-components'\nimport { Card, Flex, Box, InfoIcon, Text, useTooltip } from '@pancakeswap/uikit'\nimport { useSubgraphHealthIndicatorManager } from 'state/user/hooks'\nimport useSubgraphHealth, { SubgraphStatus } from 'hooks/useSubgraphHealth'\n\nconst StyledCard = styled(Card)`\n  border-radius: 8px;\n  > div {\n    border-radius: 8px;\n  }\n  user-select: none;\n`\n\nconst IndicatorWrapper = styled(Flex)`\n  gap: 7px;\n`\n\nconst Dot = styled(Box)<{ $color: string }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${({ $color, theme }) => theme.colors[$color]};\n`\n\ninterface CustomDescriptions {\n  delayed: string\n  slow: string\n  healthy: string\n}\n\nconst indicator = (t: TranslateFunction, customDescriptions?: CustomDescriptions) =>\n  ({\n    delayed: {\n      label: t('Delayed'),\n      color: 'failure',\n      description:\n        customDescriptions?.delayed ??\n        t(\n          'Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.',\n        ),\n    },\n    slow: {\n      label: t('Slight delay'),\n      color: 'warning',\n      description:\n        customDescriptions?.slow ??\n        t(\n          'Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.',\n        ),\n    },\n    healthy: {\n      label: t('Fast'),\n      color: 'success',\n      description: customDescriptions?.healthy ?? t('No issues with the subgraph.'),\n    },\n  } as const)\n\ntype Indicator = keyof ReturnType<typeof indicator>\n\nconst getIndicator = (sgStatus: SubgraphStatus): Indicator => {\n  if (sgStatus === SubgraphStatus.NOT_OK) {\n    return 'delayed'\n  }\n\n  if (sgStatus === SubgraphStatus.WARNING) {\n    return 'slow'\n  }\n\n  return 'healthy'\n}\n\nexport interface BlockResponse {\n  blocks: {\n    number: string\n  }[]\n}\n\nconst SubgraphHealthIndicator: React.FC<{\n  subgraphName: string\n  inline?: boolean\n  customDescriptions?: CustomDescriptions\n  obeyGlobalSetting?: boolean\n}> = ({ subgraphName, inline, customDescriptions, obeyGlobalSetting }) => {\n  const { t } = useTranslation()\n  const { status, currentBlock, blockDifference, latestBlock } = useSubgraphHealth(subgraphName)\n  const [alwaysShowIndicator] = useSubgraphHealthIndicatorManager()\n  const forceIndicatorDisplay = status === SubgraphStatus.WARNING || status === SubgraphStatus.NOT_OK\n  const showIndicator = (obeyGlobalSetting && alwaysShowIndicator) || forceIndicatorDisplay\n\n  const indicatorProps = indicator(t, customDescriptions)\n\n  const secondRemainingBlockSync = blockDifference * BSC_BLOCK_TIME\n\n  const indicatorValue = getIndicator(status)\n\n  const current = indicatorProps[indicatorValue]\n\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\n    <TooltipContent\n      currentBlock={currentBlock}\n      secondRemainingBlockSync={secondRemainingBlockSync}\n      blockNumberFromSubgraph={latestBlock}\n      {...current}\n    />,\n    {\n      placement: 'top',\n    },\n  )\n\n  if (!latestBlock || !currentBlock || !showIndicator) {\n    return null\n  }\n\n  if (inline) {\n    return (\n      <IndicatorWrapper alignItems=\"center\" justifyContent=\"flex-end\" ref={targetRef}>\n        <Dot $color={current.color} />\n        <Text>{current.label}</Text>\n        <InfoIcon />\n        {tooltipVisible && tooltip}\n      </IndicatorWrapper>\n    )\n  }\n\n  return (\n    <Box position=\"fixed\" bottom=\"55px\" right=\"5%\" ref={targetRef} data-test=\"subgraph-health-indicator\">\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <IndicatorWrapper alignItems=\"center\" p=\"10px\">\n          <Dot $color={current.color} />\n          <Text>{current.label}</Text>\n          <InfoIcon />\n        </IndicatorWrapper>\n      </StyledCard>\n    </Box>\n  )\n}\n\nconst TooltipContent = ({\n  color,\n  label,\n  description,\n  currentBlock,\n  secondRemainingBlockSync,\n  blockNumberFromSubgraph,\n}) => {\n  const { t } = useTranslation()\n  return (\n    <Box>\n      <IndicatorWrapper pb=\"10px\">\n        <Dot $color={color} />\n        <Text>{label}</Text>\n      </IndicatorWrapper>\n      <Text pb=\"24px\">{description}</Text>\n      <Text>\n        <strong>{t('Chain Head Block')}:</strong> {currentBlock}\n      </Text>\n      <Text>\n        <strong>{t('Latest Subgraph Block')}:</strong> {blockNumberFromSubgraph}\n      </Text>\n      <Text>\n        <strong>{t('Delay')}:</strong> {currentBlock - blockNumberFromSubgraph} ({secondRemainingBlockSync}s)\n      </Text>\n    </Box>\n  )\n}\n\nexport default SubgraphHealthIndicator\n","import { CurrencyAmount, Price } from '@pancakeswap/sdk'\n\n/**\n * Given certain amount if input and output tokens\n * calculate the price for 1 input token in terms of output tokens\n */\nconst getPriceForOneToken = (inputAmount: CurrencyAmount, outputAmount: CurrencyAmount) => {\n  if (!inputAmount || !outputAmount || inputAmount.equalTo(0) || outputAmount.equalTo(0)) {\n    return undefined\n  }\n  return new Price(inputAmount.currency, outputAmount.currency, inputAmount.raw, outputAmount.raw)\n}\n\nexport default getPriceForOneToken\n","import JSBI from 'jsbi'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ParsedUrlQuery } from 'querystring'\nimport { Currency, CurrencyAmount, TokenAmount, Trade, Token, Price, ETHER } from '@pancakeswap/sdk'\nimport { useState, useEffect, useCallback, useMemo } from 'react'\nimport { DEFAULT_INPUT_CURRENCY, DEFAULT_OUTPUT_CURRENCY, BIG_INT_TEN } from 'config/constants/exchange'\nimport { useRouter } from 'next/router'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport getPriceForOneToken from 'views/LimitOrders/utils/getPriceForOneToken'\nimport { isAddress } from 'utils'\nimport tryParseAmount from 'utils/tryParseAmount'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { replaceLimitOrdersState, selectCurrency, setRateType, switchCurrencies, typeInput } from './actions'\nimport { Field, Rate, OrderState } from './types'\nimport { AppState, useAppDispatch } from '..'\n\n// Get desired input amount in output basis mode\nconst getDesiredInput = (\n  outputValue: string,\n  exchangeRate: string,\n  inputCurrency: Currency,\n  outputCurrency: Currency,\n  isInverted: boolean,\n) => {\n  if (!outputValue || !inputCurrency || !outputCurrency) {\n    return undefined\n  }\n  const parsedOutAmount = tryParseAmount(outputValue, isInverted ? inputCurrency : outputCurrency)\n  const parsedExchangeRate = tryParseAmount(exchangeRate, isInverted ? inputCurrency : outputCurrency)\n  if (!parsedOutAmount || !parsedExchangeRate) {\n    return undefined\n  }\n\n  if (isInverted) {\n    const invertedResultAsFraction = parsedOutAmount.asFraction\n      .multiply(parsedExchangeRate.asFraction)\n      .multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals)))\n    const invertedResultAsAmount =\n      inputCurrency instanceof Token\n        ? new TokenAmount(inputCurrency, invertedResultAsFraction.toFixed(0))\n        : CurrencyAmount.ether(invertedResultAsFraction.toFixed(0))\n\n    return invertedResultAsAmount\n  }\n  const resultAsFraction = parsedOutAmount.asFraction\n    .divide(parsedExchangeRate.asFraction)\n    .multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals)))\n  const resultAsAmount =\n    inputCurrency instanceof Token\n      ? new TokenAmount(inputCurrency, resultAsFraction.quotient.toString())\n      : CurrencyAmount.ether(resultAsFraction.quotient.toString())\n  return resultAsAmount\n}\n\n// Get desired output amount in input basis mode\nconst getDesiredOutput = (\n  inputValue: string,\n  exchangeRate: string,\n  inputCurrency: Currency,\n  outputCurrency: Currency,\n  isInverted: boolean,\n): CurrencyAmount | undefined => {\n  if (!inputValue || !inputCurrency || !outputCurrency) {\n    return undefined\n  }\n  const parsedInputAmount = tryParseAmount(inputValue, isInverted ? outputCurrency : inputCurrency)\n  const parsedExchangeRate = tryParseAmount(exchangeRate, isInverted ? inputCurrency : outputCurrency)\n\n  if (!parsedExchangeRate || !parsedInputAmount) {\n    return undefined\n  }\n\n  if (isInverted) {\n    const invertedResultAsFraction = parsedInputAmount.asFraction\n      .multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(outputCurrency.decimals)))\n      .divide(parsedExchangeRate.asFraction)\n    const invertedResultAsAmount =\n      outputCurrency instanceof Token\n        ? new TokenAmount(outputCurrency, invertedResultAsFraction.toFixed(0))\n        : CurrencyAmount.ether(invertedResultAsFraction.toFixed(0))\n\n    return invertedResultAsAmount\n  }\n\n  const resultAsFraction = parsedInputAmount.asFraction\n    .multiply(parsedExchangeRate.asFraction)\n    .multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(outputCurrency.decimals)))\n  const resultAsAmount =\n    outputCurrency instanceof Token\n      ? new TokenAmount(outputCurrency, resultAsFraction.quotient.toString())\n      : CurrencyAmount.ether(resultAsFraction.quotient.toString())\n  return resultAsAmount\n}\n\n// Just returns Redux state for limitOrders\nexport const useOrderState = (): AppState['limitOrders'] => {\n  return useSelector<AppState, AppState['limitOrders']>((state) => state.limitOrders)\n}\n\n// Returns handlers to change user-defined parts of limitOrders state\nexport const useOrderActionHandlers = (): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRateType: (rateType: Rate) => void\n} => {\n  const dispatch = useDispatch()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRateType = useCallback(\n    (rateType: Rate) => {\n      dispatch(setRateType({ rateType }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRateType,\n  }\n}\n\nexport interface DerivedOrderInfo {\n  currencies: { input: Currency | Token | undefined; output: Currency | Token | undefined }\n  currencyBalances: {\n    input: CurrencyAmount | undefined\n    output: CurrencyAmount | undefined\n  }\n  inputError?: string\n  trade: Trade | undefined\n  parsedAmounts: {\n    input: CurrencyAmount | undefined\n    output: CurrencyAmount | undefined\n  }\n  formattedAmounts: {\n    input: string\n    output: string\n    price: string\n  }\n  rawAmounts: {\n    input: string | undefined\n    output: string | undefined\n  }\n  price: Price | undefined\n  wrappedCurrencies: {\n    input: Token\n    output: Token\n  }\n  singleTokenPrice: {\n    [key: string]: number\n  }\n  currencyIds: {\n    input: string\n    output: string\n  }\n}\n\nconst getErrorMessage = (\n  account: string,\n  wrappedCurrencies: {\n    input: Token\n    output: Token\n  },\n  currencies: { input: Currency | Token; output: Currency | Token },\n  currencyBalances: { input: CurrencyAmount; output: CurrencyAmount },\n  parsedAmounts: { input: CurrencyAmount; output: CurrencyAmount },\n  trade: Trade,\n  price: Price,\n  rateType: Rate,\n) => {\n  if (!account) {\n    return 'Connect Wallet'\n  }\n  if (\n    wrappedCurrencies.input &&\n    wrappedCurrencies.output &&\n    wrappedCurrencies.input.address.toLowerCase() === wrappedCurrencies.output.address.toLowerCase()\n  ) {\n    return 'Order not allowed'\n  }\n  const hasBothTokensSelected = currencies.input && currencies.output\n  if (!hasBothTokensSelected) {\n    return 'Select a token'\n  }\n  const hasAtLeastOneParsedAmount = parsedAmounts.input || parsedAmounts.output\n\n  const tradeIsNotAvailable = !trade || !trade?.route\n  if (hasAtLeastOneParsedAmount && tradeIsNotAvailable) {\n    return 'Insufficient liquidity for this trade'\n  }\n  const someParsedAmountIsMissing = !parsedAmounts.input || !parsedAmounts.output\n  if (someParsedAmountIsMissing) {\n    return 'Enter an amount'\n  }\n  if (currencyBalances.input && currencyBalances.input.lessThan(parsedAmounts.input)) {\n    return `Insufficient ${currencyBalances.input.currency.symbol} balance`\n  }\n\n  if (price) {\n    if (\n      rateType === Rate.MUL &&\n      (price.lessThan(trade.executionPrice.asFraction) || price.equalTo(trade.executionPrice.asFraction))\n    ) {\n      return 'Only possible to place sell orders above market rate'\n    }\n    if (\n      rateType === Rate.DIV &&\n      (price.invert().greaterThan(trade.executionPrice.invert().asFraction) ||\n        price.invert().equalTo(trade.executionPrice.invert().asFraction))\n    ) {\n      return 'Only possible to place buy orders below market rate'\n    }\n  }\n\n  return undefined\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport const useDerivedOrderInfo = (): DerivedOrderInfo => {\n  const { account, chainId } = useActiveWeb3React()\n  const {\n    independentField,\n    basisField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    rateType,\n    inputValue,\n    outputValue,\n  } = useOrderState()\n\n  // Get Currency objects based on currencyId strings\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const currencies = useMemo(\n    () => ({\n      input: inputCurrency ?? undefined,\n      output: outputCurrency ?? undefined,\n    }),\n    [inputCurrency, outputCurrency],\n  )\n\n  const wrappedCurrencies = useMemo(\n    () => ({\n      input: wrappedCurrency(currencies.input, chainId),\n      output: wrappedCurrency(currencies.output, chainId),\n    }),\n    [currencies.input, currencies.output, chainId],\n  )\n\n  // Get user balance for selected Currencies\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n  const currencyBalances = {\n    input: relevantTokenBalances[0],\n    output: relevantTokenBalances[1],\n  }\n\n  // Get CurrencyAmount for the inputCurrency amount specified by user\n  const inputAmount = useMemo(() => {\n    return tryParseAmount(inputValue, inputCurrency ?? undefined)\n  }, [inputValue, inputCurrency])\n\n  // Get CurrencyAmount for the outputCurrency amount specified by user\n  const outputAmount = useMemo(() => {\n    return tryParseAmount(outputValue, outputCurrency ?? undefined)\n  }, [outputValue, outputCurrency])\n\n  // Whether user modified the INPUT field most recently (also default initial state)\n  const isExactIn = independentField === Field.INPUT\n  // Whether to base calculations on output field\n  const isOutputBasis = basisField === Field.OUTPUT\n  // Whether user modified the PRICE field most recently\n  const isDesiredRateUpdate = independentField === Field.PRICE\n\n  // Get the amount of outputCurrency you'd receive at the desired price\n  const desiredOutputAsCurrencyAmount = isDesiredRateUpdate\n    ? getDesiredOutput(inputValue, typedValue, inputCurrency, outputCurrency, rateType === Rate.DIV)\n    : undefined\n\n  const desiredInputAsCurrencyAmount = isDesiredRateUpdate\n    ? getDesiredInput(outputValue, typedValue, inputCurrency, outputCurrency, rateType === Rate.DIV)\n    : undefined\n\n  // Convert output to string representation to parse later\n  const desiredOutputAsString =\n    isDesiredRateUpdate && desiredOutputAsCurrencyAmount ? desiredOutputAsCurrencyAmount?.toSignificant(6) : typedValue\n\n  // If independentField === Field.PRICE -> this won't be used\n  const parsedTypedAmount = !isDesiredRateUpdate\n    ? tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n    : undefined\n\n  // If not price - cast input or output typing to CurrencyAmount\n  // if price - whatever amount of tokens received on the desired price\n  const tradeAmount = isDesiredRateUpdate\n    ? isOutputBasis\n      ? outputAmount\n      : tryParseAmount(desiredOutputAsString, outputCurrency)\n    : tryParseAmount(typedValue, isExactIn ? inputCurrency : outputCurrency)\n\n  // Get trade object\n  // gonna be null if not isExactIn or if there is no outputCurrency selected\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? tradeAmount : undefined, outputCurrency)\n  // Works similarly to swap when you modify outputCurrency\n  // But also is used when desired rate is modified\n  // in other words it looks for a trade of inputCurrency for whatever the amount of tokens would be at desired rate\n  const bestTradeExactOut = useTradeExactOut(inputCurrency, !isExactIn || isOutputBasis ? tradeAmount : undefined)\n  const trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  // Get swap price for single token disregarding slippage and price impact\n  // needed for chart's latest value\n  const oneInputToken = tryParseAmount('1', currencies.input)\n  const singleTokenTrade = useTradeExactIn(oneInputToken, currencies.output)\n  const singleTokenPrice = parseFloat(singleTokenTrade?.executionPrice?.toSignificant(6))\n  const inverseSingleTokenPrice = 1 / singleTokenPrice\n\n  // Get \"final\" amounts\n  const parsedAmounts = useMemo(() => {\n    // Use trade amount as default\n    let input = trade?.inputAmount\n    if (!isOutputBasis) {\n      // If we're not in output basis mode then we're in input basis mode\n      // hence - no matter what keep input as specified by user\n      input = inputAmount\n    } else if (independentField === Field.INPUT) {\n      // If user touching input field -> whatever they type currently\n      input = parsedTypedAmount\n    } else if (isDesiredRateUpdate) {\n      // If user modifies the price AND is wishing for specific output amount -> hypothetical input amount at better price\n      input = desiredInputAsCurrencyAmount\n    }\n    // Use trade amount as default\n    // If we're in output basis mode - no matter what keep output as specified by user\n    let output: CurrencyAmount | TokenAmount\n    if (isOutputBasis) {\n      output = outputAmount\n    } else if (independentField === Field.OUTPUT) {\n      // If user touching input field -> whatever they type currently\n      output = parsedTypedAmount\n    } else if (isDesiredRateUpdate) {\n      // If user modifies the price AND is wishing for specific input amount -> hypothetical input amount at better price\n      output = desiredOutputAsCurrencyAmount\n    } else {\n      output = trade?.outputAmount\n    }\n    return {\n      input,\n      output,\n    }\n  }, [\n    independentField,\n    parsedTypedAmount,\n    inputAmount,\n    outputAmount,\n    trade,\n    isDesiredRateUpdate,\n    isOutputBasis,\n    desiredInputAsCurrencyAmount,\n    desiredOutputAsCurrencyAmount,\n  ])\n\n  // Calculate the price for specified swap\n  const price = useMemo(\n    () => getPriceForOneToken(parsedAmounts.input, parsedAmounts.output),\n    [parsedAmounts.input, parsedAmounts.output],\n  )\n\n  // Formatted amounts to use in the UI\n  const formattedAmounts = {\n    input: !isOutputBasis && inputValue && inputValue !== '' ? inputValue : parsedAmounts.input?.toSignificant(6) ?? '',\n    output:\n      isOutputBasis && outputValue && outputValue !== '' ? outputValue : parsedAmounts.output?.toSignificant(6) ?? '',\n    price:\n      independentField === Field.PRICE\n        ? typedValue\n        : rateType === Rate.MUL\n        ? price?.toSignificant(6) ?? ''\n        : price?.invert().toSignificant(6) ?? '',\n  }\n\n  // Get raw amounts that will be used in smart contract call\n  const rawAmounts = useMemo(\n    () => ({\n      input: inputCurrency\n        ? parsedAmounts.input?.multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals))).toFixed(0)\n        : undefined,\n\n      output: outputCurrency\n        ? parsedAmounts.output\n            ?.multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(outputCurrency.decimals)))\n            .toFixed(0)\n        : undefined,\n    }),\n    [inputCurrency, outputCurrency, parsedAmounts],\n  )\n\n  return {\n    currencies,\n    currencyBalances,\n    inputError: getErrorMessage(\n      account,\n      wrappedCurrencies,\n      currencies,\n      currencyBalances,\n      parsedAmounts,\n      trade,\n      price,\n      rateType,\n    ),\n    formattedAmounts,\n    trade: trade ?? undefined,\n    parsedAmounts,\n    price,\n    rawAmounts,\n    wrappedCurrencies,\n    singleTokenPrice: {\n      [wrappedCurrencies.input?.address]: singleTokenPrice,\n      [wrappedCurrencies.output?.address]: inverseSingleTokenPrice,\n    },\n    currencyIds: {\n      input: inputCurrencyId,\n      output: outputCurrencyId,\n    },\n  }\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  return typeof urlParam === 'string' && !Number.isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return ''\n}\n\n// TODO: combine with swap's version but use generic type. Same for helpers above\n// Note: swap has recipient and other things. Merging these 2 would probably be much easier if we get rid of recipient\n// Also the whole thing doesn't make sense, in swap inputValue is not initialized but typedValue is. WTF\nconst queryParametersToSwapState = (parsedQs: ParsedUrlQuery): OrderState => {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency) || DEFAULT_INPUT_CURRENCY\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency) || DEFAULT_OUTPUT_CURRENCY\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    inputValue: '',\n    outputValue: '',\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    basisField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    rateType: Rate.MUL,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport const useDefaultsFromURLSearch = ():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const { query } = useRouter()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(query)\n\n    dispatch(replaceLimitOrdersState(parsed))\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n  }, [dispatch, chainId, query])\n\n  return result\n}\n","import { Order } from '@gelatonetwork/limit-orders-lib'\n\nexport enum ORDER_CATEGORY {\n  Open = 0,\n  History = 1,\n}\n\nexport enum LimitOrderStatus {\n  OPEN = 'open',\n  CANCELLED = 'cancelled',\n  EXECUTED = 'executed',\n}\n\nexport interface LimitOrderTableProps {\n  orders: Order[]\n  orderCategory: ORDER_CATEGORY\n  isCompact: boolean\n}\n","import { Order, GelatoLimitOrders } from '@gelatonetwork/limit-orders-lib'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useSWR from 'swr'\nimport { SLOW_INTERVAL } from 'config/constants'\nimport { useMemo } from 'react'\n\nimport { getLSOrders, saveOrder, saveOrders, hashOrderSet, hashOrder } from 'utils/localStorageOrders'\nimport useGelatoLimitOrdersLib from 'hooks/limitOrders/useGelatoLimitOrdersLib'\n\nimport orderBy from 'lodash/orderBy'\nimport { ORDER_CATEGORY, LimitOrderStatus } from '../types'\n\nexport const OPEN_ORDERS_SWR_KEY = ['gelato', 'openOrders']\nexport const EXECUTED_CANCELLED_ORDERS_SWR_KEY = ['gelato', 'cancelledExecutedOrders']\n\nfunction newOrdersFirst(a: Order, b: Order) {\n  return Number(b.updatedAt) - Number(a.updatedAt)\n}\n\nconst isOrderUpdated = (oldOrder: Order, newOrder: Order): boolean => {\n  return newOrder ? Number(oldOrder.updatedAt) < Number(newOrder.updatedAt) : false\n}\n\nasync function syncOrderToLocalStorage({\n  gelatoLimitOrders,\n  chainId,\n  account,\n  orders,\n  syncStatuses,\n}: {\n  chainId: number\n  account: string\n  orders: Order[]\n  syncStatuses?: LimitOrderStatus[]\n  gelatoLimitOrders?: GelatoLimitOrders\n}) {\n  const allOrdersLS = getLSOrders(chainId, account)\n\n  const lsOrdersHashSet = hashOrderSet(allOrdersLS)\n  const newOrders = orders.filter((order: Order) => !lsOrdersHashSet.has(hashOrder(order)))\n  saveOrders(chainId, account, newOrders)\n\n  const typeOrdersLS = syncStatuses\n    ? allOrdersLS.filter((order) => syncStatuses.some((type) => type === order.status))\n    : []\n\n  for (let i = 0; i < typeOrdersLS.length; i++) {\n    const confOrder = typeOrdersLS[i]\n    try {\n      const graphOrder =\n        orders.find((order) => confOrder.id.toLowerCase() === order.id.toLowerCase()) ??\n        // eslint-disable-next-line no-await-in-loop\n        (gelatoLimitOrders ? await gelatoLimitOrders.getOrder(confOrder.id) : null)\n      if (isOrderUpdated(confOrder, graphOrder)) {\n        saveOrder(chainId, account, graphOrder)\n      }\n    } catch (e) {\n      console.error('Error fetching order from subgraph', e)\n    }\n  }\n}\n\nconst useOpenOrders = (turnOn: boolean): Order[] => {\n  const { account, chainId } = useActiveWeb3React()\n\n  const gelatoLimitOrders = useGelatoLimitOrdersLib()\n\n  const startFetch = turnOn && gelatoLimitOrders && account && chainId\n\n  const { data } = useSWR(\n    startFetch ? OPEN_ORDERS_SWR_KEY : null,\n    async () => {\n      try {\n        const orders = await gelatoLimitOrders.getOpenOrders(account.toLowerCase(), false)\n\n        await syncOrderToLocalStorage({\n          orders,\n          chainId,\n          account,\n          syncStatuses: [LimitOrderStatus.OPEN],\n          gelatoLimitOrders,\n        })\n      } catch (e) {\n        console.error('Error fetching open orders from subgraph', e)\n      }\n\n      const openOrdersLS = getLSOrders(chainId, account).filter((order) => order.status === LimitOrderStatus.OPEN)\n\n      const pendingOrdersLS = getLSOrders(chainId, account, true)\n\n      return [\n        ...openOrdersLS.filter((order: Order) => {\n          const orderCancelled = pendingOrdersLS\n            .filter((pendingOrder) => pendingOrder.status === LimitOrderStatus.CANCELLED)\n            .find((pendingOrder) => pendingOrder.id.toLowerCase() === order.id.toLowerCase())\n          return !orderCancelled\n        }),\n        ...pendingOrdersLS.filter((order) => order.status === LimitOrderStatus.OPEN),\n      ].sort(newOrdersFirst)\n    },\n    {\n      refreshInterval: SLOW_INTERVAL,\n    },\n  )\n\n  return startFetch ? data : []\n}\n\nconst useHistoryOrders = (turnOn: boolean): Order[] => {\n  const { account, chainId } = useActiveWeb3React()\n  const gelatoLimitOrders = useGelatoLimitOrdersLib()\n\n  const startFetch = turnOn && gelatoLimitOrders && account && chainId\n\n  const { data } = useSWR(\n    startFetch ? EXECUTED_CANCELLED_ORDERS_SWR_KEY : null,\n    async () => {\n      try {\n        const acc = account.toLowerCase()\n\n        const [canOrders, exeOrders] = await Promise.all([\n          gelatoLimitOrders.getCancelledOrders(acc, false),\n          gelatoLimitOrders.getExecutedOrders(acc, false),\n        ])\n\n        await syncOrderToLocalStorage({\n          orders: [...canOrders, ...exeOrders],\n          chainId,\n          account,\n        })\n      } catch (e) {\n        console.error('Error fetching history orders from subgraph', e)\n      }\n\n      const executedOrdersLS = getLSOrders(chainId, account).filter(\n        (order) => order.status === LimitOrderStatus.EXECUTED,\n      )\n\n      const cancelledOrdersLS = getLSOrders(chainId, account).filter(\n        (order) => order.status === LimitOrderStatus.CANCELLED,\n      )\n\n      const pendingCancelledOrdersLS = getLSOrders(chainId, account, true).filter(\n        (order) => order.status === LimitOrderStatus.CANCELLED,\n      )\n\n      return [...pendingCancelledOrdersLS, ...cancelledOrdersLS, ...executedOrdersLS].sort(newOrdersFirst)\n    },\n    {\n      refreshInterval: SLOW_INTERVAL,\n    },\n  )\n\n  return startFetch ? data : []\n}\n\nexport default function useGelatoLimitOrdersHistory(orderCategory: ORDER_CATEGORY) {\n  const historyOrders = useHistoryOrders(orderCategory === ORDER_CATEGORY.History)\n  const openOrders = useOpenOrders(orderCategory === ORDER_CATEGORY.Open)\n\n  const orders = useMemo(\n    () => (orderCategory === ORDER_CATEGORY.Open ? openOrders : historyOrders),\n    [orderCategory, openOrders, historyOrders],\n  )\n\n  return useMemo(\n    () => (Array.isArray(orders) ? orderBy(orders, (order) => parseInt(order.createdAt), 'desc') : orders),\n    [orders],\n  )\n}\n","import { useCallback } from 'react'\nimport { Order } from '@gelatonetwork/limit-orders-lib'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Overrides } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/abstract-provider'\n\nimport { useOrderActionHandlers } from 'state/limitOrders/hooks'\nimport { Field, Rate } from 'state/limitOrders/types'\nimport { Currency, Price } from '@pancakeswap/sdk'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useSWRConfig } from 'swr'\nimport {\n  OPEN_ORDERS_SWR_KEY,\n  EXECUTED_CANCELLED_ORDERS_SWR_KEY,\n} from '../../views/LimitOrders/hooks/useGelatoLimitOrdersHistory'\nimport useGelatoLimitOrdersLib from './useGelatoLimitOrdersLib'\n\nexport interface GelatoLimitOrdersHandlers {\n  handleLimitOrderSubmission: (orderToSubmit: {\n    inputToken: string\n    outputToken: string\n    inputAmount: string\n    outputAmount: string\n    owner: string\n    overrides?: Overrides\n  }) => Promise<TransactionResponse>\n  handleLimitOrderCancellation: (\n    order: Order,\n    orderDetails?: {\n      inputTokenSymbol: string\n      outputTokenSymbol: string\n      inputAmount: string\n      outputAmount: string\n    },\n    overrides?: Overrides,\n  ) => Promise<TransactionResponse>\n  handleInput: (field: Field, value: string) => void\n  handleCurrencySelection: (field: Field.INPUT | Field.OUTPUT, currency: Currency) => void\n  handleSwitchTokens: () => void\n  handleRateType: (rateType: Rate, price?: Price) => void\n}\n\nconst useGelatoLimitOrdersHandlers = (): GelatoLimitOrdersHandlers => {\n  const { chainId, account } = useActiveWeb3React()\n\n  const { mutate } = useSWRConfig()\n\n  const gelatoLimitOrders = useGelatoLimitOrdersLib()\n\n  const addTransaction = useTransactionAdder()\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRateType } = useOrderActionHandlers()\n\n  const handleLimitOrderSubmission = useCallback(\n    async (\n      orderToSubmit: {\n        inputToken: string\n        outputToken: string\n        inputAmount: string\n        outputAmount: string\n        owner: string\n      },\n      overrides?: Overrides,\n    ) => {\n      if (!gelatoLimitOrders) {\n        throw new Error('Could not reach Gelato Limit Orders library')\n      }\n\n      if (!chainId) {\n        throw new Error('No chainId')\n      }\n\n      if (!gelatoLimitOrders?.signer) {\n        throw new Error('No signer')\n      }\n\n      const { witness, payload, order } = await gelatoLimitOrders.encodeLimitOrderSubmissionWithSecret(\n        orderToSubmit.inputToken,\n        orderToSubmit.outputToken,\n        orderToSubmit.inputAmount,\n        orderToSubmit.outputAmount,\n        orderToSubmit.owner,\n      )\n\n      const tx = await gelatoLimitOrders.signer.sendTransaction({\n        ...(overrides ?? {}),\n        to: payload.to,\n        data: payload.data,\n        value: BigNumber.from(payload.value),\n      })\n\n      const now = Math.round(Date.now() / 1000)\n\n      addTransaction(tx, {\n        summary: `Order submission`,\n        type: 'limit-order-submission',\n        order: {\n          ...order,\n          createdTxHash: tx?.hash.toLowerCase(),\n          witness,\n          status: 'open',\n          updatedAt: now.toString(),\n        } as Order,\n      })\n\n      mutate(OPEN_ORDERS_SWR_KEY)\n      mutate(EXECUTED_CANCELLED_ORDERS_SWR_KEY)\n\n      return tx\n    },\n    [addTransaction, chainId, gelatoLimitOrders, mutate],\n  )\n\n  const handleLimitOrderCancellation = useCallback(\n    async (\n      orderToCancel: Order,\n      orderDetails?: {\n        inputTokenSymbol: string\n        outputTokenSymbol: string\n        inputAmount: string\n        outputAmount: string\n      },\n      overrides?: Overrides,\n    ) => {\n      if (!gelatoLimitOrders) {\n        throw new Error('Could not reach Gelato Limit Orders library')\n      }\n\n      if (!chainId) {\n        throw new Error('No chainId')\n      }\n\n      if (!account) {\n        throw new Error('No account')\n      }\n\n      const checkIfOrderExists = Boolean(\n        orderToCancel.module &&\n          orderToCancel.inputToken &&\n          orderToCancel.owner &&\n          orderToCancel.witness &&\n          orderToCancel.data,\n      )\n\n      const tx = await gelatoLimitOrders.cancelLimitOrder(\n        orderToCancel,\n        checkIfOrderExists,\n        overrides ?? {\n          gasLimit: 2_000_000,\n        },\n      )\n\n      const now = Math.round(Date.now() / 1000)\n\n      const summary = orderDetails\n        ? `Order cancellation: ${orderDetails.inputAmount} ${orderDetails.inputTokenSymbol} for ${orderDetails.outputAmount} ${orderDetails.outputTokenSymbol}`\n        : 'Order cancellation'\n\n      addTransaction(tx, {\n        summary,\n        type: 'limit-order-cancellation',\n        order: {\n          ...orderToCancel,\n          updatedAt: now.toString(),\n          status: 'cancelled',\n          cancelledTxHash: tx?.hash.toLowerCase(),\n        },\n      })\n\n      mutate(OPEN_ORDERS_SWR_KEY)\n      mutate(EXECUTED_CANCELLED_ORDERS_SWR_KEY)\n\n      return tx\n    },\n    [gelatoLimitOrders, chainId, account, addTransaction, mutate],\n  )\n\n  const handleInput = useCallback(\n    (field: Field, value: string) => {\n      onUserInput(field, value)\n    },\n    [onUserInput],\n  )\n\n  const handleCurrencySelection = useCallback(\n    (field: Field.INPUT | Field.OUTPUT, currency: Currency) => {\n      onCurrencySelection(field, currency)\n    },\n    [onCurrencySelection],\n  )\n\n  const handleSwitchTokens = useCallback(() => {\n    onSwitchTokens()\n  }, [onSwitchTokens])\n\n  const handleRateType = useCallback(\n    async (rateType: Rate, price?: Price) => {\n      if (rateType === Rate.MUL) {\n        if (price) onUserInput(Field.PRICE, price.invert().toSignificant(6))\n        onChangeRateType(Rate.DIV)\n      } else {\n        if (price) onUserInput(Field.PRICE, price.toSignificant(6))\n        onChangeRateType(Rate.MUL)\n      }\n    },\n    [onChangeRateType, onUserInput],\n  )\n\n  return {\n    handleLimitOrderSubmission,\n    handleLimitOrderCancellation,\n    handleInput,\n    handleCurrencySelection,\n    handleSwitchTokens,\n    handleRateType,\n  }\n}\n\nexport default useGelatoLimitOrdersHandlers\n","import { DerivedOrderInfo, useDerivedOrderInfo, useOrderState } from 'state/limitOrders/hooks'\nimport { OrderState } from 'state/limitOrders/types'\nimport useGelatoLimitOrdersHandlers, { GelatoLimitOrdersHandlers } from './useGelatoLimitOrdersHandlers'\n\nconst useGelatoLimitOrders = (): {\n  handlers: GelatoLimitOrdersHandlers\n  derivedOrderInfo: DerivedOrderInfo\n  orderState: OrderState\n} => {\n  const derivedOrderInfo = useDerivedOrderInfo()\n\n  const orderState = useOrderState()\n\n  const handlers = useGelatoLimitOrdersHandlers()\n\n  return {\n    handlers,\n    derivedOrderInfo,\n    orderState,\n  }\n}\n\nexport default useGelatoLimitOrders\n","import { useMemo } from 'react'\nimport { formatUnits } from '@ethersproject/units'\nimport { CurrencyAmount, Price, Token, TokenAmount, JSBI, ETHER } from '@pancakeswap/sdk'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useTradeExactIn } from 'hooks/Trades'\nimport tryParseAmount from 'utils/tryParseAmount'\nimport { Rate } from 'state/limitOrders/types'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { GENERIC_GAS_LIMIT_ORDER_EXECUTION, BIG_INT_TEN } from 'config/constants/exchange'\nimport getPriceForOneToken from 'views/LimitOrders/utils/getPriceForOneToken'\nimport { useGasPrice } from 'state/user/hooks'\n\nexport default function useGasOverhead(\n  inputAmount: CurrencyAmount | undefined,\n  outputAmount: CurrencyAmount | undefined,\n  rateType: Rate,\n): {\n  realExecutionPrice: Price | undefined | null\n  realExecutionPriceAsString: string | undefined\n  gasPrice: string | undefined\n} {\n  const { chainId } = useActiveWeb3React()\n\n  const gasPrice = useGasPrice()\n  const requiredGas = formatUnits(gasPrice ? BigNumber.from(gasPrice).mul(GENERIC_GAS_LIMIT_ORDER_EXECUTION) : '0')\n  const requiredGasAsCurrencyAmount = tryParseAmount(requiredGas, ETHER)\n\n  const inputIsBNB = inputAmount?.currency.symbol === 'BNB'\n\n  const gasCostInInputTokens = useTradeExactIn(requiredGasAsCurrencyAmount, inputIsBNB ? null : inputAmount?.currency)\n\n  const bufferedOutputAmount = useMemo(() => {\n    if (inputIsBNB) return requiredGasAsCurrencyAmount\n    if (!gasCostInInputTokens || !gasCostInInputTokens?.outputAmount) return undefined\n    // Add 2000 BPS on top (20%) to account for gas price fluctuations\n    const margin = gasCostInInputTokens.outputAmount.asFraction.multiply(2000).divide(10000)\n    const adjustedGas = gasCostInInputTokens.outputAmount.asFraction.add(margin)\n    const adjustedGasInWei = adjustedGas.multiply(\n      JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(gasCostInInputTokens.outputAmount.currency.decimals)),\n    )\n    if (gasCostInInputTokens.outputAmount.currency instanceof Token) {\n      return new TokenAmount(gasCostInInputTokens.outputAmount.currency, adjustedGasInWei.toFixed(0))\n    }\n    return undefined\n  }, [gasCostInInputTokens, requiredGasAsCurrencyAmount, inputIsBNB])\n\n  const realInputAmount = useMemo(\n    () =>\n      bufferedOutputAmount &&\n      inputAmount &&\n      inputAmount.greaterThan(bufferedOutputAmount) &&\n      inputAmount.subtract(bufferedOutputAmount),\n    [bufferedOutputAmount, inputAmount],\n  )\n\n  const realExecutionPrice = useMemo(() => {\n    if (!inputAmount || (!gasCostInInputTokens && !inputIsBNB) || !realInputAmount || !outputAmount) return null\n\n    if (inputIsBNB && requiredGasAsCurrencyAmount.greaterThan(inputAmount.asFraction)) return undefined\n    if (gasCostInInputTokens && gasCostInInputTokens.outputAmount.greaterThan(inputAmount.asFraction)) return undefined\n    return getPriceForOneToken(realInputAmount, outputAmount)\n  }, [realInputAmount, outputAmount, inputAmount, gasCostInInputTokens, inputIsBNB, requiredGasAsCurrencyAmount])\n\n  const realExecutionPriceAsString = useMemo(() => {\n    if (!realExecutionPrice) return 'never executes'\n    return rateType === Rate.DIV ? realExecutionPrice.invert().toSignificant(6) : realExecutionPrice.toSignificant(6)\n  }, [rateType, realExecutionPrice])\n\n  return chainId\n    ? { realExecutionPrice, gasPrice, realExecutionPriceAsString }\n    : {\n        realExecutionPrice: undefined,\n        realExecutionPriceAsString: undefined,\n        gasPrice: undefined,\n      }\n}\n","import { useEffect, memo } from 'react'\nimport { useModal } from '@pancakeswap/uikit'\nimport DisclaimerModal from 'components/DisclaimerModal'\nimport { useUserLimitOrderAcceptedWarning } from 'state/user/hooks'\n\nimport { useTranslation } from 'contexts/Localization'\n\nfunction ClaimWarning() {\n  const { t } = useTranslation()\n  const [hasAcceptedRisk, setHasAcceptedRisk] = useUserLimitOrderAcceptedWarning()\n\n  const [onPresentRiskDisclaimer, onDismiss] = useModal(\n    <DisclaimerModal\n      id=\"disclaimer-limit-order\"\n      header={t('I acknowledge that:')}\n      checks={[\n        {\n          key: 'price-checkbox',\n          content: t('I understand that small orders are executed at higher execution price due to gas fees.'),\n        },\n        {\n          key: 'taxtoken-checkbox',\n          content: t(\n            'I understand that using taxed tokens on limit orders is highly discouraged and not recommended - Taxed tokens can be stuck in limit orders and lost forever because of impossibility to execute an order for such tokens',\n          ),\n        },\n      ]}\n      onSuccess={() => setHasAcceptedRisk(true)}\n    />,\n    false,\n    false,\n  )\n\n  useEffect(() => {\n    if (!hasAcceptedRisk) {\n      onPresentRiskDisclaimer()\n    }\n\n    return () => {\n      onDismiss()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasAcceptedRisk])\n\n  return null\n}\n\nexport default memo(ClaimWarning)\n","import { Box, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled(Flex)`\n  position: relative;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 1rem;\n`\n\nexport const StyledSwapContainer = styled(Flex)<{ $isChartExpanded: boolean }>`\n  flex-shrink: 0;\n  height: fit-content;\n  padding: 0 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0 40px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    ${({ $isChartExpanded }) => ($isChartExpanded ? 'padding: 0 120px' : 'padding: 0 40px')};\n  }\n`\n\nexport const StyledInputCurrencyWrapper = styled(Box)`\n  width: 328px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChartIcon, Flex, Heading, HistoryIcon, IconButton, Text, useModal, ChartDisableIcon } from '@pancakeswap/uikit'\nimport TransactionsModal from 'components/App/Transactions/TransactionsModal'\n\ninterface Props {\n  title: string\n  subtitle: string\n  noConfig?: boolean\n  setIsChartDisplayed?: React.Dispatch<React.SetStateAction<boolean>>\n  isChartDisplayed?: boolean\n}\n\nconst CurrencyInputContainer = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst ColoredIconButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nconst CurrencyInputHeader: React.FC<Props> = ({ title, subtitle, setIsChartDisplayed, isChartDisplayed }) => {\n  const toggleChartDisplayed = () => {\n    setIsChartDisplayed((currentIsChartDisplayed) => !currentIsChartDisplayed)\n  }\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n\n  return (\n    <CurrencyInputContainer>\n      <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flex=\"1\">\n          {setIsChartDisplayed && (\n            <ColoredIconButton onClick={toggleChartDisplayed} variant=\"text\" scale=\"sm\">\n              {isChartDisplayed ? (\n                <ChartDisableIcon color=\"textSubtle\" />\n              ) : (\n                <ChartIcon width=\"24px\" color=\"textSubtle\" />\n              )}\n            </ColoredIconButton>\n          )}\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"center\">\n          <Heading as=\"h2\">{title}</Heading>\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"flex-end\">\n          <IconButton onClick={onPresentTransactionsModal} variant=\"text\" scale=\"sm\">\n            <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n          </IconButton>\n        </Flex>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Text color=\"textSubtle\" fontSize=\"14px\">\n          {subtitle}\n        </Text>\n      </Flex>\n    </CurrencyInputContainer>\n  )\n}\n\nexport default CurrencyInputHeader\n","import { Percent } from '@pancakeswap/sdk'\nimport { TranslateFunction } from 'contexts/Localization/types'\n\nexport enum PercentageDirection {\n  ABOVE = 'above',\n  BELOW = 'below',\n  MARKET = 'market',\n}\n\nexport const getRatePercentageMessage = (\n  percentageRateDifference: Percent,\n  t: TranslateFunction,\n): [string | null, PercentageDirection] => {\n  if (percentageRateDifference) {\n    if (percentageRateDifference.equalTo(0)) {\n      return [t('at market price'), PercentageDirection.MARKET]\n    }\n    const percentageAsString = percentageRateDifference.toSignificant(6)\n    const formattedPercentage = parseFloat(percentageAsString).toLocaleString(undefined, {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n    })\n    if (percentageRateDifference.lessThan('0')) {\n      return [t('%percentage%% below market', { percentage: formattedPercentage }), PercentageDirection.BELOW]\n    }\n    return [t('%percentage%% above market', { percentage: formattedPercentage }), PercentageDirection.ABOVE]\n  }\n  return [null, null]\n}\n","import React from 'react'\nimport { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport { Input, Flex, Text, Button, AutoRenewIcon, SyncAltIcon, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from 'utils'\nimport { Rate } from 'state/limitOrders/types'\nimport { getRatePercentageMessage, PercentageDirection } from '../utils/getRatePercentageMessage'\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nconst OrderPriceInput = styled(Input)`\n  text-align: right;\n`\n\nconst LabelContainer = styled(Flex)`\n  cursor: pointer;\n`\n\ninterface LimitOrderPriceProps {\n  id: string\n  value: string\n  onUserInput: (value: string) => void\n  inputCurrency: Currency\n  outputCurrency: Currency\n  percentageRateDifference: Percent\n  rateType: Rate\n  handleRateType: (rateType: Rate, price?: Price) => void\n  price: Price\n  handleResetToMarketPrice: () => void\n  realExecutionPriceAsString: string\n  disabled: boolean\n}\n\nconst DIRECTION_COLORS = {\n  [PercentageDirection.ABOVE]: 'success',\n  [PercentageDirection.BELOW]: 'failure',\n  [PercentageDirection.MARKET]: 'textSubtle',\n}\n\nconst LimitOrderPrice: React.FC<LimitOrderPriceProps> = ({\n  id,\n  value,\n  onUserInput,\n  inputCurrency,\n  outputCurrency,\n  percentageRateDifference,\n  rateType,\n  handleRateType,\n  price,\n  handleResetToMarketPrice,\n  realExecutionPriceAsString,\n  disabled,\n}) => {\n  const { t } = useTranslation()\n\n  const hasCurrencyInfo = inputCurrency && outputCurrency\n  const label =\n    rateType === Rate.MUL\n      ? `${outputCurrency?.symbol} per ${inputCurrency?.symbol}`\n      : `${inputCurrency?.symbol} per ${outputCurrency?.symbol}`\n\n  const toggleRateType = () => {\n    handleRateType(rateType, price)\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'Takes into account the gas necessary to execute your order and guarantees that your desired rate is fulfilled.',\n        )}\n      </Text>\n      <Text>{t('It fluctuates according to gas prices.')}</Text>\n      {inputCurrency?.symbol && outputCurrency?.symbol && realExecutionPriceAsString && (\n        <Text>\n          {realExecutionPriceAsString === 'never executes'\n            ? t(\n                'Assuming current gas price this order will never execute. Try increasing the amount of tokens to swap.',\n              )\n            : t('Assuming current gas price it should execute when 1 %assetOneSymbol% = %price% %assetTwoSymbol%', {\n                assetOneSymbol: rateType === Rate.MUL ? inputCurrency?.symbol : outputCurrency?.symbol,\n                assetTwoSymbol: rateType === Rate.MUL ? outputCurrency?.symbol : inputCurrency?.symbol,\n                price: realExecutionPriceAsString,\n              })}\n        </Text>\n      )}\n    </>,\n    { placement: 'top' },\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const nextUserInput = event.target.value.replace(/,/g, '.')\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const isAtMarketPrice = percentageRateDifference?.equalTo(0) ?? true\n  const [ratePercentageMessage, direction] = getRatePercentageMessage(percentageRateDifference, t)\n  const priceLabelColor = DIRECTION_COLORS[direction]\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" id={id}>\n        <Flex alignItems=\"center\">\n          <Text mr=\"8px\" color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n            {t('Price')}\n          </Text>\n          <Button\n            onClick={handleResetToMarketPrice}\n            startIcon={<AutoRenewIcon color={isAtMarketPrice ? 'textDisabled' : 'primary'} />}\n            variant=\"secondary\"\n            scale=\"xs\"\n            disabled={isAtMarketPrice}\n          >\n            <Text fontSize=\"12px\" bold color={isAtMarketPrice ? 'textDisabled' : 'primary'} textTransform=\"uppercase\">\n              {t('Market')}\n            </Text>\n          </Button>\n        </Flex>\n        {ratePercentageMessage && (\n          <Text color={priceLabelColor} fontSize=\"12px\">\n            {ratePercentageMessage}\n          </Text>\n        )}\n      </Flex>\n      <OrderPriceInput\n        value={value}\n        disabled={disabled}\n        onChange={handleOnChange}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        pattern=\"^[0-9]*[.,]?[0-9]*$\"\n        minLength={1}\n        maxLength={79}\n        spellCheck=\"false\"\n        type=\"text\"\n        inputMode=\"decimal\"\n      />\n      {hasCurrencyInfo && (\n        <LabelContainer justifyContent=\"flex-end\" alignItems=\"center\" onClick={toggleRateType}>\n          <Text small bold>\n            {label}\n          </Text>\n          <SyncAltIcon color=\"textSubtle\" width=\"24px\" ml=\"4px\" />\n        </LabelContainer>\n      )}\n      <Flex justifySelf=\"flex-end\" mb=\"8px\" minHeight=\"16px\">\n        {realExecutionPriceAsString && (\n          <>\n            <Text small color=\"textSubtle\" mr=\"4px\">\n              {t('Real execution price: %price%', { price: realExecutionPriceAsString })}\n            </Text>\n            <span ref={targetRef}>\n              <HelpIcon color=\"textSubtle\" />\n              {tooltipVisible && tooltip}\n            </span>\n          </>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default LimitOrderPrice\n","import React, { useCallback } from 'react'\nimport { ArrowDownIcon, IconButton, ArrowUpDownIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow } from 'components/Layout/Row'\n\nconst StyledButton = styled(IconButton)`\n  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\n  .icon-up-down {\n    display: none;\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary};\n    .icon-down {\n      display: none;\n      fill: white;\n    }\n    .icon-up-down {\n      display: block;\n      fill: white;\n    }\n  }\n`\n\ninterface SwitchIconButtonProps {\n  color: 'primary' | 'text'\n  handleSwitchTokens: () => void\n}\n\nconst SwitchIconButton: React.FC<SwitchIconButtonProps> = ({ handleSwitchTokens, color }) => {\n  const handleOnClick = useCallback(() => handleSwitchTokens?.(), [handleSwitchTokens])\n\n  return (\n    <AutoColumn justify=\"space-between\">\n      <AutoRow justify=\"center\" style={{ padding: '0 1rem' }}>\n        <StyledButton variant=\"light\" scale=\"sm\" onClick={handleOnClick}>\n          <ArrowDownIcon className=\"icon-down\" color={color} />\n          <ArrowUpDownIcon className=\"icon-up-down\" color={color} />\n        </StyledButton>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default SwitchIconButton\n","import { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { ORDER_CATEGORY } from '../../types'\n\nconst Wrapper = styled.div`\n  & > div {\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.input};\n    border: 0;\n  }\n  & button {\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n`\n\ninterface OrderTabProps {\n  activeIndex: ORDER_CATEGORY\n  onItemClick: (index: ORDER_CATEGORY) => void\n}\n\nconst OrderTab: React.FC<OrderTabProps> = ({ activeIndex, onItemClick }) => {\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} onItemClick={onItemClick}>\n        {[t('Open Orders'), t('Order History')].map((content, idx) => (\n          <ButtonMenuItem\n            key={content}\n            style={{\n              color: idx === activeIndex ? theme.colors.text : theme.colors.textSubtle,\n              backgroundColor: idx === activeIndex ? theme.card.background : theme.colors.input,\n            }}\n          >\n            {content}\n          </ButtonMenuItem>\n        ))}\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default OrderTab\n","import { useMemo } from 'react'\nimport { Order } from '@gelatonetwork/limit-orders-lib'\nimport { Currency, CurrencyAmount, Price, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useCurrency } from 'hooks/Tokens'\nimport useGelatoLimitOrdersLib from 'hooks/limitOrders/useGelatoLimitOrdersLib'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useIsTransactionPending } from 'state/transactions/hooks'\nimport getPriceForOneToken from '../utils/getPriceForOneToken'\nimport { LimitOrderStatus } from '../types'\n\nexport interface FormattedOrderData {\n  inputToken: Currency | Token\n  outputToken: Currency | Token\n  inputAmount: string\n  outputAmount: string\n  executionPrice: string\n  invertedExecutionPrice: string\n  isOpen: boolean\n  isCancelled: boolean\n  isExecuted: boolean\n  isSubmissionPending: boolean\n  isCancellationPending: boolean\n  bscScanUrls: {\n    created: string\n    executed: string\n    cancelled: string\n  }\n}\n\nconst formatForDisplay = (amount: CurrencyAmount | Price) => {\n  if (!amount) {\n    return undefined\n  }\n  return parseFloat(amount.toSignificant(18)).toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 8,\n  })\n}\n\n// Transforms Gelato Order type into types ready to be displayed in UI\nconst useFormattedOrderData = (order: Order): FormattedOrderData => {\n  const { chainId } = useActiveWeb3React()\n  const gelatoLibrary = useGelatoLimitOrdersLib()\n  const inputToken = useCurrency(order.inputToken)\n  const outputToken = useCurrency(order.outputToken)\n\n  const isSubmissionPending = useIsTransactionPending(order.createdTxHash)\n  const isCancellationPending = useIsTransactionPending(order.cancelledTxHash ?? undefined)\n\n  const inputAmount = useMemo(() => {\n    if (inputToken && order.inputAmount) {\n      if (inputToken instanceof Token) {\n        return new TokenAmount(inputToken, order.inputAmount)\n      }\n      return CurrencyAmount.ether(order.inputAmount)\n    }\n    return undefined\n  }, [inputToken, order.inputAmount])\n\n  const rawMinReturn = useMemo(\n    () =>\n      order.adjustedMinReturn\n        ? order.adjustedMinReturn\n        : gelatoLibrary && chainId && order.minReturn\n        ? gelatoLibrary.getAdjustedMinReturn(order.minReturn)\n        : undefined,\n    [chainId, gelatoLibrary, order.adjustedMinReturn, order.minReturn],\n  )\n\n  const outputAmount = useMemo(() => {\n    if (outputToken && rawMinReturn) {\n      if (outputToken instanceof Token) {\n        return new TokenAmount(outputToken, rawMinReturn)\n      }\n      return CurrencyAmount.ether(rawMinReturn)\n    }\n    return undefined\n  }, [outputToken, rawMinReturn])\n\n  const executionPrice = useMemo(() => getPriceForOneToken(inputAmount, outputAmount), [inputAmount, outputAmount])\n\n  return {\n    inputToken,\n    outputToken,\n    inputAmount: formatForDisplay(inputAmount),\n    outputAmount: formatForDisplay(outputAmount),\n    executionPrice: formatForDisplay(executionPrice),\n    invertedExecutionPrice: formatForDisplay(executionPrice?.invert()),\n    isOpen: order.status === LimitOrderStatus.OPEN,\n    isCancelled: order.status === LimitOrderStatus.CANCELLED,\n    isExecuted: order.status === LimitOrderStatus.EXECUTED,\n    isSubmissionPending,\n    isCancellationPending,\n    bscScanUrls: {\n      created: order.createdTxHash ? getBscScanLink(order.createdTxHash, 'transaction') : null,\n      executed: order.executedTxHash ? getBscScanLink(order.executedTxHash, 'transaction') : null,\n      cancelled: order.cancelledTxHash ? getBscScanLink(order.cancelledTxHash, 'transaction') : null,\n    },\n  }\n}\n\nexport default useFormattedOrderData\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport { ReactElement } from 'react-markdown'\n\ninterface TextIconProps {\n  text: string\n  bold?: boolean\n  icon: ReactElement\n}\n\nconst TextIcon: React.FC<TextIconProps> = ({ icon, text, bold = false }) => {\n  return (\n    <Flex alignItems=\"center\">\n      <Text color=\"text\" mr=\"8px\" bold={bold} textTransform=\"uppercase\">\n        {text}\n      </Text>\n      {icon}\n    </Flex>\n  )\n}\n\nexport default TextIcon\n","import { Currency } from '@pancakeswap/sdk'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport TextIcon from './TextIcon'\n\ninterface CurrencyFormatProps {\n  currency: Currency\n  bold?: boolean\n}\n\nconst CurrencyFormat: React.FC<CurrencyFormatProps> = ({ currency, bold }) => {\n  return <TextIcon bold={bold} text={currency?.symbol} icon={<CurrencyLogo currency={currency} />} />\n}\n\nexport default CurrencyFormat\n","import { Box } from '@pancakeswap/uikit'\nimport { ReactElement } from 'react-markdown'\n\ninterface CellFormatProps {\n  firstRow: ReactElement | number | string\n  secondRow: ReactElement\n}\n\nconst CellFormat: React.FC<CellFormatProps> = ({ firstRow, secondRow }) => {\n  return (\n    <Box>\n      <Box mb=\"4px\">{firstRow}</Box>\n      <Box>{secondRow}</Box>\n    </Box>\n  )\n}\n\nexport default CellFormat\n","import { Message, MessageText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst LimitOrderDisclaimer = () => {\n  const { t } = useTranslation()\n  return (\n    <Message variant=\"warning\" mt=\"24px\">\n      <MessageText>\n        <b>{t('Real Execution Price:')}</b>\n        <ol>\n          <li>\n            {t(\n              'Your execution gas fees are paid for by the spread between your specified price and the real execution price.',\n            )}\n          </li>\n          <li>\n            {t(\n              'Gas fees are volatile and thus the exact market price at which your order will execute is unpredictable.',\n            )}\n          </li>\n          <li>{t('It might take much longer than you expected to reach the price that fills your order + fees.')}</li>\n        </ol>\n        <br />\n        <b>{t('\"Fee on Transfer\" Tokens')}</b>\n        <ol>\n          <li>{t('\"Fee on transfer\" tokens should not be used with Limit Orders (use at your own risk)')}</li>\n        </ol>\n      </MessageText>\n    </Message>\n  )\n}\n\nexport default LimitOrderDisclaimer\n","import { Button, Flex, Box, Modal, Text, ChevronRightIcon, InjectedModalProps, Tag, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { memo, useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { FormattedOrderData } from 'views/LimitOrders/hooks/useFormattedOrderData'\nimport useGelatoLimitOrdersHandlers from 'hooks/limitOrders/useGelatoLimitOrdersHandlers'\nimport { Order } from '@gelatonetwork/limit-orders-lib'\nimport { TransactionErrorContent, TransactionSubmittedContent } from 'components/TransactionConfirmationModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport CurrencyFormat from './CurrencyFormat'\nimport CellFormat from './CellFormat'\nimport LimitOrderDisclaimer from '../LimitOrderDisclaimer'\n\nconst InfoCardWrapper = styled.div`\n  border-radius: 16px;\n  padding: 16px;\n  margin-top: 24px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\ninterface DetailLimitOrderModalProps extends InjectedModalProps {\n  order: Order\n  // Just pass it to modal to prevent recalculating everything\n  formattedOrder: FormattedOrderData\n}\n\nexport const DetailLimitOrderModal: React.FC<DetailLimitOrderModalProps> = ({ onDismiss, order, formattedOrder }) => {\n  const { chainId } = useActiveWeb3React()\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  const { handleLimitOrderCancellation } = useGelatoLimitOrdersHandlers()\n\n  const [{ cancellationErrorMessage, attemptingTxn, txHash }, setCancellationState] = useState<{\n    attemptingTxn: boolean\n    cancellationErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    attemptingTxn: false,\n    cancellationErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const onCancelOrder = useCallback(() => {\n    if (!handleLimitOrderCancellation) {\n      return\n    }\n    setCancellationState({\n      attemptingTxn: true,\n      cancellationErrorMessage: undefined,\n      txHash: undefined,\n    })\n\n    const orderDetails =\n      formattedOrder.inputToken?.symbol &&\n      formattedOrder.outputToken?.symbol &&\n      formattedOrder.inputAmount &&\n      formattedOrder.outputAmount\n        ? {\n            inputTokenSymbol: formattedOrder.inputToken.symbol,\n            outputTokenSymbol: formattedOrder.outputToken.symbol,\n            inputAmount: formattedOrder.inputAmount,\n            outputAmount: formattedOrder.outputAmount,\n          }\n        : undefined\n    handleLimitOrderCancellation(order, orderDetails)\n      .then(({ hash }) => {\n        setCancellationState({\n          attemptingTxn: false,\n          cancellationErrorMessage: undefined,\n          txHash: hash,\n        })\n      })\n      .catch((error) => {\n        setCancellationState({\n          attemptingTxn: false,\n          cancellationErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [\n    handleLimitOrderCancellation,\n    formattedOrder.inputAmount,\n    formattedOrder.outputAmount,\n    formattedOrder.inputToken?.symbol,\n    formattedOrder.outputToken?.symbol,\n    order,\n  ])\n\n  const limitPriceExchangeRateText = `1 ${formattedOrder.inputToken?.symbol} = ${formattedOrder.executionPrice} ${formattedOrder.outputToken?.symbol}`\n  const limitPriceExchangeRateTextReversed = `1 ${formattedOrder.outputToken?.symbol} = ${formattedOrder.invertedExecutionPrice} ${formattedOrder.inputToken?.symbol}`\n\n  const { isOpen, isExecuted, isCancelled, isSubmissionPending, isCancellationPending, bscScanUrls } = formattedOrder\n\n  const orderDetails = (\n    <>\n      <Flex width=\"100%\" justifyContent=\"space-between\">\n        <CellFormat\n          firstRow={<Text>{formattedOrder.inputAmount}</Text>}\n          secondRow={<CurrencyFormat currency={formattedOrder.inputToken} />}\n        />\n        <ChevronRightIcon />\n        <CellFormat\n          firstRow={<Text>{formattedOrder.outputAmount}</Text>}\n          secondRow={<CurrencyFormat currency={formattedOrder.outputToken} />}\n        />\n      </Flex>\n      <LimitTradeInfoCard\n        currentPriceExchangeRateText=\"0.002474 BNB = 1 BUSD\"\n        currentPriceExchangeRateTextReversed=\"404.11169 BUSD = 1 BNB\"\n        limitPriceExchangeRateText={limitPriceExchangeRateText}\n        limitPriceExchangeRateTextReversed={limitPriceExchangeRateTextReversed}\n        isOpen={isOpen}\n        isExecuted={isExecuted}\n        isCancelled={isCancelled}\n        isSubmissionPending={isSubmissionPending}\n        isCancellationPending={isCancellationPending}\n      />\n      <LimitOrderDisclaimer />\n      <Flex flexDirection=\"column\">\n        {isOpen ? (\n          <>\n            <Button variant=\"primary\" mt=\"16px\" as=\"a\" external href={formattedOrder.bscScanUrls.created}>\n              {t('View on BscScan')}\n            </Button>\n            {!isSubmissionPending && (\n              <Button variant=\"danger\" mt=\"16px\" onClick={onCancelOrder}>\n                {t('Cancel Order')}\n              </Button>\n            )}\n          </>\n        ) : (\n          <Button variant=\"primary\" mt=\"16px\" as=\"a\" external href={formattedOrder.bscScanUrls.created}>\n            {t('View order creation on BSCScan')}\n          </Button>\n        )}\n        {isCancelled && bscScanUrls.cancelled && (\n          <Button variant=\"primary\" mt=\"16px\" as=\"a\" external href={bscScanUrls.cancelled}>\n            {t('View order cancellation on BSCScan')}\n          </Button>\n        )}\n        {isExecuted && bscScanUrls.executed && (\n          <Button variant=\"primary\" mt=\"16px\" as=\"a\" external href={bscScanUrls.executed}>\n            {t('View order execution on BSCScan')}\n          </Button>\n        )}\n      </Flex>\n    </>\n  )\n  return (\n    <Modal\n      title={t('Open Order Details')}\n      headerBackground={theme.colors.gradients.cardHeader}\n      style={{ width: '436px' }}\n      onDismiss={onDismiss}\n    >\n      {attemptingTxn ? (\n        <LoadingContent />\n      ) : txHash ? (\n        <TransactionSubmittedContent chainId={chainId} hash={txHash} onDismiss={onDismiss} />\n      ) : cancellationErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={cancellationErrorMessage} />\n      ) : (\n        orderDetails\n      )}\n    </Modal>\n  )\n}\n\ninterface LimitTradeInfoCardProps {\n  currentPriceExchangeRateText: string\n  currentPriceExchangeRateTextReversed: string\n  limitPriceExchangeRateText: string\n  limitPriceExchangeRateTextReversed: string\n  isOpen: boolean\n  isExecuted: boolean\n  isCancelled: boolean\n  isSubmissionPending: boolean\n  isCancellationPending: boolean\n}\n\nconst LimitTradeInfoCard: React.FC<LimitTradeInfoCardProps> = memo(\n  ({\n    limitPriceExchangeRateText,\n    limitPriceExchangeRateTextReversed,\n    isOpen,\n    isExecuted,\n    isCancelled,\n    isSubmissionPending,\n    isCancellationPending,\n  }) => {\n    const { t } = useTranslation()\n\n    return (\n      <InfoCardWrapper>\n        <Box mb=\"4px\">\n          {isOpen && isSubmissionPending && (\n            <Tag outline scale=\"sm\" p=\"8px\" mb=\"16px\" variant=\"warning\">\n              {t('Pending')}\n            </Tag>\n          )}\n          {isExecuted && (\n            <Tag outline scale=\"sm\" p=\"8px\" mb=\"16px\" variant=\"success\">\n              {t('Filled')}\n            </Tag>\n          )}\n          {isCancellationPending && (\n            <Tag outline scale=\"sm\" p=\"8px\" mb=\"16px\" variant=\"warning\">\n              {t('Cancelling')}\n            </Tag>\n          )}\n          {isCancelled && !isCancellationPending && (\n            <Tag outline scale=\"sm\" p=\"8px\" mb=\"16px\" variant=\"failure\">\n              {t('Cancelled')}\n            </Tag>\n          )}\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Limit Price')}\n          </Text>\n          <Flex flexDirection=\"column\">\n            <Text fontSize=\"14px\">{limitPriceExchangeRateText}</Text>\n            <Text fontSize=\"14px\">{limitPriceExchangeRateTextReversed}</Text>\n          </Flex>\n        </Box>\n      </InfoCardWrapper>\n    )\n  },\n)\n\nconst LoadingContent: React.FC = memo(() => {\n  const { t } = useTranslation()\n  return (\n    <Flex>\n      <Flex flexDirection=\"column\" flexGrow=\"wrap\" flexBasis=\"267px\">\n        <Text fontSize=\"20px\" small color=\"secondary\">\n          {t('Confirm')}\n        </Text>\n        <Text small color=\"textSubtle\" mt=\"8px\">\n          {t('Please confirm the transaction in your wallet')}\n        </Text>\n      </Flex>\n      <Flex>\n        <Spinner size={70} />\n      </Flex>\n    </Flex>\n  )\n})\n","import { Tag, Text, TagVariant } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { FormattedOrderData } from 'views/LimitOrders/hooks/useFormattedOrderData'\n\nexport enum StatusElementType {\n  TAG = 'Tag',\n  TEXT = 'Text',\n}\n\nconst StatusElement: React.FC<{ element: StatusElementType; text: string; color: TagVariant }> = ({\n  element,\n  text,\n  color,\n}) => {\n  if (element === StatusElementType.TAG) {\n    return (\n      <Tag outline scale=\"sm\" variant={color} ml=\"auto\">\n        {text}\n      </Tag>\n    )\n  }\n  return <Text color={color}>{text}</Text>\n}\n\nconst OrderStatus: React.FC<{\n  formattedOrder: FormattedOrderData\n  showOpenTag?: boolean\n  element?: StatusElementType\n}> = ({ formattedOrder, showOpenTag = false, element = StatusElementType.TAG }) => {\n  const { t } = useTranslation()\n  const { isOpen, isSubmissionPending, isCancelled, isCancellationPending, isExecuted } = formattedOrder\n  if (isOpen && !isSubmissionPending && showOpenTag) {\n    return <StatusElement element={element} text={t('Open')} color=\"success\" />\n  }\n  if (isOpen && isSubmissionPending) {\n    return <StatusElement element={element} text={t('Pending')} color=\"warning\" />\n  }\n  if (isCancelled && !isCancellationPending) {\n    return <StatusElement element={element} text={t('Cancelled')} color=\"failure\" />\n  }\n  if (isCancellationPending) {\n    return <StatusElement element={element} text={t('Cancelling')} color=\"warning\" />\n  }\n  if (isExecuted) {\n    return <StatusElement element={element} text={t('Filled')} color=\"success\" />\n  }\n  return null\n}\n\nexport default OrderStatus\n","import { Order } from '@gelatonetwork/limit-orders-lib'\nimport { Flex, ChevronRightIcon, Text, Box, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useFormattedOrderData from 'views/LimitOrders/hooks/useFormattedOrderData'\nimport CurrencyFormat from './CurrencyFormat'\nimport { DetailLimitOrderModal } from './DetailLimitOrderModal'\nimport OrderStatus from './OrderStatus'\n\ninterface CompactRowProps {\n  order: Order\n}\n\nconst CompactRow: React.FC<CompactRowProps> = ({ order }) => {\n  const { t } = useTranslation()\n  const formattedOrder = useFormattedOrderData(order)\n  const { inputToken, outputToken, inputAmount, outputAmount, executionPrice } = formattedOrder\n  const [openDetailLimitOrderModal] = useModal(<DetailLimitOrderModal order={order} formattedOrder={formattedOrder} />)\n\n  return (\n    <Flex width=\"100%\" justifyContent=\"center\" alignItems=\"center\" onClick={openDetailLimitOrderModal}>\n      <Box width=\"100%\">\n        <Flex mb=\"16px\">\n          <CurrencyFormat bold currency={inputToken} />\n          <ChevronRightIcon color=\"textSubtle\" />\n          <CurrencyFormat bold currency={outputToken} />\n          <OrderStatus formattedOrder={formattedOrder} />\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n            {t('From')}\n          </Text>\n          <Text small textTransform=\"uppercase\">{`${inputAmount} ${inputToken?.symbol}`}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n            {t('To')}\n          </Text>\n          <Text small textTransform=\"uppercase\">{`${outputAmount} ${outputToken?.symbol}`}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n            {t('Price')}\n          </Text>\n          <Text small>{`${executionPrice} ${outputToken?.symbol} per ${inputToken?.symbol}`}</Text>\n        </Flex>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default CompactRow\n","import { memo } from 'react'\nimport styled from 'styled-components'\nimport { Table, Td } from '@pancakeswap/uikit'\nimport CompactRow from './CompactRow'\n\nconst RowStyle = styled.tr`\n  cursor: pointer;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.backgroundDisabled};\n  }\n`\n\nconst CompactLimitOrderTable = ({ orders }) => (\n  <Table>\n    <tbody>\n      {orders.map((order) => (\n        <RowStyle key={order.id}>\n          <Td>\n            <CompactRow order={order} />\n          </Td>\n        </RowStyle>\n      ))}\n    </tbody>\n  </Table>\n)\n\nexport default memo(CompactLimitOrderTable)\n","import React from 'react'\nimport { Order } from '@gelatonetwork/limit-orders-lib'\nimport { Td, MoreHorizontalIcon, SyncAltIcon, useModal, IconButton } from '@pancakeswap/uikit'\n\nimport useFormattedOrderData from 'views/LimitOrders/hooks/useFormattedOrderData'\nimport CurrencyFormat from './CurrencyFormat'\nimport CellFormat from './CellFormat'\nimport TextIcon from './TextIcon'\nimport { DetailLimitOrderModal } from './DetailLimitOrderModal'\nimport OrderStatus, { StatusElementType } from './OrderStatus'\n\nconst FullRow: React.FC<{ order: Order }> = ({ order }) => {\n  const formattedOrder = useFormattedOrderData(order)\n  const { inputToken, outputToken, inputAmount, outputAmount, executionPrice } = formattedOrder\n  const [openDetailLimitOrderModal] = useModal(<DetailLimitOrderModal order={order} formattedOrder={formattedOrder} />)\n  return (\n    <tr>\n      <Td>\n        <CellFormat firstRow={inputAmount} secondRow={<CurrencyFormat bold currency={inputToken} />} />\n      </Td>\n      <Td>\n        <CellFormat firstRow={outputAmount} secondRow={<CurrencyFormat bold currency={outputToken} />} />\n      </Td>\n      <Td>\n        <CellFormat\n          firstRow={executionPrice}\n          secondRow={<TextIcon text={`${outputToken?.symbol}/${inputToken?.symbol}`} icon={<SyncAltIcon />} />}\n        />\n      </Td>\n      <Td>\n        <OrderStatus formattedOrder={formattedOrder} showOpenTag element={StatusElementType.TEXT} />\n      </Td>\n      <Td>\n        <IconButton variant=\"text\" onClick={openDetailLimitOrderModal}>\n          <MoreHorizontalIcon />\n        </IconButton>\n      </Td>\n    </tr>\n  )\n}\n\nexport default FullRow\n","import { memo } from 'react'\nimport { Table, Th, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport FullRow from './FullRow'\n\nconst SpaciousLimitOrderTable = ({ orders }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Table>\n      <>\n        <thead>\n          <tr>\n            <Th>\n              <Text fontSize=\"12px\" bold textTransform=\"uppercase\" color=\"textSubtle\" textAlign=\"left\">\n                {t('From')}\n              </Text>\n            </Th>\n            <Th>\n              <Text fontSize=\"12px\" bold textTransform=\"uppercase\" color=\"textSubtle\" textAlign=\"left\">\n                {t('To')}\n              </Text>\n            </Th>\n            <Th>\n              <Text fontSize=\"12px\" bold textTransform=\"uppercase\" color=\"textSubtle\" textAlign=\"left\">\n                {t('Limit Price')}\n              </Text>\n            </Th>\n            <Th>\n              <Text fontSize=\"12px\" bold textTransform=\"uppercase\" color=\"textSubtle\" textAlign=\"left\">\n                {t('Status')}\n              </Text>\n            </Th>\n            <Th />\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order) => (\n            <FullRow key={order.id} order={order} />\n          ))}\n        </tbody>\n      </>\n    </Table>\n  )\n}\n\nexport default memo(SpaciousLimitOrderTable)\n","import { BunnyPlaceholderIcon, Flex, Text } from '@pancakeswap/uikit'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { ORDER_CATEGORY } from '../../types'\n\nconst NoOrdersMessage: React.FC<{ orderCategory: ORDER_CATEGORY }> = ({ orderCategory }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex p=\"24px\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <BunnyPlaceholderIcon width={64} />\n      <Text color=\"textDisabled\">\n        {orderCategory === ORDER_CATEGORY.Open ? t('No Open Orders') : t('No Order History')}\n      </Text>\n    </Flex>\n  )\n}\n\nexport default NoOrdersMessage\n","import { memo } from 'react'\nimport { Skeleton, Table, Td } from '@pancakeswap/uikit'\n\nconst LoadingTable = () => (\n  <Table>\n    <tbody>\n      <tr>\n        <Td>\n          <Skeleton />\n        </Td>\n        <Td>\n          <Skeleton />\n        </Td>\n        <Td>\n          <Skeleton />\n        </Td>\n      </tr>\n      <tr>\n        <Td>\n          <Skeleton />\n        </Td>\n        <Td>\n          <Skeleton />\n        </Td>\n        <Td>\n          <Skeleton />\n        </Td>\n      </tr>\n      <tr>\n        <Td>\n          <Skeleton />\n        </Td>\n        <Td>\n          <Skeleton />\n        </Td>\n        <Td>\n          <Skeleton />\n        </Td>\n      </tr>\n    </tbody>\n  </Table>\n)\n\nexport default memo(LoadingTable)\n","import { useState, useMemo, useCallback, ReactElement, memo, useEffect } from 'react'\nimport { Text, Flex, Box, Grid, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport SubgraphHealthIndicator from 'components/SubgraphHealthIndicator'\nimport NoOrdersMessage from './NoOrdersMessage'\nimport { ORDER_CATEGORY } from '../../types'\nimport LoadingTable from './LoadingTable'\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n\ninterface ExposedProps {\n  paginatedData: any[]\n}\n\ninterface TableNavigationProps {\n  data: any[]\n  itemsPerPage?: number\n  children: (exposedProps: ExposedProps) => ReactElement\n  orderCategory: ORDER_CATEGORY\n}\n\nconst ORDERS_PER_PAGE = 5\n\nconst TableNavigation: React.FC<TableNavigationProps> = ({\n  data,\n  orderCategory,\n  itemsPerPage = ORDERS_PER_PAGE,\n  children,\n}) => {\n  const { t } = useTranslation()\n  const [currentPage, setPage] = useState(1)\n\n  const total = Array.isArray(data) ? data.length : 0\n\n  const maxPage = useMemo(() => {\n    if (total) {\n      return Math.ceil(total / itemsPerPage)\n    }\n    return 1\n  }, [total, itemsPerPage])\n\n  const onPageNext = useCallback(() => {\n    setPage((page) => (page === maxPage ? page : page + 1))\n  }, [maxPage])\n\n  const onPagePrev = useCallback(() => {\n    setPage((page) => (page === 1 ? page : page - 1))\n  }, [])\n\n  const from = useMemo(() => itemsPerPage * (currentPage - 1), [currentPage, itemsPerPage])\n  const to = useMemo(() => itemsPerPage * currentPage, [currentPage, itemsPerPage])\n\n  const paginatedData = useMemo(() => {\n    return Array.isArray(data) ? data.slice(from, to) : []\n  }, [data, from, to])\n\n  useEffect(() => {\n    setPage(1)\n  }, [orderCategory])\n\n  return (\n    <>\n      {children({\n        paginatedData,\n      })}\n      {!data && <LoadingTable />}\n      {data && !total && <NoOrdersMessage orderCategory={orderCategory} />}\n      <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', null, null, null, '1fr 2fr 1fr']} mt=\"16px\" mb=\"16px\" px=\"16px\">\n        <Box />\n        <Flex width=\"100%\" justifyContent=\"center\" alignItems=\"center\">\n          <Arrow onClick={onPagePrev}>\n            <ArrowBackIcon color={currentPage === 1 ? 'textDisabled' : 'primary'} />\n          </Arrow>\n\n          <Text>{t('Page %page% of %maxPage%', { page: currentPage, maxPage })}</Text>\n\n          <Arrow onClick={onPageNext}>\n            <ArrowForwardIcon color={currentPage === maxPage ? 'textDisabled' : 'primary'} />\n          </Arrow>\n        </Flex>\n        <Flex width=\"100%\" justifyContent={['center', null, null, null, 'flex-end']}>\n          <SubgraphHealthIndicator subgraphName=\"gelatodigital/limit-orders-bsc\" inline />\n        </Flex>\n      </Grid>\n    </>\n  )\n}\n\nexport default memo(TableNavigation)\n","import { useState, useCallback, memo } from 'react'\nimport { Flex, Card } from '@pancakeswap/uikit'\nimport useGelatoLimitOrdersHistory from '../../hooks/useGelatoLimitOrdersHistory'\n\nimport OrderTab from './OrderTab'\nimport { ORDER_CATEGORY } from '../../types'\n\nimport CompactLimitOrderTable from './CompactLimitOrderTable'\nimport SpaciousLimitOrderTable from './SpaciousLimitOrderTable'\nimport Navigation from './TableNavigation'\n\nconst OrderTable: React.FC<{ isCompact: boolean; orderCategory: ORDER_CATEGORY }> = memo(\n  ({ orderCategory, isCompact }) => {\n    const orders = useGelatoLimitOrdersHistory(orderCategory)\n\n    return (\n      <Navigation data={orders} orderCategory={orderCategory}>\n        {({ paginatedData }) =>\n          isCompact ? (\n            <CompactLimitOrderTable orders={paginatedData} />\n          ) : (\n            <SpaciousLimitOrderTable orders={paginatedData} />\n          )\n        }\n      </Navigation>\n    )\n  },\n)\n\nconst LimitOrderTable: React.FC<{ isCompact: boolean }> = ({ isCompact }) => {\n  const [activeTab, setIndex] = useState<ORDER_CATEGORY>(ORDER_CATEGORY.Open)\n  const handleClick = useCallback((tabType: ORDER_CATEGORY) => setIndex(tabType), [])\n\n  return (\n    <Flex flex=\"1\" justifyContent=\"center\" mb=\"24px\">\n      <Card style={{ width: '100%', height: 'max-content' }}>\n        <OrderTab onItemClick={handleClick} activeIndex={activeTab} />\n        <OrderTable orderCategory={activeTab} isCompact={isCompact} />\n      </Card>\n    </Flex>\n  )\n}\n\nexport default memo(LimitOrderTable)\n","import { Currency } from '@pancakeswap/sdk'\nimport {\n  ArrowDownIcon,\n  Button,\n  Flex,\n  InjectedModalProps,\n  Message,\n  MessageText,\n  Modal,\n  Spinner,\n  Text,\n} from '@pancakeswap/uikit'\nimport { CurrencyLogo } from 'components/Logo'\nimport { TransactionErrorContent, TransactionSubmittedContent } from 'components/TransactionConfirmationModal'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTheme from 'hooks/useTheme'\nimport { memo } from 'react'\nimport styled from 'styled-components'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport LimitOrderDisclaimer from './LimitOrderDisclaimer'\n\nconst InfoCardWrapper = styled.div`\n  border-radius: 16px;\n  padding: 16px;\n  margin-top: 24px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\ninterface ConfirmLimitOrderModalProps extends InjectedModalProps {\n  currencies: {\n    input: Currency\n    output: Currency\n  }\n  formattedAmounts: {\n    input: string\n    output: string\n    price: string\n  }\n  currentMarketRate: string\n  currentMarketRateInverted: string\n  limitPrice: string\n  limitPriceInverted: string\n  percentageRateDifference: string\n  onConfirm: () => void\n  attemptingTxn: boolean\n  txHash: string\n  customOnDismiss: () => void\n  swapErrorMessage: string\n}\n\nexport const ConfirmLimitOrderModal: React.FC<ConfirmLimitOrderModalProps> = ({\n  onDismiss,\n  currencies,\n  formattedAmounts,\n  currentMarketRate,\n  currentMarketRateInverted,\n  limitPrice,\n  limitPriceInverted,\n  percentageRateDifference,\n  onConfirm,\n  attemptingTxn,\n  txHash,\n  customOnDismiss,\n  swapErrorMessage,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const wrappedOutput = wrappedCurrency(currencies.output, chainId)\n\n  const handleDismiss = () => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }\n  return (\n    <Modal\n      title={t('Confirm Limit Order')}\n      headerBackground={theme.colors.gradients.cardHeader}\n      onDismiss={handleDismiss}\n      style={{ width: '436px' }}\n    >\n      {attemptingTxn ? (\n        <LoadingContent />\n      ) : txHash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={txHash}\n          currencyToAdd={wrappedOutput}\n          onDismiss={handleDismiss}\n        />\n      ) : swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={handleDismiss} message={swapErrorMessage} />\n      ) : (\n        <OrderContent\n          currencies={currencies}\n          formattedAmounts={formattedAmounts}\n          currentMarketRate={currentMarketRate}\n          currentMarketRateInverted={currentMarketRateInverted}\n          limitPrice={limitPrice}\n          limitPriceInverted={limitPriceInverted}\n          percentageRateDifference={percentageRateDifference}\n        />\n      )}\n      {!txHash && !swapErrorMessage && (\n        <Flex justifyContent=\"center\" mt=\"24px\">\n          <Button scale=\"md\" variant=\"primary\" onClick={onConfirm} width=\"100%\" disabled={attemptingTxn}>\n            {attemptingTxn ? t(`Confirming...`) : t(`Confirm`)}\n          </Button>\n        </Flex>\n      )}\n    </Modal>\n  )\n}\n\ninterface OrderContentProps {\n  currencies: {\n    input: Currency\n    output: Currency\n  }\n  formattedAmounts: {\n    input: string\n    output: string\n    price: string\n  }\n  currentMarketRate: string\n  currentMarketRateInverted: string\n  limitPrice: string\n  limitPriceInverted: string\n  percentageRateDifference: string\n}\n\nconst OrderContent: React.FC<OrderContentProps> = ({\n  currencies,\n  formattedAmounts,\n  currentMarketRate,\n  currentMarketRateInverted,\n  limitPrice,\n  limitPriceInverted,\n  percentageRateDifference,\n}) => {\n  const { t } = useTranslation()\n  const currentPriceExchangeRateText = `1 ${currencies.input?.symbol} = ${currentMarketRate} ${currencies.output?.symbol}`\n  const currentPriceExchangeRateTextReversed = `1 ${currencies.output?.symbol} = ${currentMarketRateInverted} ${currencies.input?.symbol}`\n  const limitPriceExchangeRateText = `1 ${currencies.input?.symbol} = ${limitPrice} ${currencies.output?.symbol}`\n  const limitPriceExchangeRateTextReversed = `1 ${currencies.output?.symbol} = ${limitPriceInverted} ${currencies.input?.symbol}`\n  return (\n    <>\n      <Flex flexDirection=\"column\" width=\"100%\">\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text fontSize=\"24px\" color=\"text\">\n            {formattedAmounts.input}\n          </Text>\n          <Flex alignItems=\"center\">\n            <Text textTransform=\"uppercase\" color=\"text\" mr=\"8px\">\n              {currencies.input?.symbol}\n            </Text>\n            <CurrencyLogo currency={currencies.input} />\n          </Flex>\n        </Flex>\n        <Flex justifyContent=\"center\">\n          <ArrowDownIcon />\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text fontSize=\"24px\" color=\"text\">\n            {formattedAmounts.output}\n          </Text>\n          <Flex alignItems=\"center\">\n            <Text textTransform=\"uppercase\" color=\"text\" mr=\"8px\">\n              {currencies.output?.symbol}\n            </Text>\n            <CurrencyLogo currency={currencies.output} />\n          </Flex>\n        </Flex>\n      </Flex>\n      <LimitTradeInfoCard\n        currentPriceExchangeRateText={currentPriceExchangeRateText}\n        currentPriceExchangeRateTextReversed={currentPriceExchangeRateTextReversed}\n        limitPriceExchangeRateText={limitPriceExchangeRateText}\n        limitPriceExchangeRateTextReversed={limitPriceExchangeRateTextReversed}\n      />\n      <Message variant=\"success\" mt=\"24px\">\n        <MessageText>\n          {t(\n            'Limit price is %percentage%% above the current market rate. The order will be executed when the market price reaches high enough above your limit price (to also pay for limit order execution gas fees).',\n            { percentage: percentageRateDifference },\n          )}\n        </MessageText>\n      </Message>\n      <LimitOrderDisclaimer />\n    </>\n  )\n}\n\ninterface LimitTradeInfoCardProps {\n  currentPriceExchangeRateText: string\n  currentPriceExchangeRateTextReversed: string\n  limitPriceExchangeRateText: string\n  limitPriceExchangeRateTextReversed: string\n}\n\nconst LimitTradeInfoCard: React.FC<LimitTradeInfoCardProps> = memo(\n  ({\n    currentPriceExchangeRateText,\n    currentPriceExchangeRateTextReversed,\n    limitPriceExchangeRateText,\n    limitPriceExchangeRateTextReversed,\n  }) => {\n    const { t } = useTranslation()\n    return (\n      <InfoCardWrapper>\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Current Market Price')}\n          </Text>\n          <Flex flexDirection=\"column\">\n            <Text color=\"text\" fontSize=\"14px\" bold>\n              {currentPriceExchangeRateText}\n            </Text>\n            <Text color=\"text\" fontSize=\"14px\">\n              {currentPriceExchangeRateTextReversed}\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mt=\"16px\">\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Limit Price')}\n          </Text>\n          <Flex flexDirection=\"column\">\n            <Text color=\"#129E7D\" fontSize=\"14px\" bold>\n              {limitPriceExchangeRateText}\n            </Text>\n            <Text color=\"#129E7D\" fontSize=\"14px\">\n              {limitPriceExchangeRateTextReversed}\n            </Text>\n          </Flex>\n        </Flex>\n      </InfoCardWrapper>\n    )\n  },\n)\n\nconst LoadingContent: React.FC = memo(() => {\n  const { t } = useTranslation()\n  return (\n    <Flex>\n      <Flex flexDirection=\"column\" flexGrow=\"wrap\" flexBasis=\"267px\">\n        <Text fontSize=\"20px\" small color=\"secondary\">\n          {t('Confirm')}\n        </Text>\n        <Text small color=\"textSubtle\" mt=\"8px\">\n          {t('Please confirm the transaction in your wallet')}\n        </Text>\n      </Flex>\n      <Flex>\n        <Spinner size={70} />\n      </Flex>\n    </Flex>\n  )\n})\n","import { Percent, Price } from '@pancakeswap/sdk'\n\nconst getRatePercentageDifference = (currentMarketRate: Price, price: Price) => {\n  if (currentMarketRate && price) {\n    const percentageAsFraction = price.subtract(currentMarketRate).divide(currentMarketRate)\n    return new Percent(percentageAsFraction.numerator, percentageAsFraction.denominator)\n  }\n  return undefined\n}\n\nexport default getRatePercentageDifference\n","import { useCallback, useEffect, useState, useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport { CurrencyAmount, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Box, Flex, useModal, BottomDrawer, Link, useMatchBreakpointsContext } from '@pancakeswap/uikit'\n\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport { AppBody } from 'components/App'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Footer from 'components/Menu/Footer'\nimport useGelatoLimitOrders from 'hooks/limitOrders/useGelatoLimitOrders'\nimport useGasOverhead from 'hooks/limitOrders/useGasOverhead'\nimport useTheme from 'hooks/useTheme'\nimport { ApprovalState, useApproveCallbackFromInputCurrencyAmount } from 'hooks/useApproveCallback'\nimport { Field } from 'state/limitOrders/types'\nimport { useDefaultsFromURLSearch } from 'state/limitOrders/hooks'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { GELATO_NATIVE } from 'config/constants'\nimport { LIMIT_ORDERS_DOCS_URL } from 'config/constants/exchange'\nimport { useExchangeChartManager } from 'state/user/hooks'\nimport PriceChartContainer from 'views/Swap/components/Chart/PriceChartContainer'\nimport { useWeb3React } from '@web3-react/core'\nimport ClaimWarning from './components/ClaimWarning'\n\nimport { Wrapper, StyledInputCurrencyWrapper, StyledSwapContainer } from './styles'\nimport CurrencyInputHeader from './components/CurrencyInputHeader'\nimport LimitOrderPrice from './components/LimitOrderPrice'\nimport SwitchTokensButton from './components/SwitchTokensButton'\nimport Page from '../Page'\nimport LimitOrderTable from './components/LimitOrderTable'\nimport { ConfirmLimitOrderModal } from './components/ConfirmLimitOrderModal'\nimport getRatePercentageDifference from './utils/getRatePercentageDifference'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport ImportTokenWarningModal from '../../components/ImportTokenWarningModal'\n\nconst LimitOrders = () => {\n  // Helpers\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const router = useRouter()\n  const { isMobile, isTablet } = useMatchBreakpointsContext()\n  const { theme } = useTheme()\n  const [userChartPreference, setUserChartPreference] = useExchangeChartManager(isMobile)\n  const [isChartExpanded, setIsChartExpanded] = useState(false)\n  const [isChartDisplayed, setIsChartDisplayed] = useState(userChartPreference)\n\n  useEffect(() => {\n    setUserChartPreference(isChartDisplayed)\n  }, [isChartDisplayed, setUserChartPreference])\n\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault = useMemo(() => {\n    return (\n      urlLoadedTokens &&\n      urlLoadedTokens.filter((token: Token) => {\n        return !(token.address in defaultTokens)\n      })\n    )\n  }, [defaultTokens, urlLoadedTokens])\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => router.push('/limit-orders')} />,\n    false,\n    false,\n    'limitOrderTokenWarningModal',\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  // TODO: fiat values\n\n  const {\n    handlers: { handleInput, handleCurrencySelection, handleSwitchTokens, handleLimitOrderSubmission, handleRateType },\n    derivedOrderInfo: {\n      currencies,\n      currencyBalances,\n      parsedAmounts,\n      formattedAmounts,\n      rawAmounts,\n      trade,\n      price,\n      inputError,\n      wrappedCurrencies,\n      singleTokenPrice,\n      currencyIds,\n    },\n    orderState: { independentField, basisField, rateType },\n  } = useGelatoLimitOrders()\n\n  const [{ swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const [approvalState, approveCallback] = useApproveCallbackFromInputCurrencyAmount(parsedAmounts.input)\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances.input)\n  const hideMaxButton = Boolean(maxAmountInput && parsedAmounts.input?.equalTo(maxAmountInput))\n\n  // Trade execution price is always \"in MUL mode\", even if UI handles DIV rate\n  const currentMarketRate = trade?.executionPrice\n  const percentageRateDifference = getRatePercentageDifference(currentMarketRate, price)\n\n  // UI handlers\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      handleInput(Field.INPUT, value)\n    },\n    [handleInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      handleInput(Field.OUTPUT, value)\n    },\n    [handleInput],\n  )\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false)\n      handleCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [handleCurrencySelection],\n  )\n  const handleTypeDesiredRate = useCallback(\n    (value: string) => {\n      handleInput(Field.PRICE, value)\n    },\n    [handleInput],\n  )\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      handleInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, handleInput])\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      handleCurrencySelection(Field.OUTPUT, outputCurrency)\n    },\n    [handleCurrencySelection],\n  )\n  const handleApprove = useCallback(async () => {\n    await approveCallback()\n  }, [approveCallback])\n\n  const handleConfirmDismiss = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      handleTypeInput('')\n    }\n  }, [txHash, handleTypeInput])\n\n  // Trick to reset to market price via fake update on the basis field\n  const handleResetToMarketPrice = useCallback(() => {\n    if (basisField === Field.INPUT) {\n      handleTypeInput(formattedAmounts.input)\n    } else {\n      handleTypeOutput(formattedAmounts.output)\n    }\n  }, [handleTypeInput, handleTypeOutput, formattedAmounts.input, formattedAmounts.output, basisField])\n\n  const handlePlaceOrder = useCallback(() => {\n    if (!handleLimitOrderSubmission) {\n      return\n    }\n    setSwapState((prev) => ({\n      attemptingTxn: true,\n      tradeToConfirm: prev.tradeToConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined,\n    }))\n\n    try {\n      if (!wrappedCurrencies.input?.address) {\n        throw new Error('Invalid input currency')\n      }\n      if (!wrappedCurrencies.output?.address) {\n        throw new Error('Invalid output currency')\n      }\n      if (!rawAmounts.input) {\n        throw new Error('Invalid input amount')\n      }\n      if (!rawAmounts.output) {\n        throw new Error('Invalid output amount')\n      }\n\n      if (!account) {\n        throw new Error('No account')\n      }\n      const inputToken = currencies.input instanceof Token ? wrappedCurrencies.input?.address : GELATO_NATIVE\n      const outputToken = currencies.output instanceof Token ? wrappedCurrencies.output?.address : GELATO_NATIVE\n\n      const orderToSubmit = {\n        inputToken,\n        outputToken,\n        inputAmount: rawAmounts.input,\n        outputAmount: rawAmounts.output,\n        owner: account,\n      }\n      handleLimitOrderSubmission(orderToSubmit)\n        .then(({ hash }) => {\n          setSwapState((prev) => ({\n            attemptingTxn: false,\n            tradeToConfirm: prev.tradeToConfirm,\n            swapErrorMessage: undefined,\n            txHash: hash,\n          }))\n        })\n        .catch((error) => {\n          setSwapState((prev) => ({\n            attemptingTxn: false,\n            tradeToConfirm: prev.tradeToConfirm,\n            swapErrorMessage: error.message,\n            txHash: undefined,\n          }))\n        })\n    } catch (error) {\n      console.error(error)\n    }\n  }, [\n    handleLimitOrderSubmission,\n    account,\n    rawAmounts.input,\n    rawAmounts.output,\n    currencies.input,\n    currencies.output,\n    wrappedCurrencies.input?.address,\n    wrappedCurrencies.output?.address,\n  ])\n\n  const handleTokenSwitch = useCallback(() => {\n    setApprovalSubmitted(false)\n    handleSwitchTokens()\n  }, [handleSwitchTokens])\n\n  const { realExecutionPriceAsString } = useGasOverhead(parsedAmounts.input, parsedAmounts.output, rateType)\n\n  const [showConfirmModal] = useModal(\n    <ConfirmLimitOrderModal\n      currencies={currencies}\n      formattedAmounts={formattedAmounts}\n      currentMarketRate={currentMarketRate?.toSignificant(4)}\n      currentMarketRateInverted={currentMarketRate?.invert().toSignificant(4)}\n      limitPrice={price?.toSignificant(6)}\n      limitPriceInverted={price?.invert().toSignificant(6)}\n      percentageRateDifference={parseFloat(percentageRateDifference?.toSignificant(3)).toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 3,\n      })}\n      onConfirm={handlePlaceOrder}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      customOnDismiss={handleConfirmDismiss}\n      swapErrorMessage={swapErrorMessage}\n    />,\n    true,\n    true,\n    'confirmLimitOrderModal',\n  )\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approvalState, approvalSubmitted])\n\n  const showApproveFlow =\n    !inputError && (approvalState === ApprovalState.NOT_APPROVED || approvalState === ApprovalState.PENDING)\n\n  const isSideFooter = isChartExpanded || isChartDisplayed\n\n  return (\n    <Page\n      removePadding={isChartExpanded}\n      hideFooterOnDesktop={isSideFooter}\n      noMinHeight\n      helpUrl={LIMIT_ORDERS_DOCS_URL}\n    >\n      <ClaimWarning />\n      <Flex\n        width=\"100%\"\n        justifyContent=\"center\"\n        position=\"relative\"\n        mb={isSideFooter ? null : '24px'}\n        mt={isChartExpanded ? '24px' : null}\n      >\n        {!isMobile && (\n          <Flex width={isChartExpanded ? '100%' : '50%'} maxWidth=\"928px\" flexDirection=\"column\">\n            <PriceChartContainer\n              inputCurrencyId={currencyIds.input}\n              inputCurrency={currencies.input}\n              outputCurrencyId={currencyIds.output}\n              outputCurrency={currencies.output}\n              isChartExpanded={isChartExpanded}\n              setIsChartExpanded={setIsChartExpanded}\n              isChartDisplayed={isChartDisplayed}\n              currentSwapPrice={singleTokenPrice}\n              isFullWidthContainer\n            />\n            {isChartDisplayed && <Box mb=\"48px\" />}\n            <Box width=\"100%\">\n              <LimitOrderTable isCompact={isTablet} />\n            </Box>\n          </Flex>\n        )}\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <StyledSwapContainer $isChartExpanded={false}>\n            <StyledInputCurrencyWrapper>\n              <AppBody>\n                <CurrencyInputHeader\n                  title={t('Limit')}\n                  subtitle={t('Place a limit order to trade at a set price')}\n                  setIsChartDisplayed={setIsChartDisplayed}\n                  isChartDisplayed={isChartDisplayed}\n                />\n                <Wrapper id=\"limit-order-page\" style={{ minHeight: '412px' }}>\n                  <AutoColumn gap=\"sm\">\n                    <CurrencyInputPanel\n                      label={independentField === Field.OUTPUT ? t('From (estimated)') : t('From')}\n                      value={formattedAmounts.input}\n                      showMaxButton={!hideMaxButton}\n                      currency={currencies.input}\n                      onUserInput={handleTypeInput}\n                      onMax={handleMaxInput}\n                      onCurrencySelect={handleInputSelect}\n                      otherCurrency={currencies.output}\n                      id=\"limit-order-currency-input\"\n                    />\n\n                    <SwitchTokensButton\n                      handleSwitchTokens={handleTokenSwitch}\n                      color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                    />\n                    <CurrencyInputPanel\n                      value={formattedAmounts.output}\n                      onUserInput={handleTypeOutput}\n                      label={independentField === Field.INPUT ? t('To (estimated)') : t('To')}\n                      showMaxButton={false}\n                      currency={currencies.output}\n                      onCurrencySelect={handleOutputSelect}\n                      otherCurrency={currencies.output}\n                      id=\"limit-order-currency-output\"\n                    />\n                    <LimitOrderPrice\n                      id=\"limit-order-desired-rate-input\"\n                      value={formattedAmounts.price}\n                      onUserInput={handleTypeDesiredRate}\n                      inputCurrency={currencies.input}\n                      outputCurrency={currencies.output}\n                      percentageRateDifference={percentageRateDifference}\n                      rateType={rateType}\n                      handleRateType={handleRateType}\n                      price={price}\n                      handleResetToMarketPrice={handleResetToMarketPrice}\n                      realExecutionPriceAsString={!inputError ? realExecutionPriceAsString : undefined}\n                      disabled={!formattedAmounts.input && !formattedAmounts.output}\n                    />\n                  </AutoColumn>\n                  <Box mt=\"0.25rem\">\n                    {!account ? (\n                      <ConnectWalletButton width=\"100%\" />\n                    ) : showApproveFlow ? (\n                      <Button\n                        variant=\"primary\"\n                        onClick={handleApprove}\n                        id=\"enable-order-button\"\n                        width=\"100%\"\n                        disabled={approvalSubmitted}\n                      >\n                        {approvalSubmitted\n                          ? t('Enabling %asset%', { asset: currencies.input?.symbol })\n                          : t('Enable %asset%', { asset: currencies.input?.symbol })}\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"primary\"\n                        onClick={() => {\n                          setSwapState({\n                            tradeToConfirm: trade,\n                            attemptingTxn: false,\n                            swapErrorMessage: undefined,\n                            txHash: undefined,\n                          })\n                          showConfirmModal()\n                        }}\n                        id=\"place-order-button\"\n                        width=\"100%\"\n                        disabled={!!inputError || realExecutionPriceAsString === 'never executes'}\n                      >\n                        {inputError || realExecutionPriceAsString === 'never executes'\n                          ? inputError || t(\"Can't execute this order\")\n                          : t('Place an Order')}\n                      </Button>\n                    )}\n                  </Box>\n                  <Flex mt=\"16px\" justifyContent=\"center\">\n                    <Link external href=\"https://www.gelato.network/\">\n                      <img\n                        src={\n                          theme.isDark ? '/images/powered_by_gelato_white.svg' : '/images/powered_by_gelato_black.svg'\n                        }\n                        alt=\"Powered by Gelato\"\n                        width=\"170px\"\n                        height=\"48px\"\n                      />\n                    </Link>\n                  </Flex>\n                </Wrapper>\n              </AppBody>\n            </StyledInputCurrencyWrapper>\n          </StyledSwapContainer>\n          {isMobile && (\n            <Flex mt=\"24px\" width=\"100%\">\n              <LimitOrderTable isCompact />\n            </Flex>\n          )}\n          {isSideFooter && (\n            <Box display={['none', null, null, 'block']} width=\"100%\" height=\"100%\">\n              <Footer variant=\"side\" helpUrl={LIMIT_ORDERS_DOCS_URL} />\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n      {/* Fixed position, doesn't take normal DOM space */}\n      <BottomDrawer\n        content={\n          <PriceChartContainer\n            inputCurrencyId={currencyIds.input}\n            inputCurrency={currencies[Field.INPUT]}\n            outputCurrencyId={currencyIds.output}\n            outputCurrency={currencies[Field.OUTPUT]}\n            isChartExpanded={isChartExpanded}\n            setIsChartExpanded={setIsChartExpanded}\n            isChartDisplayed={isChartDisplayed}\n            currentSwapPrice={singleTokenPrice}\n            isMobile\n          />\n        }\n        isOpen={isChartDisplayed}\n        setIsOpen={setIsChartDisplayed}\n      />\n    </Page>\n  )\n}\n\nexport default LimitOrders\n","import LimitOrders from '../views/LimitOrders'\n\nconst LimitOrdersPage = () => {\n  return <LimitOrders />\n}\n\nexport default LimitOrdersPage\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[4576],{\n\n/***/ 84120:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/limit-orders\",\n      function () {\n        return __webpack_require__(4285);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 158:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Td\": function() { return /* binding */ Td; },\n/* harmony export */   \"Th\": function() { return /* binding */ Th; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7297);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87379);\n/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57247);\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)([\n        \"\\n  border-bottom: 1px solid \",\n        \";\\n  color: \",\n        \";\\n  padding: 16px;\\n  vertical-align: middle;\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)([\n        \"\\n  color: \",\n        \";\\n  font-size: 12px;\\n  text-transform: uppercase;\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nvar Td = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].td.withConfig */ .ZP.td.withConfig({\n    componentId: \"sc-ea0e7240-0\"\n}).withConfig({\n    componentId: \"sc-a0ae180c-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.text;\n}, styled_system__WEBPACK_IMPORTED_MODULE_0__/* .typography */ .cp);\nvar Th = (0,styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .ZP)(Td).attrs({\n    as: \"th\"\n}).withConfig({\n    componentId: \"sc-ea0e7240-1\"\n}).withConfig({\n    componentId: \"sc-a0ae180c-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.colors.secondary;\n});\n\n\n/***/ }),\n\n/***/ 48993:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7297);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87379);\n/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57247);\n/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(158);\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)([\n        \"\\n  max-width: 100%;\\n  width: 100%;\\n\\n  tbody tr:last-child {\\n    \",\n        \" {\\n      border-bottom: 0;\\n    }\\n  }\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nvar Table = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].table.withConfig */ .ZP.table.withConfig({\n    componentId: \"sc-4fe367f7-0\"\n}).withConfig({\n    componentId: \"sc-b0f07fdc-0\"\n})(_templateObject(), _Cell__WEBPACK_IMPORTED_MODULE_3__.Td, styled_system__WEBPACK_IMPORTED_MODULE_0__/* .space */ .Dh);\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Table);\n\n\n/***/ }),\n\n/***/ 9989:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(26042);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(69396);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67294);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9355);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(59750);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(44850);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(97114);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(4318);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(19731);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(96293);\n/* harmony import */ var contexts_Localization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99150);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87379);\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  background: \",\n        \";\\n  padding-bottom: 24px;\\n  padding-top: 24px;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar GradientModalHeader = (0,styled_components__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .ModalHeader */ .xB).withConfig({\n    componentId: \"sc-938d63d6-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.gradients.bubblegum;\n});\n// TODO: Copy from src/views/Predictions/components/RiskDisclaimer.tsx\n// Will replace that with this modal.\nvar DisclaimerModal = function(param) {\n    var id = param.id, onSuccess = param.onSuccess, onDismiss = param.onDismiss, checks = param.checks, header = param.header, subtitle = param.subtitle;\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(checks || []), checkState = ref[0], setCheckState = ref[1];\n    var t = (0,contexts_Localization__WEBPACK_IMPORTED_MODULE_3__/* .useTranslation */ .$G)().t;\n    var handleSetAcknowledgeRisk = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(function(currentKey) {\n        var newCheckState = checkState.map(function(check) {\n            if (currentKey === check.key) {\n                return (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z)({}, check), {\n                    value: !check.value\n                });\n            }\n            return check;\n        });\n        setCheckState(newCheckState);\n    }, [\n        checkState\n    ]);\n    var handleConfirm = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(function() {\n        onSuccess();\n        onDismiss();\n    }, [\n        onSuccess,\n        onDismiss\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .ModalContainer */ .F0, {\n        title: t(\"Welcome!\"),\n        minWidth: \"320px\",\n        id: id,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(GradientModalHeader, {\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .ModalTitle */ .r6, {\n                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z, {\n                        scale: \"lg\",\n                        children: t(\"Welcome!\")\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .ModalBody */ .fe, {\n                p: \"24px\",\n                maxWidth: [\n                    \"100%\",\n                    \"100%\",\n                    \"100%\",\n                    \"400px\"\n                ],\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z, {\n                        maxHeight: \"300px\",\n                        overflowY: \"auto\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z, {\n                                as: \"h3\",\n                                mb: \"24px\",\n                                children: header\n                            }),\n                            subtitle && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z, {\n                                as: \"p\",\n                                color: \"textSubtle\",\n                                mb: \"24px\",\n                                children: subtitle\n                            }),\n                            checkState.map(function(check) {\n                                return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n                                    htmlFor: check.key,\n                                    style: {\n                                        display: \"block\",\n                                        cursor: \"pointer\",\n                                        marginBottom: \"24px\"\n                                    },\n                                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__/* [\"default\"] */ .Z, {\n                                        alignItems: \"center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                                                style: {\n                                                    flex: \"none\",\n                                                    alignSelf: \"flex-start\",\n                                                    paddingTop: \"8px\"\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z, {\n                                                    id: check.key,\n                                                    scale: \"sm\",\n                                                    checked: check.value,\n                                                    onChange: function() {\n                                                        return handleSetAcknowledgeRisk(check.key);\n                                                    }\n                                                })\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z, {\n                                                ml: \"8px\",\n                                                children: check.content\n                                            })\n                                        ]\n                                    })\n                                }, check.key);\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z, {\n                        id: \"\".concat(id, \"-continue\"),\n                        width: \"100%\",\n                        onClick: handleConfirm,\n                        disabled: checkState.some(function(check) {\n                            return !check.value;\n                        }),\n                        children: t(\"Continue\")\n                    })\n                ]\n            })\n        ]\n    });\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (DisclaimerModal);\n\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ components_SubgraphHealthIndicator; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(26042);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(7297);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./src/config/index.ts + 1 modules\nvar config = __webpack_require__(37519);\n// EXTERNAL MODULE: ./src/contexts/Localization/index.tsx + 3 modules\nvar Localization = __webpack_require__(99150);\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(87379);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/Card.tsx + 1 modules\nvar Card = __webpack_require__(38144);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(4318);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(44850);\n// EXTERNAL MODULE: ./packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(36544);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(97114);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Info.tsx\nvar Info = __webpack_require__(82035);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar hooks = __webpack_require__(68605);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(47568);\n// EXTERNAL MODULE: ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(34051);\nvar runtime_default = /*#__PURE__*/__webpack_require__.n(runtime);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/graphql-request/dist/index.js\nvar dist = __webpack_require__(28687);\n// EXTERNAL MODULE: ./src/utils/providers.ts + 1 modules\nvar providers = __webpack_require__(65684);\n// EXTERNAL MODULE: ./src/config/constants/endpoints.ts\nvar endpoints = __webpack_require__(85906);\n// EXTERNAL MODULE: ./src/hooks/useRefreshEffect.ts\nvar useRefreshEffect = __webpack_require__(27892);\n;// CONCATENATED MODULE: ./src/hooks/useSubgraphHealth.ts\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        '\\n            query getNftMarketSubgraphHealth {\\n              indexingStatusForCurrentVersion(subgraphName: \"',\n        '\") {\\n                synced\\n                health\\n                chains {\\n                  chainHeadBlock {\\n                    number\\n                  }\\n                  latestBlock {\\n                    number\\n                  }\\n                }\\n              }\\n            }\\n          '\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar SubgraphStatus;\n(function(SubgraphStatus) {\n    SubgraphStatus[SubgraphStatus[\"OK\"] = 0] = \"OK\";\n    SubgraphStatus[SubgraphStatus[\"WARNING\"] = 1] = \"WARNING\";\n    SubgraphStatus[SubgraphStatus[\"NOT_OK\"] = 2] = \"NOT_OK\";\n    SubgraphStatus[SubgraphStatus[\"UNKNOWN\"] = 3] = \"UNKNOWN\";\n})(SubgraphStatus || (SubgraphStatus = {}));\nvar NOT_OK_BLOCK_DIFFERENCE = 200 // ~15 minutes delay\n;\nvar WARNING_BLOCK_DIFFERENCE = 50 // ~2.5 minute delay\n;\nvar useSubgraphHealth = function(subgraphName) {\n    var ref = (0,react.useState)({\n        status: SubgraphStatus.UNKNOWN,\n        currentBlock: 0,\n        chainHeadBlock: 0,\n        latestBlock: 0,\n        blockDifference: 0\n    }), sgHealth = ref[0], setSgHealth = ref[1];\n    (0,useRefreshEffect/* useSlowRefreshEffect */.X)(function(currentBlockNumber) {\n        var getSubgraphHealth = function() {\n            var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee() {\n                var ref, indexingStatusForCurrentVersion, currentBlock, isHealthy, chainHeadBlock, latestBlock, blockDifference, chainHeadBlockDifference;\n                return runtime_default().wrap(function _callee$(_ctx) {\n                    while(1)switch(_ctx.prev = _ctx.next){\n                        case 0:\n                            _ctx.prev = 0;\n                            _ctx.t0 = _sliced_to_array/* default */.Z;\n                            _ctx.next = 4;\n                            return Promise.all([\n                                (0,dist.request)(endpoints/* GRAPH_HEALTH */.AM, (0,dist.gql)(_templateObject(), subgraphName)),\n                                currentBlockNumber ? Promise.resolve(currentBlockNumber) : providers/* bscRpcProvider.getBlockNumber */.v.getBlockNumber(), \n                            ]);\n                        case 4:\n                            _ctx.t1 = _ctx.sent;\n                            ref = (0, _ctx.t0)(_ctx.t1, 2);\n                            indexingStatusForCurrentVersion = ref[0].indexingStatusForCurrentVersion;\n                            currentBlock = ref[1];\n                            isHealthy = indexingStatusForCurrentVersion.health === \"healthy\";\n                            chainHeadBlock = parseInt(indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number);\n                            latestBlock = parseInt(indexingStatusForCurrentVersion.chains[0].latestBlock.number);\n                            blockDifference = currentBlock - latestBlock;\n                            chainHeadBlockDifference = currentBlock - chainHeadBlock;\n                            if (!isHealthy || blockDifference > NOT_OK_BLOCK_DIFFERENCE || chainHeadBlockDifference > NOT_OK_BLOCK_DIFFERENCE) {\n                                setSgHealth({\n                                    status: SubgraphStatus.NOT_OK,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            } else if (blockDifference > WARNING_BLOCK_DIFFERENCE || chainHeadBlockDifference > WARNING_BLOCK_DIFFERENCE) {\n                                setSgHealth({\n                                    status: SubgraphStatus.WARNING,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            } else {\n                                setSgHealth({\n                                    status: SubgraphStatus.OK,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            }\n                            _ctx.next = 19;\n                            break;\n                        case 16:\n                            _ctx.prev = 16;\n                            _ctx.t2 = _ctx[\"catch\"](0);\n                            console.error(\"Failed to perform health check for \".concat(subgraphName, \" subgraph\"), _ctx.t2);\n                        case 19:\n                        case \"end\":\n                            return _ctx.stop();\n                    }\n                }, _callee, null, [\n                    [\n                        0,\n                        16\n                    ]\n                ]);\n            }));\n            return function getSubgraphHealth() {\n                return _ref.apply(this, arguments);\n            };\n        }();\n        getSubgraphHealth();\n    }, [\n        subgraphName\n    ]);\n    return sgHealth;\n};\n/* harmony default export */ var hooks_useSubgraphHealth = (useSubgraphHealth);\n\n;// CONCATENATED MODULE: ./src/components/SubgraphHealthIndicator/index.tsx\n\n\n\nfunction SubgraphHealthIndicator_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: 8px;\\n  > div {\\n    border-radius: 8px;\\n  }\\n  user-select: none;\\n\"\n    ]);\n    SubgraphHealthIndicator_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  gap: 7px;\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: \",\n        \";\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar StyledCard = (0,styled_components_browser_esm/* default */.ZP)(Card/* default */.Z).withConfig({\n    componentId: \"sc-f38aa051-0\"\n})(SubgraphHealthIndicator_templateObject());\nvar IndicatorWrapper = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-f38aa051-1\"\n})(_templateObject1());\nvar Dot = (0,styled_components_browser_esm/* default */.ZP)(Box/* default */.Z).withConfig({\n    componentId: \"sc-f38aa051-2\"\n})(_templateObject2(), function(param) {\n    var $color = param.$color, theme = param.theme;\n    return theme.colors[$color];\n});\nvar ref, ref1, ref2;\nvar indicator = function(t, customDescriptions) {\n    return {\n        delayed: {\n            label: t(\"Delayed\"),\n            color: \"failure\",\n            description: (ref = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.delayed) !== null && ref !== void 0 ? ref : t(\"Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.\")\n        },\n        slow: {\n            label: t(\"Slight delay\"),\n            color: \"warning\",\n            description: (ref1 = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.slow) !== null && ref1 !== void 0 ? ref1 : t(\"Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.\")\n        },\n        healthy: {\n            label: t(\"Fast\"),\n            color: \"success\",\n            description: (ref2 = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.healthy) !== null && ref2 !== void 0 ? ref2 : t(\"No issues with the subgraph.\")\n        }\n    };\n};\nvar getIndicator = function(sgStatus) {\n    if (sgStatus === SubgraphStatus.NOT_OK) {\n        return \"delayed\";\n    }\n    if (sgStatus === SubgraphStatus.WARNING) {\n        return \"slow\";\n    }\n    return \"healthy\";\n};\nvar SubgraphHealthIndicator = function(param) {\n    var subgraphName = param.subgraphName, inline = param.inline, customDescriptions = param.customDescriptions, obeyGlobalSetting = param.obeyGlobalSetting;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = hooks_useSubgraphHealth(subgraphName), status = ref.status, currentBlock = ref.currentBlock, blockDifference = ref.blockDifference, latestBlock = ref.latestBlock;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,hooks/* useSubgraphHealthIndicatorManager */.YF)(), 1), alwaysShowIndicator = ref1[0];\n    var forceIndicatorDisplay = status === SubgraphStatus.WARNING || status === SubgraphStatus.NOT_OK;\n    var showIndicator = obeyGlobalSetting && alwaysShowIndicator || forceIndicatorDisplay;\n    var indicatorProps = indicator(t, customDescriptions);\n    var secondRemainingBlockSync = blockDifference * config/* BSC_BLOCK_TIME */.hJ;\n    var indicatorValue = getIndicator(status);\n    var current = indicatorProps[indicatorValue];\n    var ref2 = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipContent, (0,_object_spread/* default */.Z)({\n        currentBlock: currentBlock,\n        secondRemainingBlockSync: secondRemainingBlockSync,\n        blockNumberFromSubgraph: latestBlock\n    }, current)), {\n        placement: \"top\"\n    }), targetRef = ref2.targetRef, tooltipVisible = ref2.tooltipVisible, tooltip = ref2.tooltip;\n    if (!latestBlock || !currentBlock || !showIndicator) {\n        return null;\n    }\n    if (inline) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            ref: targetRef,\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                    $color: current.color\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    children: current.label\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Info/* default */.Z, {}),\n                tooltipVisible && tooltip\n            ]\n        });\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        position: \"fixed\",\n        bottom: \"55px\",\n        right: \"5%\",\n        ref: targetRef,\n        \"data-test\": \"subgraph-health-indicator\",\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledCard, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n                    alignItems: \"center\",\n                    p: \"10px\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                            $color: current.color\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: current.label\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Info/* default */.Z, {})\n                    ]\n                })\n            })\n        ]\n    });\n};\nvar TooltipContent = function(param) {\n    var color = param.color, label = param.label, description = param.description, currentBlock = param.currentBlock, secondRemainingBlockSync = param.secondRemainingBlockSync, blockNumberFromSubgraph = param.blockNumberFromSubgraph;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n                pb: \"10px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                        $color: color\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        children: label\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                pb: \"24px\",\n                children: description\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Chain Head Block\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    currentBlock\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Latest Subgraph Block\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    blockNumberFromSubgraph\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Delay\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    currentBlock - blockNumberFromSubgraph,\n                    \" (\",\n                    secondRemainingBlockSync,\n                    \"s)\"\n                ]\n            })\n        ]\n    });\n};\n/* harmony default export */ var components_SubgraphHealthIndicator = (SubgraphHealthIndicator);\n\n\n/***/ }),\n\n/***/ 4285:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ limit_orders; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(47568);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_instanceof.mjs\nvar _instanceof = __webpack_require__(82670);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(34051);\nvar runtime_default = /*#__PURE__*/__webpack_require__.n(runtime);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/next/router.js\nvar next_router = __webpack_require__(11163);\n// EXTERNAL MODULE: ./packages/swap-sdk/src/index.ts + 32 modules\nvar src = __webpack_require__(54346);\n// EXTERNAL MODULE: ./packages/uikit/src/contexts/MatchBreakpoints/useMatchBreakpointsContext.ts\nvar useMatchBreakpointsContext = __webpack_require__(98946);\n// EXTERNAL MODULE: ./packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(65528);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(4318);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(44850);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(96293);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Link/Link.tsx\nvar Link = __webpack_require__(80421);\n// EXTERNAL MODULE: ./packages/uikit/src/components/BottomDrawer/BottomDrawer.tsx\nvar BottomDrawer = __webpack_require__(67653);\n// EXTERNAL MODULE: ./src/contexts/Localization/index.tsx + 3 modules\nvar Localization = __webpack_require__(99150);\n// EXTERNAL MODULE: ./src/components/Layout/Column.tsx\nvar Column = __webpack_require__(41914);\n// EXTERNAL MODULE: ./src/components/CurrencyInputPanel/index.tsx\nvar CurrencyInputPanel = __webpack_require__(71372);\n// EXTERNAL MODULE: ./src/components/App/index.tsx + 3 modules\nvar App = __webpack_require__(45460);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(30621);\n// EXTERNAL MODULE: ./src/components/Menu/Footer.tsx\nvar Footer = __webpack_require__(13625);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_define_property.mjs\nvar _define_property = __webpack_require__(14924);\n// EXTERNAL MODULE: ./node_modules/jsbi/dist/jsbi-umd.js\nvar jsbi_umd = __webpack_require__(39499);\nvar jsbi_umd_default = /*#__PURE__*/__webpack_require__.n(jsbi_umd);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules\nvar es = __webpack_require__(9473);\n// EXTERNAL MODULE: ./src/config/constants/exchange.ts\nvar exchange = __webpack_require__(19838);\n// EXTERNAL MODULE: ./src/hooks/useActiveWeb3React.ts\nvar useActiveWeb3React = __webpack_require__(64011);\n// EXTERNAL MODULE: ./src/utils/wrappedCurrency.ts\nvar wrappedCurrency = __webpack_require__(53854);\n// EXTERNAL MODULE: ./src/hooks/Tokens.ts\nvar Tokens = __webpack_require__(86435);\n// EXTERNAL MODULE: ./src/hooks/Trades.ts + 1 modules\nvar Trades = __webpack_require__(23715);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/utils/getPriceForOneToken.ts\n\n/**\n * Given certain amount if input and output tokens\n * calculate the price for 1 input token in terms of output tokens\n */ var getPriceForOneToken = function(inputAmount, outputAmount) {\n    if (!inputAmount || !outputAmount || inputAmount.equalTo(0) || outputAmount.equalTo(0)) {\n        return undefined;\n    }\n    return new src/* Price */.tA(inputAmount.currency, outputAmount.currency, inputAmount.raw, outputAmount.raw);\n};\n/* harmony default export */ var utils_getPriceForOneToken = (getPriceForOneToken);\n\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(93293);\n// EXTERNAL MODULE: ./src/utils/tryParseAmount.ts\nvar tryParseAmount = __webpack_require__(97938);\n// EXTERNAL MODULE: ./src/state/wallet/hooks.ts\nvar hooks = __webpack_require__(71900);\n// EXTERNAL MODULE: ./src/state/limitOrders/actions.ts\nvar actions = __webpack_require__(90542);\n// EXTERNAL MODULE: ./src/state/limitOrders/types.ts\nvar types = __webpack_require__(37621);\n// EXTERNAL MODULE: ./src/state/index.ts + 19 modules\nvar state = __webpack_require__(31318);\n;// CONCATENATED MODULE: ./src/state/limitOrders/hooks.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get desired input amount in output basis mode\nvar getDesiredInput = function(outputValue, exchangeRate, inputCurrency, outputCurrency, isInverted) {\n    if (!outputValue || !inputCurrency || !outputCurrency) {\n        return undefined;\n    }\n    var parsedOutAmount = (0,tryParseAmount/* default */.Z)(outputValue, isInverted ? inputCurrency : outputCurrency);\n    var parsedExchangeRate = (0,tryParseAmount/* default */.Z)(exchangeRate, isInverted ? inputCurrency : outputCurrency);\n    if (!parsedOutAmount || !parsedExchangeRate) {\n        return undefined;\n    }\n    if (isInverted) {\n        var invertedResultAsFraction = parsedOutAmount.asFraction.multiply(parsedExchangeRate.asFraction).multiply(jsbi_umd_default().exponentiate(exchange/* BIG_INT_TEN */.TY, jsbi_umd_default().BigInt(inputCurrency.decimals)));\n        var invertedResultAsAmount = (0,_instanceof/* default */.Z)(inputCurrency, src/* Token */.WU) ? new src/* TokenAmount */.dt(inputCurrency, invertedResultAsFraction.toFixed(0)) : src/* CurrencyAmount.ether */.ih.ether(invertedResultAsFraction.toFixed(0));\n        return invertedResultAsAmount;\n    }\n    var resultAsFraction = parsedOutAmount.asFraction.divide(parsedExchangeRate.asFraction).multiply(jsbi_umd_default().exponentiate(exchange/* BIG_INT_TEN */.TY, jsbi_umd_default().BigInt(inputCurrency.decimals)));\n    var resultAsAmount = (0,_instanceof/* default */.Z)(inputCurrency, src/* Token */.WU) ? new src/* TokenAmount */.dt(inputCurrency, resultAsFraction.quotient.toString()) : src/* CurrencyAmount.ether */.ih.ether(resultAsFraction.quotient.toString());\n    return resultAsAmount;\n};\n// Get desired output amount in input basis mode\nvar getDesiredOutput = function(inputValue, exchangeRate, inputCurrency, outputCurrency, isInverted) {\n    if (!inputValue || !inputCurrency || !outputCurrency) {\n        return undefined;\n    }\n    var parsedInputAmount = (0,tryParseAmount/* default */.Z)(inputValue, isInverted ? outputCurrency : inputCurrency);\n    var parsedExchangeRate = (0,tryParseAmount/* default */.Z)(exchangeRate, isInverted ? inputCurrency : outputCurrency);\n    if (!parsedExchangeRate || !parsedInputAmount) {\n        return undefined;\n    }\n    if (isInverted) {\n        var invertedResultAsFraction = parsedInputAmount.asFraction.multiply(jsbi_umd_default().exponentiate(exchange/* BIG_INT_TEN */.TY, jsbi_umd_default().BigInt(outputCurrency.decimals))).divide(parsedExchangeRate.asFraction);\n        var invertedResultAsAmount = (0,_instanceof/* default */.Z)(outputCurrency, src/* Token */.WU) ? new src/* TokenAmount */.dt(outputCurrency, invertedResultAsFraction.toFixed(0)) : src/* CurrencyAmount.ether */.ih.ether(invertedResultAsFraction.toFixed(0));\n        return invertedResultAsAmount;\n    }\n    var resultAsFraction = parsedInputAmount.asFraction.multiply(parsedExchangeRate.asFraction).multiply(jsbi_umd_default().exponentiate(exchange/* BIG_INT_TEN */.TY, jsbi_umd_default().BigInt(outputCurrency.decimals)));\n    var resultAsAmount = (0,_instanceof/* default */.Z)(outputCurrency, src/* Token */.WU) ? new src/* TokenAmount */.dt(outputCurrency, resultAsFraction.quotient.toString()) : src/* CurrencyAmount.ether */.ih.ether(resultAsFraction.quotient.toString());\n    return resultAsAmount;\n};\n// Just returns Redux state for limitOrders\nvar useOrderState = function() {\n    return (0,es/* useSelector */.v9)(function(state) {\n        return state.limitOrders;\n    });\n};\n// Returns handlers to change user-defined parts of limitOrders state\nvar useOrderActionHandlers = function() {\n    var dispatch = (0,es/* useDispatch */.I0)();\n    var onCurrencySelection = (0,react.useCallback)(function(field, currency) {\n        dispatch((0,actions/* selectCurrency */.j)({\n            field: field,\n            currencyId: (0,_instanceof/* default */.Z)(currency, src/* Token */.WU) ? currency.address : currency === src/* ETHER */.c0 ? \"BNB\" : \"\"\n        }));\n    }, [\n        dispatch\n    ]);\n    var onSwitchTokens = (0,react.useCallback)(function() {\n        dispatch((0,actions/* switchCurrencies */.KS)());\n    }, [\n        dispatch\n    ]);\n    var onUserInput = (0,react.useCallback)(function(field, typedValue) {\n        dispatch((0,actions/* typeInput */.LC)({\n            field: field,\n            typedValue: typedValue\n        }));\n    }, [\n        dispatch\n    ]);\n    var onChangeRateType = (0,react.useCallback)(function(rateType) {\n        dispatch((0,actions/* setRateType */.sN)({\n            rateType: rateType\n        }));\n    }, [\n        dispatch\n    ]);\n    return {\n        onSwitchTokens: onSwitchTokens,\n        onCurrencySelection: onCurrencySelection,\n        onUserInput: onUserInput,\n        onChangeRateType: onChangeRateType\n    };\n};\nvar getErrorMessage = function(account, wrappedCurrencies, currencies, currencyBalances, parsedAmounts, trade, price, rateType) {\n    if (!account) {\n        return \"Connect Wallet\";\n    }\n    if (wrappedCurrencies.input && wrappedCurrencies.output && wrappedCurrencies.input.address.toLowerCase() === wrappedCurrencies.output.address.toLowerCase()) {\n        return \"Order not allowed\";\n    }\n    var hasBothTokensSelected = currencies.input && currencies.output;\n    if (!hasBothTokensSelected) {\n        return \"Select a token\";\n    }\n    var hasAtLeastOneParsedAmount = parsedAmounts.input || parsedAmounts.output;\n    var tradeIsNotAvailable = !trade || !(trade === null || trade === void 0 ? void 0 : trade.route);\n    if (hasAtLeastOneParsedAmount && tradeIsNotAvailable) {\n        return \"Insufficient liquidity for this trade\";\n    }\n    var someParsedAmountIsMissing = !parsedAmounts.input || !parsedAmounts.output;\n    if (someParsedAmountIsMissing) {\n        return \"Enter an amount\";\n    }\n    if (currencyBalances.input && currencyBalances.input.lessThan(parsedAmounts.input)) {\n        return \"Insufficient \".concat(currencyBalances.input.currency.symbol, \" balance\");\n    }\n    if (price) {\n        if (rateType === types/* Rate.MUL */.j.MUL && (price.lessThan(trade.executionPrice.asFraction) || price.equalTo(trade.executionPrice.asFraction))) {\n            return \"Only possible to place sell orders above market rate\";\n        }\n        if (rateType === types/* Rate.DIV */.j.DIV && (price.invert().greaterThan(trade.executionPrice.invert().asFraction) || price.invert().equalTo(trade.executionPrice.invert().asFraction))) {\n            return \"Only possible to place buy orders below market rate\";\n        }\n    }\n    return undefined;\n};\n// from the current swap inputs, compute the best trade and return it.\nvar useDerivedOrderInfo = function() {\n    var ref, ref1, ref2, ref3, ref4;\n    var ref5 = (0,useActiveWeb3React/* default */.Z)(), account = ref5.account, chainId = ref5.chainId;\n    var ref6 = useOrderState(), independentField = ref6.independentField, basisField = ref6.basisField, typedValue = ref6.typedValue, _INPUT = ref6[types/* Field.INPUT */.g.INPUT], inputCurrencyId = _INPUT.currencyId, _OUTPUT = ref6[types/* Field.OUTPUT */.g.OUTPUT], outputCurrencyId = _OUTPUT.currencyId, rateType = ref6.rateType, inputValue = ref6.inputValue, outputValue = ref6.outputValue;\n    // Get Currency objects based on currencyId strings\n    var inputCurrency = (0,Tokens/* useCurrency */.U8)(inputCurrencyId);\n    var outputCurrency = (0,Tokens/* useCurrency */.U8)(outputCurrencyId);\n    var currencies = (0,react.useMemo)(function() {\n        return {\n            input: inputCurrency !== null && inputCurrency !== void 0 ? inputCurrency : undefined,\n            output: outputCurrency !== null && outputCurrency !== void 0 ? outputCurrency : undefined\n        };\n    }, [\n        inputCurrency,\n        outputCurrency\n    ]);\n    var wrappedCurrencies = (0,react.useMemo)(function() {\n        return {\n            input: (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies.input, chainId),\n            output: (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies.output, chainId)\n        };\n    }, [\n        currencies.input,\n        currencies.output,\n        chainId\n    ]);\n    // Get user balance for selected Currencies\n    var relevantTokenBalances = (0,hooks/* useCurrencyBalances */.K5)(account !== null && account !== void 0 ? account : undefined, [\n        inputCurrency !== null && inputCurrency !== void 0 ? inputCurrency : undefined,\n        outputCurrency !== null && outputCurrency !== void 0 ? outputCurrency : undefined, \n    ]);\n    var currencyBalances = {\n        input: relevantTokenBalances[0],\n        output: relevantTokenBalances[1]\n    };\n    // Get CurrencyAmount for the inputCurrency amount specified by user\n    var inputAmount = (0,react.useMemo)(function() {\n        return (0,tryParseAmount/* default */.Z)(inputValue, inputCurrency !== null && inputCurrency !== void 0 ? inputCurrency : undefined);\n    }, [\n        inputValue,\n        inputCurrency\n    ]);\n    // Get CurrencyAmount for the outputCurrency amount specified by user\n    var outputAmount = (0,react.useMemo)(function() {\n        return (0,tryParseAmount/* default */.Z)(outputValue, outputCurrency !== null && outputCurrency !== void 0 ? outputCurrency : undefined);\n    }, [\n        outputValue,\n        outputCurrency\n    ]);\n    // Whether user modified the INPUT field most recently (also default initial state)\n    var isExactIn = independentField === types/* Field.INPUT */.g.INPUT;\n    // Whether to base calculations on output field\n    var isOutputBasis = basisField === types/* Field.OUTPUT */.g.OUTPUT;\n    // Whether user modified the PRICE field most recently\n    var isDesiredRateUpdate = independentField === types/* Field.PRICE */.g.PRICE;\n    // Get the amount of outputCurrency you'd receive at the desired price\n    var desiredOutputAsCurrencyAmount = isDesiredRateUpdate ? getDesiredOutput(inputValue, typedValue, inputCurrency, outputCurrency, rateType === types/* Rate.DIV */.j.DIV) : undefined;\n    var desiredInputAsCurrencyAmount = isDesiredRateUpdate ? getDesiredInput(outputValue, typedValue, inputCurrency, outputCurrency, rateType === types/* Rate.DIV */.j.DIV) : undefined;\n    // Convert output to string representation to parse later\n    var desiredOutputAsString = isDesiredRateUpdate && desiredOutputAsCurrencyAmount ? desiredOutputAsCurrencyAmount === null || desiredOutputAsCurrencyAmount === void 0 ? void 0 : desiredOutputAsCurrencyAmount.toSignificant(6) : typedValue;\n    var ref7;\n    // If independentField === Field.PRICE -> this won't be used\n    var parsedTypedAmount = !isDesiredRateUpdate ? (0,tryParseAmount/* default */.Z)(typedValue, (ref7 = isExactIn ? inputCurrency : outputCurrency) !== null && ref7 !== void 0 ? ref7 : undefined) : undefined;\n    // If not price - cast input or output typing to CurrencyAmount\n    // if price - whatever amount of tokens received on the desired price\n    var tradeAmount = isDesiredRateUpdate ? isOutputBasis ? outputAmount : (0,tryParseAmount/* default */.Z)(desiredOutputAsString, outputCurrency) : (0,tryParseAmount/* default */.Z)(typedValue, isExactIn ? inputCurrency : outputCurrency);\n    // Get trade object\n    // gonna be null if not isExactIn or if there is no outputCurrency selected\n    var bestTradeExactIn = (0,Trades/* useTradeExactIn */.AU)(isExactIn ? tradeAmount : undefined, outputCurrency);\n    // Works similarly to swap when you modify outputCurrency\n    // But also is used when desired rate is modified\n    // in other words it looks for a trade of inputCurrency for whatever the amount of tokens would be at desired rate\n    var bestTradeExactOut = (0,Trades/* useTradeExactOut */[\"in\"])(inputCurrency, !isExactIn || isOutputBasis ? tradeAmount : undefined);\n    var trade = isExactIn ? bestTradeExactIn : bestTradeExactOut;\n    // Get swap price for single token disregarding slippage and price impact\n    // needed for chart's latest value\n    var oneInputToken = (0,tryParseAmount/* default */.Z)(\"1\", currencies.input);\n    var singleTokenTrade = (0,Trades/* useTradeExactIn */.AU)(oneInputToken, currencies.output);\n    var singleTokenPrice = parseFloat(singleTokenTrade === null || singleTokenTrade === void 0 ? void 0 : (ref = singleTokenTrade.executionPrice) === null || ref === void 0 ? void 0 : ref.toSignificant(6));\n    var inverseSingleTokenPrice = 1 / singleTokenPrice;\n    // Get \"final\" amounts\n    var parsedAmounts = (0,react.useMemo)(function() {\n        // Use trade amount as default\n        var input = trade === null || trade === void 0 ? void 0 : trade.inputAmount;\n        if (!isOutputBasis) {\n            // If we're not in output basis mode then we're in input basis mode\n            // hence - no matter what keep input as specified by user\n            input = inputAmount;\n        } else if (independentField === types/* Field.INPUT */.g.INPUT) {\n            // If user touching input field -> whatever they type currently\n            input = parsedTypedAmount;\n        } else if (isDesiredRateUpdate) {\n            // If user modifies the price AND is wishing for specific output amount -> hypothetical input amount at better price\n            input = desiredInputAsCurrencyAmount;\n        }\n        // Use trade amount as default\n        // If we're in output basis mode - no matter what keep output as specified by user\n        var output;\n        if (isOutputBasis) {\n            output = outputAmount;\n        } else if (independentField === types/* Field.OUTPUT */.g.OUTPUT) {\n            // If user touching input field -> whatever they type currently\n            output = parsedTypedAmount;\n        } else if (isDesiredRateUpdate) {\n            // If user modifies the price AND is wishing for specific input amount -> hypothetical input amount at better price\n            output = desiredOutputAsCurrencyAmount;\n        } else {\n            output = trade === null || trade === void 0 ? void 0 : trade.outputAmount;\n        }\n        return {\n            input: input,\n            output: output\n        };\n    }, [\n        independentField,\n        parsedTypedAmount,\n        inputAmount,\n        outputAmount,\n        trade,\n        isDesiredRateUpdate,\n        isOutputBasis,\n        desiredInputAsCurrencyAmount,\n        desiredOutputAsCurrencyAmount, \n    ]);\n    // Calculate the price for specified swap\n    var price = (0,react.useMemo)(function() {\n        return utils_getPriceForOneToken(parsedAmounts.input, parsedAmounts.output);\n    }, [\n        parsedAmounts.input,\n        parsedAmounts.output\n    ]);\n    var ref8, ref9, ref10, ref11;\n    // Formatted amounts to use in the UI\n    var formattedAmounts = {\n        input: !isOutputBasis && inputValue && inputValue !== \"\" ? inputValue : (ref8 = (ref1 = parsedAmounts.input) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(6)) !== null && ref8 !== void 0 ? ref8 : \"\",\n        output: isOutputBasis && outputValue && outputValue !== \"\" ? outputValue : (ref9 = (ref2 = parsedAmounts.output) === null || ref2 === void 0 ? void 0 : ref2.toSignificant(6)) !== null && ref9 !== void 0 ? ref9 : \"\",\n        price: independentField === types/* Field.PRICE */.g.PRICE ? typedValue : rateType === types/* Rate.MUL */.j.MUL ? (ref10 = price === null || price === void 0 ? void 0 : price.toSignificant(6)) !== null && ref10 !== void 0 ? ref10 : \"\" : (ref11 = price === null || price === void 0 ? void 0 : price.invert().toSignificant(6)) !== null && ref11 !== void 0 ? ref11 : \"\"\n    };\n    // Get raw amounts that will be used in smart contract call\n    var rawAmounts = (0,react.useMemo)(function() {\n        var ref, ref1;\n        return {\n            input: inputCurrency ? (ref = parsedAmounts.input) === null || ref === void 0 ? void 0 : ref.multiply(jsbi_umd_default().exponentiate(exchange/* BIG_INT_TEN */.TY, jsbi_umd_default().BigInt(inputCurrency.decimals))).toFixed(0) : undefined,\n            output: outputCurrency ? (ref1 = parsedAmounts.output) === null || ref1 === void 0 ? void 0 : ref1.multiply(jsbi_umd_default().exponentiate(exchange/* BIG_INT_TEN */.TY, jsbi_umd_default().BigInt(outputCurrency.decimals))).toFixed(0) : undefined\n        };\n    }, [\n        inputCurrency,\n        outputCurrency,\n        parsedAmounts\n    ]);\n    var _obj;\n    return {\n        currencies: currencies,\n        currencyBalances: currencyBalances,\n        inputError: getErrorMessage(account, wrappedCurrencies, currencies, currencyBalances, parsedAmounts, trade, price, rateType),\n        formattedAmounts: formattedAmounts,\n        trade: trade !== null && trade !== void 0 ? trade : undefined,\n        parsedAmounts: parsedAmounts,\n        price: price,\n        rawAmounts: rawAmounts,\n        wrappedCurrencies: wrappedCurrencies,\n        singleTokenPrice: (_obj = {}, (0,_define_property/* default */.Z)(_obj, (ref3 = wrappedCurrencies.input) === null || ref3 === void 0 ? void 0 : ref3.address, singleTokenPrice), (0,_define_property/* default */.Z)(_obj, (ref4 = wrappedCurrencies.output) === null || ref4 === void 0 ? void 0 : ref4.address, inverseSingleTokenPrice), _obj),\n        currencyIds: {\n            input: inputCurrencyId,\n            output: outputCurrencyId\n        }\n    };\n};\nfunction parseTokenAmountURLParameter(urlParam) {\n    return typeof urlParam === \"string\" && !Number.isNaN(parseFloat(urlParam)) ? urlParam : \"\";\n}\nfunction parseIndependentFieldURLParameter(urlParam) {\n    return typeof urlParam === \"string\" && urlParam.toLowerCase() === \"output\" ? types/* Field.OUTPUT */.g.OUTPUT : types/* Field.INPUT */.g.INPUT;\n}\nfunction parseCurrencyFromURLParameter(urlParam) {\n    if (typeof urlParam === \"string\") {\n        var valid = (0,utils/* isAddress */.UJ)(urlParam);\n        if (valid) return valid;\n        if (urlParam.toUpperCase() === \"BNB\") return \"BNB\";\n        if (valid === false) return \"BNB\";\n    }\n    return \"\";\n}\n// TODO: combine with swap's version but use generic type. Same for helpers above\n// Note: swap has recipient and other things. Merging these 2 would probably be much easier if we get rid of recipient\n// Also the whole thing doesn't make sense, in swap inputValue is not initialized but typedValue is. WTF\nvar queryParametersToSwapState = function(parsedQs) {\n    var inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency) || exchange/* DEFAULT_INPUT_CURRENCY */.VN;\n    var outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency) || exchange/* DEFAULT_OUTPUT_CURRENCY */.g$;\n    if (inputCurrency === outputCurrency) {\n        if (typeof parsedQs.outputCurrency === \"string\") {\n            inputCurrency = \"\";\n        } else {\n            outputCurrency = \"\";\n        }\n    }\n    var _obj;\n    return _obj = {}, (0,_define_property/* default */.Z)(_obj, types/* Field.INPUT */.g.INPUT, {\n        currencyId: inputCurrency\n    }), (0,_define_property/* default */.Z)(_obj, types/* Field.OUTPUT */.g.OUTPUT, {\n        currencyId: outputCurrency\n    }), (0,_define_property/* default */.Z)(_obj, \"inputValue\", \"\"), (0,_define_property/* default */.Z)(_obj, \"outputValue\", \"\"), (0,_define_property/* default */.Z)(_obj, \"typedValue\", parseTokenAmountURLParameter(parsedQs.exactAmount)), (0,_define_property/* default */.Z)(_obj, \"independentField\", parseIndependentFieldURLParameter(parsedQs.exactField)), (0,_define_property/* default */.Z)(_obj, \"basisField\", parseIndependentFieldURLParameter(parsedQs.exactField)), (0,_define_property/* default */.Z)(_obj, \"rateType\", types/* Rate.MUL */.j.MUL), _obj;\n};\n// updates the swap state to use the defaults for a given network\nvar useDefaultsFromURLSearch = function() {\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var dispatch = (0,state/* useAppDispatch */.TL)();\n    var query = (0,next_router.useRouter)().query;\n    var ref = (0,react.useState)(), result = ref[0], setResult = ref[1];\n    (0,react.useEffect)(function() {\n        if (!chainId) return;\n        var parsed = queryParametersToSwapState(query);\n        dispatch((0,actions/* replaceLimitOrdersState */.sQ)(parsed));\n        setResult({\n            inputCurrencyId: parsed[types/* Field.INPUT */.g.INPUT].currencyId,\n            outputCurrencyId: parsed[types/* Field.OUTPUT */.g.OUTPUT].currencyId\n        });\n    }, [\n        dispatch,\n        chainId,\n        query\n    ]);\n    return result;\n};\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(26042);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(69396);\n// EXTERNAL MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(2593);\n// EXTERNAL MODULE: ./src/state/transactions/hooks.tsx\nvar transactions_hooks = __webpack_require__(55892);\n// EXTERNAL MODULE: ./node_modules/swr/dist/index.mjs\nvar dist = __webpack_require__(8100);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_to_consumable_array.mjs + 2 modules\nvar _to_consumable_array = __webpack_require__(29815);\n// EXTERNAL MODULE: ./src/config/constants/index.ts\nvar constants = __webpack_require__(3862);\n// EXTERNAL MODULE: ./src/utils/localStorageOrders.ts\nvar localStorageOrders = __webpack_require__(15655);\n// EXTERNAL MODULE: ./src/hooks/limitOrders/useGelatoLimitOrdersLib.ts\nvar useGelatoLimitOrdersLib = __webpack_require__(19508);\n// EXTERNAL MODULE: ./node_modules/lodash/orderBy.js\nvar orderBy = __webpack_require__(75472);\nvar orderBy_default = /*#__PURE__*/__webpack_require__.n(orderBy);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/types.ts\nvar ORDER_CATEGORY;\n(function(ORDER_CATEGORY) {\n    ORDER_CATEGORY[ORDER_CATEGORY[\"Open\"] = 0] = \"Open\";\n    ORDER_CATEGORY[ORDER_CATEGORY[\"History\"] = 1] = \"History\";\n})(ORDER_CATEGORY || (ORDER_CATEGORY = {}));\nvar LimitOrderStatus;\n(function(LimitOrderStatus) {\n    LimitOrderStatus[\"OPEN\"] = \"open\";\n    LimitOrderStatus[\"CANCELLED\"] = \"cancelled\";\n    LimitOrderStatus[\"EXECUTED\"] = \"executed\";\n})(LimitOrderStatus || (LimitOrderStatus = {}));\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/hooks/useGelatoLimitOrdersHistory.ts\n\n\n\n\n\n\n\n\n\n\n\n\nvar OPEN_ORDERS_SWR_KEY = [\n    \"gelato\",\n    \"openOrders\"\n];\nvar EXECUTED_CANCELLED_ORDERS_SWR_KEY = [\n    \"gelato\",\n    \"cancelledExecutedOrders\"\n];\nfunction newOrdersFirst(a, b) {\n    return Number(b.updatedAt) - Number(a.updatedAt);\n}\nvar isOrderUpdated = function(oldOrder, newOrder) {\n    return newOrder ? Number(oldOrder.updatedAt) < Number(newOrder.updatedAt) : false;\n};\nfunction syncOrderToLocalStorage(_) {\n    return _syncOrderToLocalStorage.apply(this, arguments);\n}\nfunction _syncOrderToLocalStorage() {\n    _syncOrderToLocalStorage = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(param) {\n        var gelatoLimitOrders, chainId, account, orders, syncStatuses, allOrdersLS, lsOrdersHashSet, newOrders, typeOrdersLS, i, confOrder, ref, graphOrder;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    gelatoLimitOrders = param.gelatoLimitOrders, chainId = param.chainId, account = param.account, orders = param.orders, syncStatuses = param.syncStatuses;\n                    allOrdersLS = (0,localStorageOrders/* getLSOrders */.QR)(chainId, account);\n                    lsOrdersHashSet = (0,localStorageOrders/* hashOrderSet */.AG)(allOrdersLS);\n                    newOrders = orders.filter(function(order) {\n                        return !lsOrdersHashSet.has((0,localStorageOrders/* hashOrder */.r6)(order));\n                    });\n                    (0,localStorageOrders/* saveOrders */.ZJ)(chainId, account, newOrders);\n                    typeOrdersLS = syncStatuses ? allOrdersLS.filter(function(order) {\n                        return syncStatuses.some(function(type) {\n                            return type === order.status;\n                        });\n                    }) : [];\n                    i = 0;\n                case 7:\n                    if (!(i < typeOrdersLS.length)) {\n                        _ctx.next = 33;\n                        break;\n                    }\n                    confOrder = typeOrdersLS[i];\n                    _ctx.prev = 9;\n                    ;\n                    if (!((ref = orders.find(function(order) {\n                        return confOrder.id.toLowerCase() === order.id.toLowerCase();\n                    })) !== null && ref !== void 0)) {\n                        _ctx.next = 15;\n                        break;\n                    }\n                    _ctx.t0 = ref;\n                    _ctx.next = 23;\n                    break;\n                case 15:\n                    if (!gelatoLimitOrders) {\n                        _ctx.next = 21;\n                        break;\n                    }\n                    _ctx.next = 18;\n                    return gelatoLimitOrders.getOrder(confOrder.id);\n                case 18:\n                    _ctx.t1 = _ctx.sent;\n                    _ctx.next = 22;\n                    break;\n                case 21:\n                    _ctx.t1 = null;\n                case 22:\n                    _ctx.t0 = // eslint-disable-next-line no-await-in-loop\n                    (_ctx.t1);\n                case 23:\n                    graphOrder = _ctx.t0;\n                    if (isOrderUpdated(confOrder, graphOrder)) {\n                        (0,localStorageOrders/* saveOrder */.TR)(chainId, account, graphOrder);\n                    }\n                    _ctx.next = 30;\n                    break;\n                case 27:\n                    _ctx.prev = 27;\n                    _ctx.t2 = _ctx[\"catch\"](9);\n                    console.error(\"Error fetching order from subgraph\", _ctx.t2);\n                case 30:\n                    i++;\n                    _ctx.next = 7;\n                    break;\n                case 33:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                9,\n                27\n            ]\n        ]);\n    }));\n    return _syncOrderToLocalStorage.apply(this, arguments);\n}\nvar useOpenOrders = function(turnOn) {\n    var ref = (0,useActiveWeb3React/* default */.Z)(), account = ref.account, chainId = ref.chainId;\n    var gelatoLimitOrders = (0,useGelatoLimitOrdersLib/* default */.Z)();\n    var startFetch = turnOn && gelatoLimitOrders && account && chainId;\n    var data = (0,dist/* default */.ZP)(startFetch ? OPEN_ORDERS_SWR_KEY : null, (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee() {\n        var orders, openOrdersLS, pendingOrdersLS;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return gelatoLimitOrders.getOpenOrders(account.toLowerCase(), false);\n                case 3:\n                    orders = _ctx.sent;\n                    _ctx.next = 6;\n                    return syncOrderToLocalStorage({\n                        orders: orders,\n                        chainId: chainId,\n                        account: account,\n                        syncStatuses: [\n                            LimitOrderStatus.OPEN\n                        ],\n                        gelatoLimitOrders: gelatoLimitOrders\n                    });\n                case 6:\n                    _ctx.next = 11;\n                    break;\n                case 8:\n                    _ctx.prev = 8;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    console.error(\"Error fetching open orders from subgraph\", _ctx.t0);\n                case 11:\n                    openOrdersLS = (0,localStorageOrders/* getLSOrders */.QR)(chainId, account).filter(function(order) {\n                        return order.status === LimitOrderStatus.OPEN;\n                    });\n                    pendingOrdersLS = (0,localStorageOrders/* getLSOrders */.QR)(chainId, account, true);\n                    return _ctx.abrupt(\"return\", (0,_to_consumable_array/* default */.Z)(openOrdersLS.filter(function(order) {\n                        var orderCancelled = pendingOrdersLS.filter(function(pendingOrder) {\n                            return pendingOrder.status === LimitOrderStatus.CANCELLED;\n                        }).find(function(pendingOrder) {\n                            return pendingOrder.id.toLowerCase() === order.id.toLowerCase();\n                        });\n                        return !orderCancelled;\n                    })).concat((0,_to_consumable_array/* default */.Z)(pendingOrdersLS.filter(function(order) {\n                        return order.status === LimitOrderStatus.OPEN;\n                    }))).sort(newOrdersFirst));\n                case 14:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                8\n            ]\n        ]);\n    })), {\n        refreshInterval: constants/* SLOW_INTERVAL */.KI\n    }).data;\n    return startFetch ? data : [];\n};\nvar useHistoryOrders = function(turnOn) {\n    var ref = (0,useActiveWeb3React/* default */.Z)(), account = ref.account, chainId = ref.chainId;\n    var gelatoLimitOrders = (0,useGelatoLimitOrdersLib/* default */.Z)();\n    var startFetch = turnOn && gelatoLimitOrders && account && chainId;\n    var data = (0,dist/* default */.ZP)(startFetch ? EXECUTED_CANCELLED_ORDERS_SWR_KEY : null, (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee() {\n        var acc, ref, canOrders, exeOrders, executedOrdersLS, cancelledOrdersLS, pendingCancelledOrdersLS;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    acc = account.toLowerCase();\n                    _ctx.t0 = _sliced_to_array/* default */.Z;\n                    _ctx.next = 5;\n                    return Promise.all([\n                        gelatoLimitOrders.getCancelledOrders(acc, false),\n                        gelatoLimitOrders.getExecutedOrders(acc, false), \n                    ]);\n                case 5:\n                    _ctx.t1 = _ctx.sent;\n                    ref = (0, _ctx.t0)(_ctx.t1, 2);\n                    canOrders = ref[0];\n                    exeOrders = ref[1];\n                    _ctx.next = 11;\n                    return syncOrderToLocalStorage({\n                        orders: (0,_to_consumable_array/* default */.Z)(canOrders).concat((0,_to_consumable_array/* default */.Z)(exeOrders)),\n                        chainId: chainId,\n                        account: account\n                    });\n                case 11:\n                    _ctx.next = 16;\n                    break;\n                case 13:\n                    _ctx.prev = 13;\n                    _ctx.t2 = _ctx[\"catch\"](0);\n                    console.error(\"Error fetching history orders from subgraph\", _ctx.t2);\n                case 16:\n                    executedOrdersLS = (0,localStorageOrders/* getLSOrders */.QR)(chainId, account).filter(function(order) {\n                        return order.status === LimitOrderStatus.EXECUTED;\n                    });\n                    cancelledOrdersLS = (0,localStorageOrders/* getLSOrders */.QR)(chainId, account).filter(function(order) {\n                        return order.status === LimitOrderStatus.CANCELLED;\n                    });\n                    pendingCancelledOrdersLS = (0,localStorageOrders/* getLSOrders */.QR)(chainId, account, true).filter(function(order) {\n                        return order.status === LimitOrderStatus.CANCELLED;\n                    });\n                    return _ctx.abrupt(\"return\", (0,_to_consumable_array/* default */.Z)(pendingCancelledOrdersLS).concat((0,_to_consumable_array/* default */.Z)(cancelledOrdersLS), (0,_to_consumable_array/* default */.Z)(executedOrdersLS)).sort(newOrdersFirst));\n                case 20:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                13\n            ]\n        ]);\n    })), {\n        refreshInterval: constants/* SLOW_INTERVAL */.KI\n    }).data;\n    return startFetch ? data : [];\n};\nfunction useGelatoLimitOrdersHistory(orderCategory) {\n    var historyOrders = useHistoryOrders(orderCategory === ORDER_CATEGORY.History);\n    var openOrders = useOpenOrders(orderCategory === ORDER_CATEGORY.Open);\n    var orders = (0,react.useMemo)(function() {\n        return orderCategory === ORDER_CATEGORY.Open ? openOrders : historyOrders;\n    }, [\n        orderCategory,\n        openOrders,\n        historyOrders\n    ]);\n    return (0,react.useMemo)(function() {\n        return Array.isArray(orders) ? orderBy_default()(orders, function(order) {\n            return parseInt(order.createdAt);\n        }, \"desc\") : orders;\n    }, [\n        orders\n    ]);\n};\n\n;// CONCATENATED MODULE: ./src/hooks/limitOrders/useGelatoLimitOrdersHandlers.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar useGelatoLimitOrdersHandlers = function() {\n    var ref = (0,useActiveWeb3React/* default */.Z)(), chainId = ref.chainId, account = ref.account;\n    var mutate = (0,dist/* useSWRConfig */.kY)().mutate;\n    var gelatoLimitOrders = (0,useGelatoLimitOrdersLib/* default */.Z)();\n    var addTransaction = (0,transactions_hooks/* useTransactionAdder */.h7)();\n    var ref1 = useOrderActionHandlers(), onSwitchTokens = ref1.onSwitchTokens, onCurrencySelection = ref1.onCurrencySelection, onUserInput = ref1.onUserInput, onChangeRateType = ref1.onChangeRateType;\n    var handleLimitOrderSubmission = (0,react.useCallback)(function() {\n        var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(orderToSubmit, overrides) {\n            var ref, witness, payload, order, tx, now;\n            return runtime_default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (gelatoLimitOrders) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        throw new Error(\"Could not reach Gelato Limit Orders library\");\n                    case 2:\n                        if (chainId) {\n                            _ctx.next = 4;\n                            break;\n                        }\n                        throw new Error(\"No chainId\");\n                    case 4:\n                        if (gelatoLimitOrders === null || gelatoLimitOrders === void 0 ? void 0 : gelatoLimitOrders.signer) {\n                            _ctx.next = 6;\n                            break;\n                        }\n                        throw new Error(\"No signer\");\n                    case 6:\n                        _ctx.next = 8;\n                        return gelatoLimitOrders.encodeLimitOrderSubmissionWithSecret(orderToSubmit.inputToken, orderToSubmit.outputToken, orderToSubmit.inputAmount, orderToSubmit.outputAmount, orderToSubmit.owner);\n                    case 8:\n                        ref = _ctx.sent;\n                        witness = ref.witness;\n                        payload = ref.payload;\n                        order = ref.order;\n                        _ctx.next = 14;\n                        return gelatoLimitOrders.signer.sendTransaction((0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, overrides !== null && overrides !== void 0 ? overrides : {}), {\n                            to: payload.to,\n                            data: payload.data,\n                            value: bignumber/* BigNumber.from */.O$.from(payload.value)\n                        }));\n                    case 14:\n                        tx = _ctx.sent;\n                        now = Math.round(Date.now() / 1000);\n                        addTransaction(tx, {\n                            summary: \"Order submission\",\n                            type: \"limit-order-submission\",\n                            order: (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, order), {\n                                createdTxHash: tx === null || tx === void 0 ? void 0 : tx.hash.toLowerCase(),\n                                witness: witness,\n                                status: \"open\",\n                                updatedAt: now.toString()\n                            })\n                        });\n                        mutate(OPEN_ORDERS_SWR_KEY);\n                        mutate(EXECUTED_CANCELLED_ORDERS_SWR_KEY);\n                        return _ctx.abrupt(\"return\", tx);\n                    case 20:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function(orderToSubmit, overrides) {\n            return _ref.apply(this, arguments);\n        };\n    }(), [\n        addTransaction,\n        chainId,\n        gelatoLimitOrders,\n        mutate\n    ]);\n    var handleLimitOrderCancellation = (0,react.useCallback)(function() {\n        var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(orderToCancel, orderDetails, overrides) {\n            var checkIfOrderExists, tx, now, summary;\n            return runtime_default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (gelatoLimitOrders) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        throw new Error(\"Could not reach Gelato Limit Orders library\");\n                    case 2:\n                        if (chainId) {\n                            _ctx.next = 4;\n                            break;\n                        }\n                        throw new Error(\"No chainId\");\n                    case 4:\n                        if (account) {\n                            _ctx.next = 6;\n                            break;\n                        }\n                        throw new Error(\"No account\");\n                    case 6:\n                        checkIfOrderExists = Boolean(orderToCancel.module && orderToCancel.inputToken && orderToCancel.owner && orderToCancel.witness && orderToCancel.data);\n                        _ctx.next = 9;\n                        return gelatoLimitOrders.cancelLimitOrder(orderToCancel, checkIfOrderExists, overrides !== null && overrides !== void 0 ? overrides : {\n                            gasLimit: 2000000\n                        });\n                    case 9:\n                        tx = _ctx.sent;\n                        now = Math.round(Date.now() / 1000);\n                        summary = orderDetails ? \"Order cancellation: \".concat(orderDetails.inputAmount, \" \").concat(orderDetails.inputTokenSymbol, \" for \").concat(orderDetails.outputAmount, \" \").concat(orderDetails.outputTokenSymbol) : \"Order cancellation\";\n                        addTransaction(tx, {\n                            summary: summary,\n                            type: \"limit-order-cancellation\",\n                            order: (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, orderToCancel), {\n                                updatedAt: now.toString(),\n                                status: \"cancelled\",\n                                cancelledTxHash: tx === null || tx === void 0 ? void 0 : tx.hash.toLowerCase()\n                            })\n                        });\n                        mutate(OPEN_ORDERS_SWR_KEY);\n                        mutate(EXECUTED_CANCELLED_ORDERS_SWR_KEY);\n                        return _ctx.abrupt(\"return\", tx);\n                    case 16:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function(orderToCancel, orderDetails, overrides) {\n            return _ref.apply(this, arguments);\n        };\n    }(), [\n        gelatoLimitOrders,\n        chainId,\n        account,\n        addTransaction,\n        mutate\n    ]);\n    var handleInput = (0,react.useCallback)(function(field, value) {\n        onUserInput(field, value);\n    }, [\n        onUserInput\n    ]);\n    var handleCurrencySelection = (0,react.useCallback)(function(field, currency) {\n        onCurrencySelection(field, currency);\n    }, [\n        onCurrencySelection\n    ]);\n    var handleSwitchTokens = (0,react.useCallback)(function() {\n        onSwitchTokens();\n    }, [\n        onSwitchTokens\n    ]);\n    var handleRateType = (0,react.useCallback)(function() {\n        var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(rateType, price) {\n            return runtime_default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (rateType === types/* Rate.MUL */.j.MUL) {\n                            if (price) onUserInput(types/* Field.PRICE */.g.PRICE, price.invert().toSignificant(6));\n                            onChangeRateType(types/* Rate.DIV */.j.DIV);\n                        } else {\n                            if (price) onUserInput(types/* Field.PRICE */.g.PRICE, price.toSignificant(6));\n                            onChangeRateType(types/* Rate.MUL */.j.MUL);\n                        }\n                    case 1:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function(rateType, price) {\n            return _ref.apply(this, arguments);\n        };\n    }(), [\n        onChangeRateType,\n        onUserInput\n    ]);\n    return {\n        handleLimitOrderSubmission: handleLimitOrderSubmission,\n        handleLimitOrderCancellation: handleLimitOrderCancellation,\n        handleInput: handleInput,\n        handleCurrencySelection: handleCurrencySelection,\n        handleSwitchTokens: handleSwitchTokens,\n        handleRateType: handleRateType\n    };\n};\n/* harmony default export */ var limitOrders_useGelatoLimitOrdersHandlers = (useGelatoLimitOrdersHandlers);\n\n;// CONCATENATED MODULE: ./src/hooks/limitOrders/useGelatoLimitOrders.ts\n\n\nvar useGelatoLimitOrders = function() {\n    var derivedOrderInfo = useDerivedOrderInfo();\n    var orderState = useOrderState();\n    var handlers = limitOrders_useGelatoLimitOrdersHandlers();\n    return {\n        handlers: handlers,\n        derivedOrderInfo: derivedOrderInfo,\n        orderState: orderState\n    };\n};\n/* harmony default export */ var limitOrders_useGelatoLimitOrders = (useGelatoLimitOrders);\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/units/lib.esm/index.js + 1 modules\nvar lib_esm = __webpack_require__(61744);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar user_hooks = __webpack_require__(68605);\n;// CONCATENATED MODULE: ./src/hooks/limitOrders/useGasOverhead.ts\n\n\n\n\n\n\n\n\n\n\n\n\nfunction useGasOverhead(inputAmount, outputAmount, rateType) {\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var gasPrice = (0,user_hooks/* useGasPrice */.Fh)();\n    var requiredGas = (0,lib_esm/* formatUnits */.bM)(gasPrice ? bignumber/* BigNumber.from */.O$.from(gasPrice).mul(exchange/* GENERIC_GAS_LIMIT_ORDER_EXECUTION */.q3) : \"0\");\n    var requiredGasAsCurrencyAmount = (0,tryParseAmount/* default */.Z)(requiredGas, src/* ETHER */.c0);\n    var inputIsBNB = (inputAmount === null || inputAmount === void 0 ? void 0 : inputAmount.currency.symbol) === \"BNB\";\n    var gasCostInInputTokens = (0,Trades/* useTradeExactIn */.AU)(requiredGasAsCurrencyAmount, inputIsBNB ? null : inputAmount === null || inputAmount === void 0 ? void 0 : inputAmount.currency);\n    var bufferedOutputAmount = (0,react.useMemo)(function() {\n        if (inputIsBNB) return requiredGasAsCurrencyAmount;\n        if (!gasCostInInputTokens || !(gasCostInInputTokens === null || gasCostInInputTokens === void 0 ? void 0 : gasCostInInputTokens.outputAmount)) return undefined;\n        // Add 2000 BPS on top (20%) to account for gas price fluctuations\n        var margin = gasCostInInputTokens.outputAmount.asFraction.multiply(2000).divide(10000);\n        var adjustedGas = gasCostInInputTokens.outputAmount.asFraction.add(margin);\n        var adjustedGasInWei = adjustedGas.multiply(src/* JSBI.exponentiate */.QA.exponentiate(exchange/* BIG_INT_TEN */.TY, src/* JSBI.BigInt */.QA.BigInt(gasCostInInputTokens.outputAmount.currency.decimals)));\n        if ((0,_instanceof/* default */.Z)(gasCostInInputTokens.outputAmount.currency, src/* Token */.WU)) {\n            return new src/* TokenAmount */.dt(gasCostInInputTokens.outputAmount.currency, adjustedGasInWei.toFixed(0));\n        }\n        return undefined;\n    }, [\n        gasCostInInputTokens,\n        requiredGasAsCurrencyAmount,\n        inputIsBNB\n    ]);\n    var realInputAmount = (0,react.useMemo)(function() {\n        return bufferedOutputAmount && inputAmount && inputAmount.greaterThan(bufferedOutputAmount) && inputAmount.subtract(bufferedOutputAmount);\n    }, [\n        bufferedOutputAmount,\n        inputAmount\n    ]);\n    var realExecutionPrice = (0,react.useMemo)(function() {\n        if (!inputAmount || !gasCostInInputTokens && !inputIsBNB || !realInputAmount || !outputAmount) return null;\n        if (inputIsBNB && requiredGasAsCurrencyAmount.greaterThan(inputAmount.asFraction)) return undefined;\n        if (gasCostInInputTokens && gasCostInInputTokens.outputAmount.greaterThan(inputAmount.asFraction)) return undefined;\n        return utils_getPriceForOneToken(realInputAmount, outputAmount);\n    }, [\n        realInputAmount,\n        outputAmount,\n        inputAmount,\n        gasCostInInputTokens,\n        inputIsBNB,\n        requiredGasAsCurrencyAmount\n    ]);\n    var realExecutionPriceAsString = (0,react.useMemo)(function() {\n        if (!realExecutionPrice) return \"never executes\";\n        return rateType === types/* Rate.DIV */.j.DIV ? realExecutionPrice.invert().toSignificant(6) : realExecutionPrice.toSignificant(6);\n    }, [\n        rateType,\n        realExecutionPrice\n    ]);\n    return chainId ? {\n        realExecutionPrice: realExecutionPrice,\n        gasPrice: gasPrice,\n        realExecutionPriceAsString: realExecutionPriceAsString\n    } : {\n        realExecutionPrice: undefined,\n        realExecutionPriceAsString: undefined,\n        gasPrice: undefined\n    };\n};\n\n// EXTERNAL MODULE: ./src/hooks/useTheme.ts\nvar useTheme = __webpack_require__(23917);\n// EXTERNAL MODULE: ./src/hooks/useApproveCallback.ts + 1 modules\nvar useApproveCallback = __webpack_require__(50165);\n// EXTERNAL MODULE: ./src/utils/maxAmountSpend.ts\nvar maxAmountSpend = __webpack_require__(45131);\n// EXTERNAL MODULE: ./src/views/Swap/components/Chart/PriceChartContainer.tsx + 5 modules\nvar PriceChartContainer = __webpack_require__(90698);\n// EXTERNAL MODULE: ./node_modules/@web3-react/core/dist/core.esm.js\nvar core_esm = __webpack_require__(77044);\n// EXTERNAL MODULE: ./src/components/DisclaimerModal/index.tsx\nvar DisclaimerModal = __webpack_require__(9989);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/ClaimWarning.tsx\n\n\n\n\n\n\n\nfunction ClaimWarning() {\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserLimitOrderAcceptedWarning */.$c)(), 2), hasAcceptedRisk = ref[0], setHasAcceptedRisk = ref[1];\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(DisclaimerModal/* default */.Z, {\n        id: \"disclaimer-limit-order\",\n        header: t(\"I acknowledge that:\"),\n        checks: [\n            {\n                key: \"price-checkbox\",\n                content: t(\"I understand that small orders are executed at higher execution price due to gas fees.\")\n            },\n            {\n                key: \"taxtoken-checkbox\",\n                content: t(\"I understand that using taxed tokens on limit orders is highly discouraged and not recommended - Taxed tokens can be stuck in limit orders and lost forever because of impossibility to execute an order for such tokens\")\n            }, \n        ],\n        onSuccess: function() {\n            return setHasAcceptedRisk(true);\n        }\n    }), false, false), 2), onPresentRiskDisclaimer = ref1[0], onDismiss = ref1[1];\n    (0,react.useEffect)(function() {\n        if (!hasAcceptedRisk) {\n            onPresentRiskDisclaimer();\n        }\n        return function() {\n            onDismiss();\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        hasAcceptedRisk\n    ]);\n    return null;\n}\n/* harmony default export */ var components_ClaimWarning = (/*#__PURE__*/(0,react.memo)(ClaimWarning));\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(7297);\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(87379);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/styles.tsx\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  position: relative;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  padding: 1rem;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex-shrink: 0;\\n  height: fit-content;\\n  padding: 0 24px;\\n\\n  \",\n        \" {\\n    padding: 0 40px;\\n  }\\n\\n  \",\n        \" {\\n    \",\n        \";\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 328px;\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\nvar Wrapper = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-8e2c23ef-0\"\n})(_templateObject());\nvar StyledSwapContainer = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-8e2c23ef-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.lg;\n}, function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.xxl;\n}, function(param) {\n    var $isChartExpanded = param.$isChartExpanded;\n    return $isChartExpanded ? \"padding: 0 120px\" : \"padding: 0 40px\";\n});\nvar StyledInputCurrencyWrapper = (0,styled_components_browser_esm/* default */.ZP)(Box/* default */.Z).withConfig({\n    componentId: \"sc-8e2c23ef-2\"\n})(_templateObject2());\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Button/IconButton.tsx\nvar IconButton = __webpack_require__(5527);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ChartDisable.tsx\nvar ChartDisable = __webpack_require__(16883);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Chart.tsx\nvar Chart = __webpack_require__(85462);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Heading/Heading.tsx + 1 modules\nvar Heading = __webpack_require__(59750);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/History.tsx\nvar History = __webpack_require__(85714);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(97114);\n// EXTERNAL MODULE: ./src/components/App/Transactions/TransactionsModal.tsx + 1 modules\nvar TransactionsModal = __webpack_require__(86921);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/CurrencyInputHeader.tsx\n\n\nfunction CurrencyInputHeader_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 24px;\\n  width: 100%;\\n  border-bottom: 1px solid \",\n        \";\\n\"\n    ]);\n    CurrencyInputHeader_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction CurrencyInputHeader_templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  color: \",\n        \";\\n\"\n    ]);\n    CurrencyInputHeader_templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar CurrencyInputContainer = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-fe365c31-0\"\n})(CurrencyInputHeader_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n});\nvar ColoredIconButton = (0,styled_components_browser_esm/* default */.ZP)(IconButton/* default */.Z).withConfig({\n    componentId: \"sc-fe365c31-1\"\n})(CurrencyInputHeader_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.colors.textSubtle;\n});\nvar CurrencyInputHeader = function(param) {\n    var title = param.title, subtitle = param.subtitle, setIsChartDisplayed = param.setIsChartDisplayed, isChartDisplayed = param.isChartDisplayed;\n    var toggleChartDisplayed = function() {\n        setIsChartDisplayed(function(currentIsChartDisplayed) {\n            return !currentIsChartDisplayed;\n        });\n    };\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionsModal/* default */.Z, {})), 1), onPresentTransactionsModal = ref[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(CurrencyInputContainer, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                width: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        flex: \"1\",\n                        children: setIsChartDisplayed && /*#__PURE__*/ (0,jsx_runtime.jsx)(ColoredIconButton, {\n                            onClick: toggleChartDisplayed,\n                            variant: \"text\",\n                            scale: \"sm\",\n                            children: isChartDisplayed ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ChartDisable/* default */.Z, {\n                                color: \"textSubtle\"\n                            }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Chart/* default */.Z, {\n                                width: \"24px\",\n                                color: \"textSubtle\"\n                            })\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        flex: \"1\",\n                        justifyContent: \"center\",\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                            as: \"h2\",\n                            children: title\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        flex: \"1\",\n                        justifyContent: \"flex-end\",\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                            onClick: onPresentTransactionsModal,\n                            variant: \"text\",\n                            scale: \"sm\",\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(History/* default */.Z, {\n                                color: \"textSubtle\",\n                                width: \"24px\"\n                            })\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    color: \"textSubtle\",\n                    fontSize: \"14px\",\n                    children: subtitle\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var components_CurrencyInputHeader = (CurrencyInputHeader);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Input/Input.tsx\nvar Input = __webpack_require__(5324);\n// EXTERNAL MODULE: ./packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(36544);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/AutoRenew.tsx\nvar AutoRenew = __webpack_require__(19729);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/SyncAlt.tsx\nvar SyncAlt = __webpack_require__(29973);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Help.tsx\nvar Help = __webpack_require__(62276);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/utils/getRatePercentageMessage.ts\nvar PercentageDirection;\n(function(PercentageDirection) {\n    PercentageDirection[\"ABOVE\"] = \"above\";\n    PercentageDirection[\"BELOW\"] = \"below\";\n    PercentageDirection[\"MARKET\"] = \"market\";\n})(PercentageDirection || (PercentageDirection = {}));\nvar getRatePercentageMessage = function(percentageRateDifference, t) {\n    if (percentageRateDifference) {\n        if (percentageRateDifference.equalTo(0)) {\n            return [\n                t(\"at market price\"),\n                PercentageDirection.MARKET\n            ];\n        }\n        var percentageAsString = percentageRateDifference.toSignificant(6);\n        var formattedPercentage = parseFloat(percentageAsString).toLocaleString(undefined, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2\n        });\n        if (percentageRateDifference.lessThan(\"0\")) {\n            return [\n                t(\"%percentage%% below market\", {\n                    percentage: formattedPercentage\n                }),\n                PercentageDirection.BELOW\n            ];\n        }\n        return [\n            t(\"%percentage%% above market\", {\n                percentage: formattedPercentage\n            }),\n            PercentageDirection.ABOVE\n        ];\n    }\n    return [\n        null,\n        null\n    ];\n};\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderPrice.tsx\n\n\n\nfunction LimitOrderPrice_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  text-align: right;\\n\"\n    ]);\n    LimitOrderPrice_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction LimitOrderPrice_templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  cursor: pointer;\\n\"\n    ]);\n    LimitOrderPrice_templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\nvar inputRegex = RegExp(\"^\\\\d*(?:\\\\\\\\[.])?\\\\d*$\") // match escaped \".\" characters via in a non-capturing group\n;\nvar OrderPriceInput = (0,styled_components_browser_esm/* default */.ZP)(Input/* default */.Z).withConfig({\n    componentId: \"sc-97b507bd-0\"\n})(LimitOrderPrice_templateObject());\nvar LabelContainer = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-97b507bd-1\"\n})(LimitOrderPrice_templateObject1());\nvar _obj;\nvar DIRECTION_COLORS = (_obj = {}, (0,_define_property/* default */.Z)(_obj, PercentageDirection.ABOVE, \"success\"), (0,_define_property/* default */.Z)(_obj, PercentageDirection.BELOW, \"failure\"), (0,_define_property/* default */.Z)(_obj, PercentageDirection.MARKET, \"textSubtle\"), _obj);\nvar LimitOrderPrice = function(param) {\n    var id = param.id, value = param.value, onUserInput = param.onUserInput, inputCurrency = param.inputCurrency, outputCurrency = param.outputCurrency, percentageRateDifference = param.percentageRateDifference, rateType = param.rateType, handleRateType = param.handleRateType, price = param.price, handleResetToMarketPrice = param.handleResetToMarketPrice, realExecutionPriceAsString = param.realExecutionPriceAsString, disabled = param.disabled;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var hasCurrencyInfo = inputCurrency && outputCurrency;\n    var label = rateType === types/* Rate.MUL */.j.MUL ? \"\".concat(outputCurrency === null || outputCurrency === void 0 ? void 0 : outputCurrency.symbol, \" per \").concat(inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol) : \"\".concat(inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol, \" per \").concat(outputCurrency === null || outputCurrency === void 0 ? void 0 : outputCurrency.symbol);\n    var toggleRateType = function() {\n        handleRateType(rateType, price);\n    };\n    var ref = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                children: t(\"Takes into account the gas necessary to execute your order and guarantees that your desired rate is fulfilled.\")\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                children: t(\"It fluctuates according to gas prices.\")\n            }),\n            (inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol) && (outputCurrency === null || outputCurrency === void 0 ? void 0 : outputCurrency.symbol) && realExecutionPriceAsString && /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                children: realExecutionPriceAsString === \"never executes\" ? t(\"Assuming current gas price this order will never execute. Try increasing the amount of tokens to swap.\") : t(\"Assuming current gas price it should execute when 1 %assetOneSymbol% = %price% %assetTwoSymbol%\", {\n                    assetOneSymbol: rateType === types/* Rate.MUL */.j.MUL ? inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol : outputCurrency === null || outputCurrency === void 0 ? void 0 : outputCurrency.symbol,\n                    assetTwoSymbol: rateType === types/* Rate.MUL */.j.MUL ? outputCurrency === null || outputCurrency === void 0 ? void 0 : outputCurrency.symbol : inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol,\n                    price: realExecutionPriceAsString\n                })\n            })\n        ]\n    }), {\n        placement: \"top\"\n    }), targetRef = ref.targetRef, tooltip = ref.tooltip, tooltipVisible = ref.tooltipVisible;\n    var handleOnChange = function(event) {\n        var nextUserInput = event.target.value.replace(/,/g, \".\");\n        if (nextUserInput === \"\" || inputRegex.test((0,utils/* escapeRegExp */.hr)(nextUserInput))) {\n            onUserInput(nextUserInput);\n        }\n    };\n    var ref1;\n    var isAtMarketPrice = (ref1 = percentageRateDifference === null || percentageRateDifference === void 0 ? void 0 : percentageRateDifference.equalTo(0)) !== null && ref1 !== void 0 ? ref1 : true;\n    var ref2 = (0,_sliced_to_array/* default */.Z)(getRatePercentageMessage(percentageRateDifference, t), 2), ratePercentageMessage = ref2[0], direction = ref2[1];\n    var priceLabelColor = DIRECTION_COLORS[direction];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                justifyContent: \"space-between\",\n                id: id,\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        alignItems: \"center\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                mr: \"8px\",\n                                color: \"secondary\",\n                                fontSize: \"12px\",\n                                bold: true,\n                                textTransform: \"uppercase\",\n                                children: t(\"Price\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                onClick: handleResetToMarketPrice,\n                                startIcon: /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoRenew/* default */.Z, {\n                                    color: isAtMarketPrice ? \"textDisabled\" : \"primary\"\n                                }),\n                                variant: \"secondary\",\n                                scale: \"xs\",\n                                disabled: isAtMarketPrice,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    fontSize: \"12px\",\n                                    bold: true,\n                                    color: isAtMarketPrice ? \"textDisabled\" : \"primary\",\n                                    textTransform: \"uppercase\",\n                                    children: t(\"Market\")\n                                })\n                            })\n                        ]\n                    }),\n                    ratePercentageMessage && /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: priceLabelColor,\n                        fontSize: \"12px\",\n                        children: ratePercentageMessage\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(OrderPriceInput, {\n                value: value,\n                disabled: disabled,\n                onChange: handleOnChange,\n                autoComplete: \"off\",\n                autoCorrect: \"off\",\n                pattern: \"^[0-9]*[.,]?[0-9]*$\",\n                minLength: 1,\n                maxLength: 79,\n                spellCheck: \"false\",\n                type: \"text\",\n                inputMode: \"decimal\"\n            }),\n            hasCurrencyInfo && /*#__PURE__*/ (0,jsx_runtime.jsxs)(LabelContainer, {\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                onClick: toggleRateType,\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        small: true,\n                        bold: true,\n                        children: label\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(SyncAlt/* default */.Z, {\n                        color: \"textSubtle\",\n                        width: \"24px\",\n                        ml: \"4px\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                justifySelf: \"flex-end\",\n                mb: \"8px\",\n                minHeight: \"16px\",\n                children: realExecutionPriceAsString && /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            small: true,\n                            color: \"textSubtle\",\n                            mr: \"4px\",\n                            children: t(\"Real execution price: %price%\", {\n                                price: realExecutionPriceAsString\n                            })\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"span\", {\n                            ref: targetRef,\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Help/* default */.Z, {\n                                    color: \"textSubtle\"\n                                }),\n                                tooltipVisible && tooltip\n                            ]\n                        })\n                    ]\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var components_LimitOrderPrice = (LimitOrderPrice);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ArrowDown.tsx\nvar ArrowDown = __webpack_require__(6372);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ArrowUpDown.tsx\nvar ArrowUpDown = __webpack_require__(92863);\n// EXTERNAL MODULE: ./src/components/Layout/Row.tsx\nvar Row = __webpack_require__(39475);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/SwitchTokensButton.tsx\n\nfunction SwitchTokensButton_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\\n  .icon-up-down {\\n    display: none;\\n  }\\n  &:hover {\\n    background-color: \",\n        \";\\n    .icon-down {\\n      display: none;\\n      fill: white;\\n    }\\n    .icon-up-down {\\n      display: block;\\n      fill: white;\\n    }\\n  }\\n\"\n    ]);\n    SwitchTokensButton_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\nvar StyledButton = (0,styled_components_browser_esm/* default */.ZP)(IconButton/* default */.Z).withConfig({\n    componentId: \"sc-6b179343-0\"\n})(SwitchTokensButton_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.primary;\n});\nvar SwitchIconButton = function(param) {\n    var handleSwitchTokens = param.handleSwitchTokens, color = param.color;\n    var handleOnClick = (0,react.useCallback)(function() {\n        return handleSwitchTokens === null || handleSwitchTokens === void 0 ? void 0 : handleSwitchTokens();\n    }, [\n        handleSwitchTokens\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n        justify: \"space-between\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* AutoRow */.BA, {\n            justify: \"center\",\n            style: {\n                padding: \"0 1rem\"\n            },\n            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledButton, {\n                variant: \"light\",\n                scale: \"sm\",\n                onClick: handleOnClick,\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDown/* default */.Z, {\n                        className: \"icon-down\",\n                        color: color\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowUpDown/* default */.Z, {\n                        className: \"icon-up-down\",\n                        color: color\n                    })\n                ]\n            })\n        })\n    });\n};\n/* harmony default export */ var SwitchTokensButton = (SwitchIconButton);\n\n// EXTERNAL MODULE: ./src/views/Page.tsx\nvar Page = __webpack_require__(49438);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/Card.tsx + 1 modules\nvar Card = __webpack_require__(38144);\n// EXTERNAL MODULE: ./packages/uikit/src/components/ButtonMenu/ButtonMenu.tsx\nvar ButtonMenu = __webpack_require__(50156);\n// EXTERNAL MODULE: ./packages/uikit/src/components/ButtonMenu/ButtonMenuItem.tsx\nvar ButtonMenuItem = __webpack_require__(39320);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/OrderTab.tsx\n\nfunction OrderTab_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  & > div {\\n    width: 100%;\\n    background-color: \",\n        \";\\n    border: 0;\\n  }\\n  & button {\\n    border-bottom-left-radius: 0px;\\n    border-bottom-right-radius: 0px;\\n  }\\n\"\n    ]);\n    OrderTab_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar OrderTab_Wrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-6242fb3e-0\"\n})(OrderTab_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.input;\n});\nvar OrderTab = function(param) {\n    var activeIndex = param.activeIndex, onItemClick = param.onItemClick;\n    var theme = (0,useTheme/* default */.ZP)().theme;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(OrderTab_Wrapper, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ButtonMenu/* default */.Z, {\n            activeIndex: activeIndex,\n            onItemClick: onItemClick,\n            children: [\n                t(\"Open Orders\"),\n                t(\"Order History\")\n            ].map(function(content, idx) {\n                return /*#__PURE__*/ (0,jsx_runtime.jsx)(ButtonMenuItem/* default */.Z, {\n                    style: {\n                        color: idx === activeIndex ? theme.colors.text : theme.colors.textSubtle,\n                        backgroundColor: idx === activeIndex ? theme.card.background : theme.colors.input\n                    },\n                    children: content\n                }, content);\n            })\n        })\n    });\n};\n/* harmony default export */ var LimitOrderTable_OrderTab = (OrderTab);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Table/Table.tsx\nvar Table = __webpack_require__(48993);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Table/Cell.tsx\nvar Cell = __webpack_require__(158);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ChevronRight.tsx\nvar ChevronRight = __webpack_require__(94528);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/hooks/useFormattedOrderData.ts\n\n\n\n\n\n\n\n\n\n\nvar formatForDisplay = function(amount) {\n    if (!amount) {\n        return undefined;\n    }\n    return parseFloat(amount.toSignificant(18)).toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 8\n    });\n};\n// Transforms Gelato Order type into types ready to be displayed in UI\nvar useFormattedOrderData = function(order) {\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var gelatoLibrary = (0,useGelatoLimitOrdersLib/* default */.Z)();\n    var inputToken = (0,Tokens/* useCurrency */.U8)(order.inputToken);\n    var outputToken = (0,Tokens/* useCurrency */.U8)(order.outputToken);\n    var isSubmissionPending = (0,transactions_hooks/* useIsTransactionPending */.ub)(order.createdTxHash);\n    var _cancelledTxHash;\n    var isCancellationPending = (0,transactions_hooks/* useIsTransactionPending */.ub)((_cancelledTxHash = order.cancelledTxHash) !== null && _cancelledTxHash !== void 0 ? _cancelledTxHash : undefined);\n    var inputAmount = (0,react.useMemo)(function() {\n        if (inputToken && order.inputAmount) {\n            if ((0,_instanceof/* default */.Z)(inputToken, src/* Token */.WU)) {\n                return new src/* TokenAmount */.dt(inputToken, order.inputAmount);\n            }\n            return src/* CurrencyAmount.ether */.ih.ether(order.inputAmount);\n        }\n        return undefined;\n    }, [\n        inputToken,\n        order.inputAmount\n    ]);\n    var rawMinReturn = (0,react.useMemo)(function() {\n        return order.adjustedMinReturn ? order.adjustedMinReturn : gelatoLibrary && chainId && order.minReturn ? gelatoLibrary.getAdjustedMinReturn(order.minReturn) : undefined;\n    }, [\n        chainId,\n        gelatoLibrary,\n        order.adjustedMinReturn,\n        order.minReturn\n    ]);\n    var outputAmount = (0,react.useMemo)(function() {\n        if (outputToken && rawMinReturn) {\n            if ((0,_instanceof/* default */.Z)(outputToken, src/* Token */.WU)) {\n                return new src/* TokenAmount */.dt(outputToken, rawMinReturn);\n            }\n            return src/* CurrencyAmount.ether */.ih.ether(rawMinReturn);\n        }\n        return undefined;\n    }, [\n        outputToken,\n        rawMinReturn\n    ]);\n    var executionPrice = (0,react.useMemo)(function() {\n        return utils_getPriceForOneToken(inputAmount, outputAmount);\n    }, [\n        inputAmount,\n        outputAmount\n    ]);\n    return {\n        inputToken: inputToken,\n        outputToken: outputToken,\n        inputAmount: formatForDisplay(inputAmount),\n        outputAmount: formatForDisplay(outputAmount),\n        executionPrice: formatForDisplay(executionPrice),\n        invertedExecutionPrice: formatForDisplay(executionPrice === null || executionPrice === void 0 ? void 0 : executionPrice.invert()),\n        isOpen: order.status === LimitOrderStatus.OPEN,\n        isCancelled: order.status === LimitOrderStatus.CANCELLED,\n        isExecuted: order.status === LimitOrderStatus.EXECUTED,\n        isSubmissionPending: isSubmissionPending,\n        isCancellationPending: isCancellationPending,\n        bscScanUrls: {\n            created: order.createdTxHash ? (0,utils/* getBscScanLink */.s6)(order.createdTxHash, \"transaction\") : null,\n            executed: order.executedTxHash ? (0,utils/* getBscScanLink */.s6)(order.executedTxHash, \"transaction\") : null,\n            cancelled: order.cancelledTxHash ? (0,utils/* getBscScanLink */.s6)(order.cancelledTxHash, \"transaction\") : null\n        }\n    };\n};\n/* harmony default export */ var hooks_useFormattedOrderData = (useFormattedOrderData);\n\n// EXTERNAL MODULE: ./src/components/Logo/CurrencyLogo.tsx + 1 modules\nvar CurrencyLogo = __webpack_require__(292);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/TextIcon.tsx\n\n\nvar TextIcon = function(param) {\n    var icon = param.icon, text = param.text, _bold = param.bold, bold = _bold === void 0 ? false : _bold;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        alignItems: \"center\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                color: \"text\",\n                mr: \"8px\",\n                bold: bold,\n                textTransform: \"uppercase\",\n                children: text\n            }),\n            icon\n        ]\n    });\n};\n/* harmony default export */ var LimitOrderTable_TextIcon = (TextIcon);\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/CurrencyFormat.tsx\n\n\n\nvar CurrencyFormat = function(param) {\n    var currency = param.currency, bold = param.bold;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_TextIcon, {\n        bold: bold,\n        text: currency === null || currency === void 0 ? void 0 : currency.symbol,\n        icon: /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyLogo/* default */.Z, {\n            currency: currency\n        })\n    });\n};\n/* harmony default export */ var LimitOrderTable_CurrencyFormat = (CurrencyFormat);\n\n// EXTERNAL MODULE: ./packages/uikit/src/widgets/Modal/Modal.tsx\nvar Modal = __webpack_require__(90452);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Tag/Tag.tsx + 3 modules\nvar Tag = __webpack_require__(24930);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Spinner/Spinner.tsx + 2 modules\nvar Spinner = __webpack_require__(63603);\n// EXTERNAL MODULE: ./src/components/TransactionConfirmationModal/index.tsx\nvar TransactionConfirmationModal = __webpack_require__(41228);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/CellFormat.tsx\n\n\nvar CellFormat = function(param) {\n    var firstRow = param.firstRow, secondRow = param.secondRow;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                mb: \"4px\",\n                children: firstRow\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                children: secondRow\n            })\n        ]\n    });\n};\n/* harmony default export */ var LimitOrderTable_CellFormat = (CellFormat);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Message/Message.tsx + 1 modules\nvar Message = __webpack_require__(67334);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderDisclaimer.tsx\n\n\n\nvar LimitOrderDisclaimer = function() {\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n        variant: \"warning\",\n        mt: \"24px\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"b\", {\n                    children: t(\"Real Execution Price:\")\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"ol\", {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                            children: t(\"Your execution gas fees are paid for by the spread between your specified price and the real execution price.\")\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                            children: t(\"Gas fees are volatile and thus the exact market price at which your order will execute is unpredictable.\")\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                            children: t(\"It might take much longer than you expected to reach the price that fills your order + fees.\")\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"br\", {}),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"b\", {\n                    children: t('\"Fee on Transfer\" Tokens')\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"ol\", {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                        children: t('\"Fee on transfer\" tokens should not be used with Limit Orders (use at your own risk)')\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var components_LimitOrderDisclaimer = (LimitOrderDisclaimer);\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/DetailLimitOrderModal.tsx\n\nfunction DetailLimitOrderModal_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: 16px;\\n  padding: 16px;\\n  margin-top: 24px;\\n  border: 1px solid \",\n        \";\\n  background-color: \",\n        \";\\n\"\n    ]);\n    DetailLimitOrderModal_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nvar InfoCardWrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-1e1cae2b-0\"\n})(DetailLimitOrderModal_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.background;\n});\nvar DetailLimitOrderModal = function(param) {\n    var onDismiss = param.onDismiss, order = param.order, formattedOrder = param.formattedOrder;\n    var ref, ref1, ref2, ref3, ref4, ref5;\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var theme = (0,useTheme/* default */.ZP)().theme;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var handleLimitOrderCancellation = limitOrders_useGelatoLimitOrdersHandlers().handleLimitOrderCancellation;\n    var ref6 = (0,react.useState)({\n        attemptingTxn: false,\n        cancellationErrorMessage: undefined,\n        txHash: undefined\n    }), ref7 = ref6[0], cancellationErrorMessage = ref7.cancellationErrorMessage, attemptingTxn = ref7.attemptingTxn, txHash = ref7.txHash, setCancellationState = ref6[1];\n    var onCancelOrder = (0,react.useCallback)(function() {\n        var ref, ref1;\n        if (!handleLimitOrderCancellation) {\n            return;\n        }\n        setCancellationState({\n            attemptingTxn: true,\n            cancellationErrorMessage: undefined,\n            txHash: undefined\n        });\n        var orderDetails = ((ref = formattedOrder.inputToken) === null || ref === void 0 ? void 0 : ref.symbol) && ((ref1 = formattedOrder.outputToken) === null || ref1 === void 0 ? void 0 : ref1.symbol) && formattedOrder.inputAmount && formattedOrder.outputAmount ? {\n            inputTokenSymbol: formattedOrder.inputToken.symbol,\n            outputTokenSymbol: formattedOrder.outputToken.symbol,\n            inputAmount: formattedOrder.inputAmount,\n            outputAmount: formattedOrder.outputAmount\n        } : undefined;\n        handleLimitOrderCancellation(order, orderDetails).then(function(param) {\n            var hash = param.hash;\n            setCancellationState({\n                attemptingTxn: false,\n                cancellationErrorMessage: undefined,\n                txHash: hash\n            });\n        }).catch(function(error) {\n            setCancellationState({\n                attemptingTxn: false,\n                cancellationErrorMessage: error.message,\n                txHash: undefined\n            });\n        });\n    }, [\n        handleLimitOrderCancellation,\n        formattedOrder.inputAmount,\n        formattedOrder.outputAmount,\n        (ref = formattedOrder.inputToken) === null || ref === void 0 ? void 0 : ref.symbol,\n        (ref1 = formattedOrder.outputToken) === null || ref1 === void 0 ? void 0 : ref1.symbol,\n        order, \n    ]);\n    var limitPriceExchangeRateText = \"1 \".concat((ref2 = formattedOrder.inputToken) === null || ref2 === void 0 ? void 0 : ref2.symbol, \" = \").concat(formattedOrder.executionPrice, \" \").concat((ref3 = formattedOrder.outputToken) === null || ref3 === void 0 ? void 0 : ref3.symbol);\n    var limitPriceExchangeRateTextReversed = \"1 \".concat((ref4 = formattedOrder.outputToken) === null || ref4 === void 0 ? void 0 : ref4.symbol, \" = \").concat(formattedOrder.invertedExecutionPrice, \" \").concat((ref5 = formattedOrder.inputToken) === null || ref5 === void 0 ? void 0 : ref5.symbol);\n    var isOpen = formattedOrder.isOpen, isExecuted = formattedOrder.isExecuted, isCancelled = formattedOrder.isCancelled, isSubmissionPending = formattedOrder.isSubmissionPending, isCancellationPending = formattedOrder.isCancellationPending, bscScanUrls = formattedOrder.bscScanUrls;\n    var orderDetails = /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                width: \"100%\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CellFormat, {\n                        firstRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: formattedOrder.inputAmount\n                        }),\n                        secondRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CurrencyFormat, {\n                            currency: formattedOrder.inputToken\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ChevronRight/* default */.Z, {}),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CellFormat, {\n                        firstRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: formattedOrder.outputAmount\n                        }),\n                        secondRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CurrencyFormat, {\n                            currency: formattedOrder.outputToken\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitTradeInfoCard, {\n                currentPriceExchangeRateText: \"0.002474 BNB = 1 BUSD\",\n                currentPriceExchangeRateTextReversed: \"404.11169 BUSD = 1 BNB\",\n                limitPriceExchangeRateText: limitPriceExchangeRateText,\n                limitPriceExchangeRateTextReversed: limitPriceExchangeRateTextReversed,\n                isOpen: isOpen,\n                isExecuted: isExecuted,\n                isCancelled: isCancelled,\n                isSubmissionPending: isSubmissionPending,\n                isCancellationPending: isCancellationPending\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(components_LimitOrderDisclaimer, {}),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                flexDirection: \"column\",\n                children: [\n                    isOpen ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                variant: \"primary\",\n                                mt: \"16px\",\n                                as: \"a\",\n                                external: true,\n                                href: formattedOrder.bscScanUrls.created,\n                                children: t(\"View on BscScan\")\n                            }),\n                            !isSubmissionPending && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                variant: \"danger\",\n                                mt: \"16px\",\n                                onClick: onCancelOrder,\n                                children: t(\"Cancel Order\")\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                        variant: \"primary\",\n                        mt: \"16px\",\n                        as: \"a\",\n                        external: true,\n                        href: formattedOrder.bscScanUrls.created,\n                        children: t(\"View order creation on BSCScan\")\n                    }),\n                    isCancelled && bscScanUrls.cancelled && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                        variant: \"primary\",\n                        mt: \"16px\",\n                        as: \"a\",\n                        external: true,\n                        href: bscScanUrls.cancelled,\n                        children: t(\"View order cancellation on BSCScan\")\n                    }),\n                    isExecuted && bscScanUrls.executed && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                        variant: \"primary\",\n                        mt: \"16px\",\n                        as: \"a\",\n                        external: true,\n                        href: bscScanUrls.executed,\n                        children: t(\"View order execution on BSCScan\")\n                    })\n                ]\n            })\n        ]\n    });\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Modal/* default */.Z, {\n        title: t(\"Open Order Details\"),\n        headerBackground: theme.colors.gradients.cardHeader,\n        style: {\n            width: \"436px\"\n        },\n        onDismiss: onDismiss,\n        children: attemptingTxn ? /*#__PURE__*/ (0,jsx_runtime.jsx)(LoadingContent, {}) : txHash ? /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionSubmittedContent */.rD, {\n            chainId: chainId,\n            hash: txHash,\n            onDismiss: onDismiss\n        }) : cancellationErrorMessage ? /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionErrorContent */.ht, {\n            onDismiss: onDismiss,\n            message: cancellationErrorMessage\n        }) : orderDetails\n    });\n};\nvar LimitTradeInfoCard = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var limitPriceExchangeRateText = param.limitPriceExchangeRateText, limitPriceExchangeRateTextReversed = param.limitPriceExchangeRateTextReversed, isOpen = param.isOpen, isExecuted = param.isExecuted, isCancelled = param.isCancelled, isSubmissionPending = param.isSubmissionPending, isCancellationPending = param.isCancellationPending;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(InfoCardWrapper, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n            mb: \"4px\",\n            children: [\n                isOpen && isSubmissionPending && /*#__PURE__*/ (0,jsx_runtime.jsx)(Tag/* default */.Z, {\n                    outline: true,\n                    scale: \"sm\",\n                    p: \"8px\",\n                    mb: \"16px\",\n                    variant: \"warning\",\n                    children: t(\"Pending\")\n                }),\n                isExecuted && /*#__PURE__*/ (0,jsx_runtime.jsx)(Tag/* default */.Z, {\n                    outline: true,\n                    scale: \"sm\",\n                    p: \"8px\",\n                    mb: \"16px\",\n                    variant: \"success\",\n                    children: t(\"Filled\")\n                }),\n                isCancellationPending && /*#__PURE__*/ (0,jsx_runtime.jsx)(Tag/* default */.Z, {\n                    outline: true,\n                    scale: \"sm\",\n                    p: \"8px\",\n                    mb: \"16px\",\n                    variant: \"warning\",\n                    children: t(\"Cancelling\")\n                }),\n                isCancelled && !isCancellationPending && /*#__PURE__*/ (0,jsx_runtime.jsx)(Tag/* default */.Z, {\n                    outline: true,\n                    scale: \"sm\",\n                    p: \"8px\",\n                    mb: \"16px\",\n                    variant: \"failure\",\n                    children: t(\"Cancelled\")\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"14px\",\n                    color: \"textSubtle\",\n                    children: t(\"Limit Price\")\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                    flexDirection: \"column\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            children: limitPriceExchangeRateText\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            children: limitPriceExchangeRateTextReversed\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n});\nvar LoadingContent = /*#__PURE__*/ (0,react.memo)(function() {\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                flexDirection: \"column\",\n                flexGrow: \"wrap\",\n                flexBasis: \"267px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        fontSize: \"20px\",\n                        small: true,\n                        color: \"secondary\",\n                        children: t(\"Confirm\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        small: true,\n                        color: \"textSubtle\",\n                        mt: \"8px\",\n                        children: t(\"Please confirm the transaction in your wallet\")\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Spinner/* default */.Z, {\n                    size: 70\n                })\n            })\n        ]\n    });\n});\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/OrderStatus.tsx\n\n\n\n\nvar StatusElementType;\n(function(StatusElementType) {\n    StatusElementType[\"TAG\"] = \"Tag\";\n    StatusElementType[\"TEXT\"] = \"Text\";\n})(StatusElementType || (StatusElementType = {}));\nvar StatusElement = function(param) {\n    var element = param.element, text = param.text, color = param.color;\n    if (element === StatusElementType.TAG) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(Tag/* default */.Z, {\n            outline: true,\n            scale: \"sm\",\n            variant: color,\n            ml: \"auto\",\n            children: text\n        });\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n        color: color,\n        children: text\n    });\n};\nvar OrderStatus = function(param) {\n    var formattedOrder = param.formattedOrder, _showOpenTag = param.showOpenTag, showOpenTag = _showOpenTag === void 0 ? false : _showOpenTag, _element = param.element, element = _element === void 0 ? StatusElementType.TAG : _element;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var isOpen = formattedOrder.isOpen, isSubmissionPending = formattedOrder.isSubmissionPending, isCancelled = formattedOrder.isCancelled, isCancellationPending = formattedOrder.isCancellationPending, isExecuted = formattedOrder.isExecuted;\n    if (isOpen && !isSubmissionPending && showOpenTag) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(StatusElement, {\n            element: element,\n            text: t(\"Open\"),\n            color: \"success\"\n        });\n    }\n    if (isOpen && isSubmissionPending) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(StatusElement, {\n            element: element,\n            text: t(\"Pending\"),\n            color: \"warning\"\n        });\n    }\n    if (isCancelled && !isCancellationPending) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(StatusElement, {\n            element: element,\n            text: t(\"Cancelled\"),\n            color: \"failure\"\n        });\n    }\n    if (isCancellationPending) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(StatusElement, {\n            element: element,\n            text: t(\"Cancelling\"),\n            color: \"warning\"\n        });\n    }\n    if (isExecuted) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(StatusElement, {\n            element: element,\n            text: t(\"Filled\"),\n            color: \"success\"\n        });\n    }\n    return null;\n};\n/* harmony default export */ var LimitOrderTable_OrderStatus = (OrderStatus);\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/CompactRow.tsx\n\n\n\n\n\n\n\n\nvar CompactRow = function(param) {\n    var order = param.order;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var formattedOrder = hooks_useFormattedOrderData(order);\n    var inputToken = formattedOrder.inputToken, outputToken = formattedOrder.outputToken, inputAmount = formattedOrder.inputAmount, outputAmount = formattedOrder.outputAmount, executionPrice = formattedOrder.executionPrice;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(DetailLimitOrderModal, {\n        order: order,\n        formattedOrder: formattedOrder\n    })), 1), openDetailLimitOrderModal = ref[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        onClick: openDetailLimitOrderModal,\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n            width: \"100%\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                    mb: \"16px\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CurrencyFormat, {\n                            bold: true,\n                            currency: inputToken\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(ChevronRight/* default */.Z, {\n                            color: \"textSubtle\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CurrencyFormat, {\n                            bold: true,\n                            currency: outputToken\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_OrderStatus, {\n                            formattedOrder: formattedOrder\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"12px\",\n                            bold: true,\n                            color: \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            children: t(\"From\")\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            small: true,\n                            textTransform: \"uppercase\",\n                            children: \"\".concat(inputAmount, \" \").concat(inputToken === null || inputToken === void 0 ? void 0 : inputToken.symbol)\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"12px\",\n                            bold: true,\n                            color: \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            children: t(\"To\")\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            small: true,\n                            textTransform: \"uppercase\",\n                            children: \"\".concat(outputAmount, \" \").concat(outputToken === null || outputToken === void 0 ? void 0 : outputToken.symbol)\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"12px\",\n                            bold: true,\n                            color: \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            children: t(\"Price\")\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            small: true,\n                            children: \"\".concat(executionPrice, \" \").concat(outputToken === null || outputToken === void 0 ? void 0 : outputToken.symbol, \" per \").concat(inputToken === null || inputToken === void 0 ? void 0 : inputToken.symbol)\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var LimitOrderTable_CompactRow = (CompactRow);\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/CompactLimitOrderTable.tsx\n\nfunction CompactLimitOrderTable_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  cursor: pointer;\\n\\n  &:hover {\\n    background: \",\n        \";\\n  }\\n\"\n    ]);\n    CompactLimitOrderTable_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar RowStyle = styled_components_browser_esm/* default.tr.withConfig */.ZP.tr.withConfig({\n    componentId: \"sc-a6176c36-0\"\n})(CompactLimitOrderTable_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.backgroundDisabled;\n});\nvar CompactLimitOrderTable = function(param) {\n    var orders = param.orders;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Table/* default */.Z, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(\"tbody\", {\n            children: orders.map(function(order) {\n                return /*#__PURE__*/ (0,jsx_runtime.jsx)(RowStyle, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CompactRow, {\n                            order: order\n                        })\n                    })\n                }, order.id);\n            })\n        })\n    });\n};\n/* harmony default export */ var LimitOrderTable_CompactLimitOrderTable = (/*#__PURE__*/(0,react.memo)(CompactLimitOrderTable));\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/MoreHorizontal.tsx\nvar MoreHorizontal = __webpack_require__(37320);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/FullRow.tsx\n\n\n\n\n\n\n\n\n\n\nvar FullRow = function(param) {\n    var order = param.order;\n    var formattedOrder = hooks_useFormattedOrderData(order);\n    var inputToken = formattedOrder.inputToken, outputToken = formattedOrder.outputToken, inputAmount = formattedOrder.inputAmount, outputAmount = formattedOrder.outputAmount, executionPrice = formattedOrder.executionPrice;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(DetailLimitOrderModal, {\n        order: order,\n        formattedOrder: formattedOrder\n    })), 1), openDetailLimitOrderModal = ref[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"tr\", {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CellFormat, {\n                    firstRow: inputAmount,\n                    secondRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CurrencyFormat, {\n                        bold: true,\n                        currency: inputToken\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CellFormat, {\n                    firstRow: outputAmount,\n                    secondRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CurrencyFormat, {\n                        bold: true,\n                        currency: outputToken\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CellFormat, {\n                    firstRow: executionPrice,\n                    secondRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_TextIcon, {\n                        text: \"\".concat(outputToken === null || outputToken === void 0 ? void 0 : outputToken.symbol, \"/\").concat(inputToken === null || inputToken === void 0 ? void 0 : inputToken.symbol),\n                        icon: /*#__PURE__*/ (0,jsx_runtime.jsx)(SyncAlt/* default */.Z, {})\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_OrderStatus, {\n                    formattedOrder: formattedOrder,\n                    showOpenTag: true,\n                    element: StatusElementType.TEXT\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                    variant: \"text\",\n                    onClick: openDetailLimitOrderModal,\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(MoreHorizontal/* default */.Z, {})\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var LimitOrderTable_FullRow = (FullRow);\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/SpaciousLimitOrderTable.tsx\n\n\n\n\n\nvar SpaciousLimitOrderTable = function(param) {\n    var orders = param.orders;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Table/* default */.Z, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"thead\", {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"tr\", {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Th, {\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    fontSize: \"12px\",\n                                    bold: true,\n                                    textTransform: \"uppercase\",\n                                    color: \"textSubtle\",\n                                    textAlign: \"left\",\n                                    children: t(\"From\")\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Th, {\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    fontSize: \"12px\",\n                                    bold: true,\n                                    textTransform: \"uppercase\",\n                                    color: \"textSubtle\",\n                                    textAlign: \"left\",\n                                    children: t(\"To\")\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Th, {\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    fontSize: \"12px\",\n                                    bold: true,\n                                    textTransform: \"uppercase\",\n                                    color: \"textSubtle\",\n                                    textAlign: \"left\",\n                                    children: t(\"Limit Price\")\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Th, {\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    fontSize: \"12px\",\n                                    bold: true,\n                                    textTransform: \"uppercase\",\n                                    color: \"textSubtle\",\n                                    textAlign: \"left\",\n                                    children: t(\"Status\")\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Th, {})\n                        ]\n                    })\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"tbody\", {\n                    children: orders.map(function(order) {\n                        return /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_FullRow, {\n                            order: order\n                        }, order.id);\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var LimitOrderTable_SpaciousLimitOrderTable = (/*#__PURE__*/(0,react.memo)(SpaciousLimitOrderTable));\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Grid.tsx\nvar Grid = __webpack_require__(26170);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ArrowBack.tsx\nvar ArrowBack = __webpack_require__(69508);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ArrowForward.tsx\nvar ArrowForward = __webpack_require__(16863);\n// EXTERNAL MODULE: ./src/components/SubgraphHealthIndicator/index.tsx + 1 modules\nvar SubgraphHealthIndicator = __webpack_require__(118);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/BunnyPlaceholder.tsx\nvar BunnyPlaceholder = __webpack_require__(22661);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/NoOrdersMessage.tsx\n\n\n\n\n\nvar NoOrdersMessage = function(param) {\n    var orderCategory = param.orderCategory;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        p: \"24px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(BunnyPlaceholder/* default */.Z, {\n                width: 64\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                color: \"textDisabled\",\n                children: orderCategory === ORDER_CATEGORY.Open ? t(\"No Open Orders\") : t(\"No Order History\")\n            })\n        ]\n    });\n};\n/* harmony default export */ var LimitOrderTable_NoOrdersMessage = (NoOrdersMessage);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Skeleton/Skeleton.tsx + 1 modules\nvar Skeleton = __webpack_require__(84091);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/LoadingTable.tsx\n\n\n\nvar LoadingTable = function() {\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Table/* default */.Z, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"tbody\", {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"tr\", {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"tr\", {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"tr\", {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Cell.Td, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {})\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var LimitOrderTable_LoadingTable = (/*#__PURE__*/(0,react.memo)(LoadingTable));\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/TableNavigation.tsx\n\nfunction TableNavigation_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  color: \",\n        \";\\n  padding: 0 20px;\\n  :hover {\\n    cursor: pointer;\\n  }\\n\"\n    ]);\n    TableNavigation_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\nvar Arrow = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-bf54a7d7-0\"\n})(TableNavigation_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.primary;\n});\nvar ORDERS_PER_PAGE = 5;\nvar TableNavigation = function(param) {\n    var data = param.data, orderCategory = param.orderCategory, _itemsPerPage = param.itemsPerPage, itemsPerPage = _itemsPerPage === void 0 ? ORDERS_PER_PAGE : _itemsPerPage, children = param.children;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = (0,react.useState)(1), currentPage = ref[0], setPage = ref[1];\n    var total = Array.isArray(data) ? data.length : 0;\n    var maxPage = (0,react.useMemo)(function() {\n        if (total) {\n            return Math.ceil(total / itemsPerPage);\n        }\n        return 1;\n    }, [\n        total,\n        itemsPerPage\n    ]);\n    var onPageNext = (0,react.useCallback)(function() {\n        setPage(function(page) {\n            return page === maxPage ? page : page + 1;\n        });\n    }, [\n        maxPage\n    ]);\n    var onPagePrev = (0,react.useCallback)(function() {\n        setPage(function(page) {\n            return page === 1 ? page : page - 1;\n        });\n    }, []);\n    var from = (0,react.useMemo)(function() {\n        return itemsPerPage * (currentPage - 1);\n    }, [\n        currentPage,\n        itemsPerPage\n    ]);\n    var to = (0,react.useMemo)(function() {\n        return itemsPerPage * currentPage;\n    }, [\n        currentPage,\n        itemsPerPage\n    ]);\n    var paginatedData = (0,react.useMemo)(function() {\n        return Array.isArray(data) ? data.slice(from, to) : [];\n    }, [\n        data,\n        from,\n        to\n    ]);\n    (0,react.useEffect)(function() {\n        setPage(1);\n    }, [\n        orderCategory\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            children({\n                paginatedData: paginatedData\n            }),\n            !data && /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_LoadingTable, {}),\n            data && !total && /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_NoOrdersMessage, {\n                orderCategory: orderCategory\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Grid/* default */.Z, {\n                gridGap: \"16px\",\n                gridTemplateColumns: [\n                    \"1fr\",\n                    null,\n                    null,\n                    null,\n                    \"1fr 2fr 1fr\"\n                ],\n                mt: \"16px\",\n                mb: \"16px\",\n                px: \"16px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {}),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        width: \"100%\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Arrow, {\n                                onClick: onPagePrev,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowBack/* default */.Z, {\n                                    color: currentPage === 1 ? \"textDisabled\" : \"primary\"\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                children: t(\"Page %page% of %maxPage%\", {\n                                    page: currentPage,\n                                    maxPage: maxPage\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Arrow, {\n                                onClick: onPageNext,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowForward/* default */.Z, {\n                                    color: currentPage === maxPage ? \"textDisabled\" : \"primary\"\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        width: \"100%\",\n                        justifyContent: [\n                            \"center\",\n                            null,\n                            null,\n                            null,\n                            \"flex-end\"\n                        ],\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(SubgraphHealthIndicator[\"default\"], {\n                            subgraphName: \"gelatodigital/limit-orders-bsc\",\n                            inline: true\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n};\n/* harmony default export */ var LimitOrderTable_TableNavigation = (/*#__PURE__*/(0,react.memo)(TableNavigation));\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/LimitOrderTable/index.tsx\n\n\n\n\n\n\n\n\n\nvar OrderTable = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var orderCategory = param.orderCategory, isCompact = param.isCompact;\n    var orders = useGelatoLimitOrdersHistory(orderCategory);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_TableNavigation, {\n        data: orders,\n        orderCategory: orderCategory,\n        children: function(param) {\n            var paginatedData = param.paginatedData;\n            return isCompact ? /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_CompactLimitOrderTable, {\n                orders: paginatedData\n            }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_SpaciousLimitOrderTable, {\n                orders: paginatedData\n            });\n        }\n    });\n});\nvar LimitOrderTable = function(param) {\n    var isCompact = param.isCompact;\n    var ref = (0,react.useState)(ORDER_CATEGORY.Open), activeTab = ref[0], setIndex = ref[1];\n    var handleClick = (0,react.useCallback)(function(tabType) {\n        return setIndex(tabType);\n    }, []);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        flex: \"1\",\n        justifyContent: \"center\",\n        mb: \"24px\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* default */.Z, {\n            style: {\n                width: \"100%\",\n                height: \"max-content\"\n            },\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(LimitOrderTable_OrderTab, {\n                    onItemClick: handleClick,\n                    activeIndex: activeTab\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(OrderTable, {\n                    orderCategory: activeTab,\n                    isCompact: isCompact\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var components_LimitOrderTable = (/*#__PURE__*/(0,react.memo)(LimitOrderTable));\n\n// EXTERNAL MODULE: ./src/components/Logo/index.ts + 2 modules\nvar Logo = __webpack_require__(74314);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/components/ConfirmLimitOrderModal.tsx\n\nfunction ConfirmLimitOrderModal_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: 16px;\\n  padding: 16px;\\n  margin-top: 24px;\\n  border: 1px solid \",\n        \";\\n  background-color: \",\n        \";\\n\"\n    ]);\n    ConfirmLimitOrderModal_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar ConfirmLimitOrderModal_InfoCardWrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-fe7e58b3-0\"\n})(ConfirmLimitOrderModal_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.background;\n});\nvar ConfirmLimitOrderModal = function(param) {\n    var onDismiss = param.onDismiss, currencies = param.currencies, formattedAmounts = param.formattedAmounts, currentMarketRate = param.currentMarketRate, currentMarketRateInverted = param.currentMarketRateInverted, limitPrice = param.limitPrice, limitPriceInverted = param.limitPriceInverted, percentageRateDifference = param.percentageRateDifference, onConfirm = param.onConfirm, attemptingTxn = param.attemptingTxn, txHash = param.txHash, customOnDismiss = param.customOnDismiss, swapErrorMessage = param.swapErrorMessage;\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var theme = (0,useTheme/* default */.ZP)().theme;\n    var wrappedOutput = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies.output, chainId);\n    var handleDismiss = function() {\n        if (customOnDismiss) {\n            customOnDismiss();\n        }\n        onDismiss();\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Modal/* default */.Z, {\n        title: t(\"Confirm Limit Order\"),\n        headerBackground: theme.colors.gradients.cardHeader,\n        onDismiss: handleDismiss,\n        style: {\n            width: \"436px\"\n        },\n        children: [\n            attemptingTxn ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ConfirmLimitOrderModal_LoadingContent, {}) : txHash ? /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionSubmittedContent */.rD, {\n                chainId: chainId,\n                hash: txHash,\n                currencyToAdd: wrappedOutput,\n                onDismiss: handleDismiss\n            }) : swapErrorMessage ? /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionErrorContent */.ht, {\n                onDismiss: handleDismiss,\n                message: swapErrorMessage\n            }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(OrderContent, {\n                currencies: currencies,\n                formattedAmounts: formattedAmounts,\n                currentMarketRate: currentMarketRate,\n                currentMarketRateInverted: currentMarketRateInverted,\n                limitPrice: limitPrice,\n                limitPriceInverted: limitPriceInverted,\n                percentageRateDifference: percentageRateDifference\n            }),\n            !txHash && !swapErrorMessage && /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                justifyContent: \"center\",\n                mt: \"24px\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                    scale: \"md\",\n                    variant: \"primary\",\n                    onClick: onConfirm,\n                    width: \"100%\",\n                    disabled: attemptingTxn,\n                    children: attemptingTxn ? t(\"Confirming...\") : t(\"Confirm\")\n                })\n            })\n        ]\n    });\n};\nvar OrderContent = function(param) {\n    var currencies = param.currencies, formattedAmounts = param.formattedAmounts, currentMarketRate = param.currentMarketRate, currentMarketRateInverted = param.currentMarketRateInverted, limitPrice = param.limitPrice, limitPriceInverted = param.limitPriceInverted, percentageRateDifference = param.percentageRateDifference;\n    var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var currentPriceExchangeRateText = \"1 \".concat((ref = currencies.input) === null || ref === void 0 ? void 0 : ref.symbol, \" = \").concat(currentMarketRate, \" \").concat((ref1 = currencies.output) === null || ref1 === void 0 ? void 0 : ref1.symbol);\n    var currentPriceExchangeRateTextReversed = \"1 \".concat((ref2 = currencies.output) === null || ref2 === void 0 ? void 0 : ref2.symbol, \" = \").concat(currentMarketRateInverted, \" \").concat((ref3 = currencies.input) === null || ref3 === void 0 ? void 0 : ref3.symbol);\n    var limitPriceExchangeRateText = \"1 \".concat((ref4 = currencies.input) === null || ref4 === void 0 ? void 0 : ref4.symbol, \" = \").concat(limitPrice, \" \").concat((ref5 = currencies.output) === null || ref5 === void 0 ? void 0 : ref5.symbol);\n    var limitPriceExchangeRateTextReversed = \"1 \".concat((ref6 = currencies.output) === null || ref6 === void 0 ? void 0 : ref6.symbol, \" = \").concat(limitPriceInverted, \" \").concat((ref7 = currencies.input) === null || ref7 === void 0 ? void 0 : ref7.symbol);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                flexDirection: \"column\",\n                width: \"100%\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"24px\",\n                                color: \"text\",\n                                children: formattedAmounts.input\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                                alignItems: \"center\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        textTransform: \"uppercase\",\n                                        color: \"text\",\n                                        mr: \"8px\",\n                                        children: (ref8 = currencies.input) === null || ref8 === void 0 ? void 0 : ref8.symbol\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                        currency: currencies.input\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        justifyContent: \"center\",\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDown/* default */.Z, {})\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"24px\",\n                                color: \"text\",\n                                children: formattedAmounts.output\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                                alignItems: \"center\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        textTransform: \"uppercase\",\n                                        color: \"text\",\n                                        mr: \"8px\",\n                                        children: (ref9 = currencies.output) === null || ref9 === void 0 ? void 0 : ref9.symbol\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                        currency: currencies.output\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(ConfirmLimitOrderModal_LimitTradeInfoCard, {\n                currentPriceExchangeRateText: currentPriceExchangeRateText,\n                currentPriceExchangeRateTextReversed: currentPriceExchangeRateTextReversed,\n                limitPriceExchangeRateText: limitPriceExchangeRateText,\n                limitPriceExchangeRateTextReversed: limitPriceExchangeRateTextReversed\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                variant: \"success\",\n                mt: \"24px\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* MessageText */.Y, {\n                    children: t(\"Limit price is %percentage%% above the current market rate. The order will be executed when the market price reaches high enough above your limit price (to also pay for limit order execution gas fees).\", {\n                        percentage: percentageRateDifference\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(components_LimitOrderDisclaimer, {})\n        ]\n    });\n};\nvar ConfirmLimitOrderModal_LimitTradeInfoCard = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var currentPriceExchangeRateText = param.currentPriceExchangeRateText, currentPriceExchangeRateTextReversed = param.currentPriceExchangeRateTextReversed, limitPriceExchangeRateText = param.limitPriceExchangeRateText, limitPriceExchangeRateTextReversed = param.limitPriceExchangeRateTextReversed;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(ConfirmLimitOrderModal_InfoCardWrapper, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        fontSize: \"14px\",\n                        color: \"textSubtle\",\n                        children: t(\"Current Market Price\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        flexDirection: \"column\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"text\",\n                                fontSize: \"14px\",\n                                bold: true,\n                                children: currentPriceExchangeRateText\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"text\",\n                                fontSize: \"14px\",\n                                children: currentPriceExchangeRateTextReversed\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                justifyContent: \"space-between\",\n                mt: \"16px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        fontSize: \"14px\",\n                        color: \"textSubtle\",\n                        children: t(\"Limit Price\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        flexDirection: \"column\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"#129E7D\",\n                                fontSize: \"14px\",\n                                bold: true,\n                                children: limitPriceExchangeRateText\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"#129E7D\",\n                                fontSize: \"14px\",\n                                children: limitPriceExchangeRateTextReversed\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n});\nvar ConfirmLimitOrderModal_LoadingContent = /*#__PURE__*/ (0,react.memo)(function() {\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                flexDirection: \"column\",\n                flexGrow: \"wrap\",\n                flexBasis: \"267px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        fontSize: \"20px\",\n                        small: true,\n                        color: \"secondary\",\n                        children: t(\"Confirm\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        small: true,\n                        color: \"textSubtle\",\n                        mt: \"8px\",\n                        children: t(\"Please confirm the transaction in your wallet\")\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Spinner/* default */.Z, {\n                    size: 70\n                })\n            })\n        ]\n    });\n});\n\n;// CONCATENATED MODULE: ./src/views/LimitOrders/utils/getRatePercentageDifference.ts\n\nvar getRatePercentageDifference = function(currentMarketRate, price) {\n    if (currentMarketRate && price) {\n        var percentageAsFraction = price.subtract(currentMarketRate).divide(currentMarketRate);\n        return new src/* Percent */.gG(percentageAsFraction.numerator, percentageAsFraction.denominator);\n    }\n    return undefined;\n};\n/* harmony default export */ var utils_getRatePercentageDifference = (getRatePercentageDifference);\n\n// EXTERNAL MODULE: ./src/components/ImportTokenWarningModal.tsx\nvar ImportTokenWarningModal = __webpack_require__(19131);\n;// CONCATENATED MODULE: ./src/views/LimitOrders/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LimitOrders = function() {\n    var ref, ref1, ref2, ref3, ref4;\n    // Helpers\n    var account = (0,core_esm/* useWeb3React */.Ge)().account;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var router = (0,next_router.useRouter)();\n    var ref5 = (0,useMatchBreakpointsContext/* default */.Z)(), isMobile = ref5.isMobile, isTablet = ref5.isTablet;\n    var theme = (0,useTheme/* default */.ZP)().theme;\n    var ref6 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useExchangeChartManager */.vD)(isMobile), 2), userChartPreference = ref6[0], setUserChartPreference = ref6[1];\n    var ref7 = (0,react.useState)(false), isChartExpanded = ref7[0], setIsChartExpanded = ref7[1];\n    var ref8 = (0,react.useState)(userChartPreference), isChartDisplayed = ref8[0], setIsChartDisplayed = ref8[1];\n    (0,react.useEffect)(function() {\n        setUserChartPreference(isChartDisplayed);\n    }, [\n        isChartDisplayed,\n        setUserChartPreference\n    ]);\n    var loadedUrlParams = useDefaultsFromURLSearch();\n    // token warning stuff\n    var ref9 = [\n        (0,Tokens/* useCurrency */.U8)(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId),\n        (0,Tokens/* useCurrency */.U8)(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId), \n    ], loadedInputCurrency = ref9[0], loadedOutputCurrency = ref9[1];\n    var ref10;\n    var urlLoadedTokens = (0,react.useMemo)(function() {\n        var ref;\n        return (ref10 = (ref = [\n            loadedInputCurrency,\n            loadedOutputCurrency\n        ]) === null || ref === void 0 ? void 0 : ref.filter(function(c) {\n            return (0,_instanceof/* default */.Z)(c, src/* Token */.WU);\n        })) !== null && ref10 !== void 0 ? ref10 : [];\n    }, [\n        loadedInputCurrency,\n        loadedOutputCurrency\n    ]);\n    // dismiss warning if all imported tokens are in active lists\n    var defaultTokens = (0,Tokens/* useAllTokens */.e_)();\n    var importTokensNotInDefault = (0,react.useMemo)(function() {\n        return urlLoadedTokens && urlLoadedTokens.filter(function(token) {\n            return !(token.address in defaultTokens);\n        });\n    }, [\n        defaultTokens,\n        urlLoadedTokens\n    ]);\n    var ref11 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(ImportTokenWarningModal/* default */.Z, {\n        tokens: importTokensNotInDefault,\n        onCancel: function() {\n            return router.push(\"/limit-orders\");\n        }\n    }), false, false, \"limitOrderTokenWarningModal\"), 1), onPresentImportTokenWarningModal = ref11[0];\n    (0,react.useEffect)(function() {\n        if (importTokensNotInDefault.length > 0) {\n            onPresentImportTokenWarningModal();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        importTokensNotInDefault.length\n    ]);\n    // TODO: fiat values\n    var ref12 = limitOrders_useGelatoLimitOrders(), _handlers = ref12.handlers, handleInput = _handlers.handleInput, handleCurrencySelection = _handlers.handleCurrencySelection, handleSwitchTokens = _handlers.handleSwitchTokens, handleLimitOrderSubmission = _handlers.handleLimitOrderSubmission, handleRateType = _handlers.handleRateType, _derivedOrderInfo = ref12.derivedOrderInfo, currencies = _derivedOrderInfo.currencies, currencyBalances = _derivedOrderInfo.currencyBalances, parsedAmounts = _derivedOrderInfo.parsedAmounts, formattedAmounts = _derivedOrderInfo.formattedAmounts, rawAmounts = _derivedOrderInfo.rawAmounts, trade = _derivedOrderInfo.trade, price = _derivedOrderInfo.price, inputError = _derivedOrderInfo.inputError, wrappedCurrencies = _derivedOrderInfo.wrappedCurrencies, singleTokenPrice = _derivedOrderInfo.singleTokenPrice, currencyIds = _derivedOrderInfo.currencyIds, _orderState = ref12.orderState, independentField = _orderState.independentField, basisField = _orderState.basisField, rateType = _orderState.rateType;\n    var ref13 = (0,react.useState)({\n        tradeToConfirm: undefined,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: undefined\n    }), ref14 = ref13[0], swapErrorMessage = ref14.swapErrorMessage, attemptingTxn = ref14.attemptingTxn, txHash = ref14.txHash, setSwapState = ref13[1];\n    var ref15 = (0,_sliced_to_array/* default */.Z)((0,useApproveCallback/* useApproveCallbackFromInputCurrencyAmount */.tz)(parsedAmounts.input), 2), approvalState = ref15[0], approveCallback = ref15[1];\n    var ref16 = (0,react.useState)(false), approvalSubmitted = ref16[0], setApprovalSubmitted = ref16[1];\n    var maxAmountInput = (0,maxAmountSpend/* maxAmountSpend */.i)(currencyBalances.input);\n    var hideMaxButton = Boolean(maxAmountInput && ((ref = parsedAmounts.input) === null || ref === void 0 ? void 0 : ref.equalTo(maxAmountInput)));\n    // Trade execution price is always \"in MUL mode\", even if UI handles DIV rate\n    var currentMarketRate = trade === null || trade === void 0 ? void 0 : trade.executionPrice;\n    var percentageRateDifference = utils_getRatePercentageDifference(currentMarketRate, price);\n    // UI handlers\n    var handleTypeInput = (0,react.useCallback)(function(value) {\n        handleInput(types/* Field.INPUT */.g.INPUT, value);\n    }, [\n        handleInput\n    ]);\n    var handleTypeOutput = (0,react.useCallback)(function(value) {\n        handleInput(types/* Field.OUTPUT */.g.OUTPUT, value);\n    }, [\n        handleInput\n    ]);\n    var handleInputSelect = (0,react.useCallback)(function(inputCurrency) {\n        setApprovalSubmitted(false);\n        handleCurrencySelection(types/* Field.INPUT */.g.INPUT, inputCurrency);\n    }, [\n        handleCurrencySelection\n    ]);\n    var handleTypeDesiredRate = (0,react.useCallback)(function(value) {\n        handleInput(types/* Field.PRICE */.g.PRICE, value);\n    }, [\n        handleInput\n    ]);\n    var handleMaxInput = (0,react.useCallback)(function() {\n        if (maxAmountInput) {\n            handleInput(types/* Field.INPUT */.g.INPUT, maxAmountInput.toExact());\n        }\n    }, [\n        maxAmountInput,\n        handleInput\n    ]);\n    var handleOutputSelect = (0,react.useCallback)(function(outputCurrency) {\n        handleCurrencySelection(types/* Field.OUTPUT */.g.OUTPUT, outputCurrency);\n    }, [\n        handleCurrencySelection\n    ]);\n    var handleApprove = (0,react.useCallback)((0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee() {\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.next = 2;\n                    return approveCallback();\n                case 2:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    })), [\n        approveCallback\n    ]);\n    var handleConfirmDismiss = (0,react.useCallback)(function() {\n        // if there was a tx hash, we want to clear the input\n        if (txHash) {\n            handleTypeInput(\"\");\n        }\n    }, [\n        txHash,\n        handleTypeInput\n    ]);\n    // Trick to reset to market price via fake update on the basis field\n    var handleResetToMarketPrice = (0,react.useCallback)(function() {\n        if (basisField === types/* Field.INPUT */.g.INPUT) {\n            handleTypeInput(formattedAmounts.input);\n        } else {\n            handleTypeOutput(formattedAmounts.output);\n        }\n    }, [\n        handleTypeInput,\n        handleTypeOutput,\n        formattedAmounts.input,\n        formattedAmounts.output,\n        basisField\n    ]);\n    var handlePlaceOrder = (0,react.useCallback)(function() {\n        if (!handleLimitOrderSubmission) {\n            return;\n        }\n        setSwapState(function(prev) {\n            return {\n                attemptingTxn: true,\n                tradeToConfirm: prev.tradeToConfirm,\n                swapErrorMessage: undefined,\n                txHash: undefined\n            };\n        });\n        try {\n            var ref, ref1, ref2, ref3;\n            if (!((ref = wrappedCurrencies.input) === null || ref === void 0 ? void 0 : ref.address)) {\n                throw new Error(\"Invalid input currency\");\n            }\n            if (!((ref1 = wrappedCurrencies.output) === null || ref1 === void 0 ? void 0 : ref1.address)) {\n                throw new Error(\"Invalid output currency\");\n            }\n            if (!rawAmounts.input) {\n                throw new Error(\"Invalid input amount\");\n            }\n            if (!rawAmounts.output) {\n                throw new Error(\"Invalid output amount\");\n            }\n            if (!account) {\n                throw new Error(\"No account\");\n            }\n            var inputToken = (0,_instanceof/* default */.Z)(currencies.input, src/* Token */.WU) ? (ref2 = wrappedCurrencies.input) === null || ref2 === void 0 ? void 0 : ref2.address : constants/* GELATO_NATIVE */.ag;\n            var outputToken = (0,_instanceof/* default */.Z)(currencies.output, src/* Token */.WU) ? (ref3 = wrappedCurrencies.output) === null || ref3 === void 0 ? void 0 : ref3.address : constants/* GELATO_NATIVE */.ag;\n            var orderToSubmit = {\n                inputToken: inputToken,\n                outputToken: outputToken,\n                inputAmount: rawAmounts.input,\n                outputAmount: rawAmounts.output,\n                owner: account\n            };\n            handleLimitOrderSubmission(orderToSubmit).then(function(param) {\n                var hash = param.hash;\n                setSwapState(function(prev) {\n                    return {\n                        attemptingTxn: false,\n                        tradeToConfirm: prev.tradeToConfirm,\n                        swapErrorMessage: undefined,\n                        txHash: hash\n                    };\n                });\n            }).catch(function(error) {\n                setSwapState(function(prev) {\n                    return {\n                        attemptingTxn: false,\n                        tradeToConfirm: prev.tradeToConfirm,\n                        swapErrorMessage: error.message,\n                        txHash: undefined\n                    };\n                });\n            });\n        } catch (error) {\n            console.error(error);\n        }\n    }, [\n        handleLimitOrderSubmission,\n        account,\n        rawAmounts.input,\n        rawAmounts.output,\n        currencies.input,\n        currencies.output,\n        (ref1 = wrappedCurrencies.input) === null || ref1 === void 0 ? void 0 : ref1.address,\n        (ref2 = wrappedCurrencies.output) === null || ref2 === void 0 ? void 0 : ref2.address, \n    ]);\n    var handleTokenSwitch = (0,react.useCallback)(function() {\n        setApprovalSubmitted(false);\n        handleSwitchTokens();\n    }, [\n        handleSwitchTokens\n    ]);\n    var realExecutionPriceAsString = useGasOverhead(parsedAmounts.input, parsedAmounts.output, rateType).realExecutionPriceAsString;\n    var ref17 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(ConfirmLimitOrderModal, {\n        currencies: currencies,\n        formattedAmounts: formattedAmounts,\n        currentMarketRate: currentMarketRate === null || currentMarketRate === void 0 ? void 0 : currentMarketRate.toSignificant(4),\n        currentMarketRateInverted: currentMarketRate === null || currentMarketRate === void 0 ? void 0 : currentMarketRate.invert().toSignificant(4),\n        limitPrice: price === null || price === void 0 ? void 0 : price.toSignificant(6),\n        limitPriceInverted: price === null || price === void 0 ? void 0 : price.invert().toSignificant(6),\n        percentageRateDifference: parseFloat(percentageRateDifference === null || percentageRateDifference === void 0 ? void 0 : percentageRateDifference.toSignificant(3)).toLocaleString(undefined, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 3\n        }),\n        onConfirm: handlePlaceOrder,\n        attemptingTxn: attemptingTxn,\n        txHash: txHash,\n        customOnDismiss: handleConfirmDismiss,\n        swapErrorMessage: swapErrorMessage\n    }), true, true, \"confirmLimitOrderModal\"), 1), showConfirmModal = ref17[0];\n    // mark when a user has submitted an approval, reset onTokenSelection for input field\n    (0,react.useEffect)(function() {\n        if (approvalState === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING) {\n            setApprovalSubmitted(true);\n        }\n    }, [\n        approvalState,\n        approvalSubmitted\n    ]);\n    var showApproveFlow = !inputError && (approvalState === useApproveCallback/* ApprovalState.NOT_APPROVED */.UK.NOT_APPROVED || approvalState === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING);\n    var isSideFooter = isChartExpanded || isChartDisplayed;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Page/* default */.Z, {\n        removePadding: isChartExpanded,\n        hideFooterOnDesktop: isSideFooter,\n        noMinHeight: true,\n        helpUrl: exchange/* LIMIT_ORDERS_DOCS_URL */.vm,\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(components_ClaimWarning, {}),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                width: \"100%\",\n                justifyContent: \"center\",\n                position: \"relative\",\n                mb: isSideFooter ? null : \"24px\",\n                mt: isChartExpanded ? \"24px\" : null,\n                children: [\n                    !isMobile && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        width: isChartExpanded ? \"100%\" : \"50%\",\n                        maxWidth: \"928px\",\n                        flexDirection: \"column\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(PriceChartContainer/* default */.Z, {\n                                inputCurrencyId: currencyIds.input,\n                                inputCurrency: currencies.input,\n                                outputCurrencyId: currencyIds.output,\n                                outputCurrency: currencies.output,\n                                isChartExpanded: isChartExpanded,\n                                setIsChartExpanded: setIsChartExpanded,\n                                isChartDisplayed: isChartDisplayed,\n                                currentSwapPrice: singleTokenPrice,\n                                isFullWidthContainer: true\n                            }),\n                            isChartDisplayed && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                mb: \"48px\"\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                width: \"100%\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(components_LimitOrderTable, {\n                                    isCompact: isTablet\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledSwapContainer, {\n                                $isChartExpanded: false,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledInputCurrencyWrapper, {\n                                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(App/* AppBody */.j, {\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(components_CurrencyInputHeader, {\n                                                title: t(\"Limit\"),\n                                                subtitle: t(\"Place a limit order to trade at a set price\"),\n                                                setIsChartDisplayed: setIsChartDisplayed,\n                                                isChartDisplayed: isChartDisplayed\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Wrapper, {\n                                                id: \"limit-order-page\",\n                                                style: {\n                                                    minHeight: \"412px\"\n                                                },\n                                                children: [\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                                                        gap: \"sm\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                                                label: independentField === types/* Field.OUTPUT */.g.OUTPUT ? t(\"From (estimated)\") : t(\"From\"),\n                                                                value: formattedAmounts.input,\n                                                                showMaxButton: !hideMaxButton,\n                                                                currency: currencies.input,\n                                                                onUserInput: handleTypeInput,\n                                                                onMax: handleMaxInput,\n                                                                onCurrencySelect: handleInputSelect,\n                                                                otherCurrency: currencies.output,\n                                                                id: \"limit-order-currency-input\"\n                                                            }),\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(SwitchTokensButton, {\n                                                                handleSwitchTokens: handleTokenSwitch,\n                                                                color: currencies[types/* Field.INPUT */.g.INPUT] && currencies[types/* Field.OUTPUT */.g.OUTPUT] ? \"primary\" : \"text\"\n                                                            }),\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                                                value: formattedAmounts.output,\n                                                                onUserInput: handleTypeOutput,\n                                                                label: independentField === types/* Field.INPUT */.g.INPUT ? t(\"To (estimated)\") : t(\"To\"),\n                                                                showMaxButton: false,\n                                                                currency: currencies.output,\n                                                                onCurrencySelect: handleOutputSelect,\n                                                                otherCurrency: currencies.output,\n                                                                id: \"limit-order-currency-output\"\n                                                            }),\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(components_LimitOrderPrice, {\n                                                                id: \"limit-order-desired-rate-input\",\n                                                                value: formattedAmounts.price,\n                                                                onUserInput: handleTypeDesiredRate,\n                                                                inputCurrency: currencies.input,\n                                                                outputCurrency: currencies.output,\n                                                                percentageRateDifference: percentageRateDifference,\n                                                                rateType: rateType,\n                                                                handleRateType: handleRateType,\n                                                                price: price,\n                                                                handleResetToMarketPrice: handleResetToMarketPrice,\n                                                                realExecutionPriceAsString: !inputError ? realExecutionPriceAsString : undefined,\n                                                                disabled: !formattedAmounts.input && !formattedAmounts.output\n                                                            })\n                                                        ]\n                                                    }),\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                                        mt: \"0.25rem\",\n                                                        children: !account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {\n                                                            width: \"100%\"\n                                                        }) : showApproveFlow ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                            variant: \"primary\",\n                                                            onClick: handleApprove,\n                                                            id: \"enable-order-button\",\n                                                            width: \"100%\",\n                                                            disabled: approvalSubmitted,\n                                                            children: approvalSubmitted ? t(\"Enabling %asset%\", {\n                                                                asset: (ref3 = currencies.input) === null || ref3 === void 0 ? void 0 : ref3.symbol\n                                                            }) : t(\"Enable %asset%\", {\n                                                                asset: (ref4 = currencies.input) === null || ref4 === void 0 ? void 0 : ref4.symbol\n                                                            })\n                                                        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                            variant: \"primary\",\n                                                            onClick: function() {\n                                                                setSwapState({\n                                                                    tradeToConfirm: trade,\n                                                                    attemptingTxn: false,\n                                                                    swapErrorMessage: undefined,\n                                                                    txHash: undefined\n                                                                });\n                                                                showConfirmModal();\n                                                            },\n                                                            id: \"place-order-button\",\n                                                            width: \"100%\",\n                                                            disabled: !!inputError || realExecutionPriceAsString === \"never executes\",\n                                                            children: inputError || realExecutionPriceAsString === \"never executes\" ? inputError || t(\"Can't execute this order\") : t(\"Place an Order\")\n                                                        })\n                                                    }),\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                                                        mt: \"16px\",\n                                                        justifyContent: \"center\",\n                                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Link/* default */.Z, {\n                                                            external: true,\n                                                            href: \"https://www.gelato.network/\",\n                                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(\"img\", {\n                                                                src: theme.isDark ? \"/images/powered_by_gelato_white.svg\" : \"/images/powered_by_gelato_black.svg\",\n                                                                alt: \"Powered by Gelato\",\n                                                                width: \"170px\",\n                                                                height: \"48px\"\n                                                            })\n                                                        })\n                                                    })\n                                                ]\n                                            })\n                                        ]\n                                    })\n                                })\n                            }),\n                            isMobile && /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                                mt: \"24px\",\n                                width: \"100%\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(components_LimitOrderTable, {\n                                    isCompact: true\n                                })\n                            }),\n                            isSideFooter && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                display: [\n                                    \"none\",\n                                    null,\n                                    null,\n                                    \"block\"\n                                ],\n                                width: \"100%\",\n                                height: \"100%\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Footer/* default */.Z, {\n                                    variant: \"side\",\n                                    helpUrl: exchange/* LIMIT_ORDERS_DOCS_URL */.vm\n                                })\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(BottomDrawer/* default */.Z, {\n                content: /*#__PURE__*/ (0,jsx_runtime.jsx)(PriceChartContainer/* default */.Z, {\n                    inputCurrencyId: currencyIds.input,\n                    inputCurrency: currencies[types/* Field.INPUT */.g.INPUT],\n                    outputCurrencyId: currencyIds.output,\n                    outputCurrency: currencies[types/* Field.OUTPUT */.g.OUTPUT],\n                    isChartExpanded: isChartExpanded,\n                    setIsChartExpanded: setIsChartExpanded,\n                    isChartDisplayed: isChartDisplayed,\n                    currentSwapPrice: singleTokenPrice,\n                    isMobile: true\n                }),\n                isOpen: isChartDisplayed,\n                setIsOpen: setIsChartDisplayed\n            })\n        ]\n    });\n};\n/* harmony default export */ var views_LimitOrders = (LimitOrders);\n\n;// CONCATENATED MODULE: ./src/pages/limit-orders.tsx\n\n\nvar LimitOrdersPage = function() {\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(views_LimitOrders, {});\n};\n/* harmony default export */ var limit_orders = (LimitOrdersPage);\n\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [2077,9363,5855,6197,4583,561,5652,3439,7984,9691,9774,2888,179], function() { return __webpack_exec__(84120); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","window","__NEXT_P","__webpack_exports__","d","Td","Th","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","styled_system__WEBPACK_IMPORTED_MODULE_0__","_templateObject","data","Z","_templateObject1","ZP","td","withConfig","componentId","param","theme","colors","cardBorder","text","cp","attrs","as","secondary","_Cell__WEBPACK_IMPORTED_MODULE_3__","Table","table","Dh","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_7__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_6__","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__","contexts_Localization__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","GradientModalHeader","xB","gradients","bubblegum","id","onSuccess","onDismiss","checks","header","subtitle","ref","useState","checkState","setCheckState","t","$G","handleSetAcknowledgeRisk","useCallback","currentKey","map","check","key","value","handleConfirm","jsxs","F0","title","minWidth","children","jsx","r6","scale","fe","p","maxWidth","maxHeight","overflowY","mb","color","htmlFor","style","display","cursor","marginBottom","alignItems","flex","alignSelf","paddingTop","checked","onChange","ml","content","concat","width","onClick","disabled","some","r","components_SubgraphHealthIndicator","SubgraphStatus","ref1","ref2","_object_spread","_sliced_to_array","_tagged_template_literal","jsx_runtime","config","Localization","styled_components_browser_esm","Card","Flex","Box","useTooltip","Text","Info","hooks","_async_to_generator","runtime","runtime_default","n","react","dist","providers","endpoints","useRefreshEffect","hooks_useSubgraphHealth","subgraphName","status","UNKNOWN","currentBlock","chainHeadBlock","latestBlock","blockDifference","sgHealth","setSgHealth","X","currentBlockNumber","_ref","mark","_callee","indexingStatusForCurrentVersion","isHealthy","chainHeadBlockDifference","wrap","_ctx","prev","next","t0","Promise","all","request","AM","gql","resolve","v","getBlockNumber","t1","sent","health","parseInt","chains","number","NOT_OK","WARNING","OK","t2","console","error","stop","apply","arguments","SubgraphHealthIndicator_templateObject","_templateObject2","StyledCard","IndicatorWrapper","Dot","$color","TooltipContent","label","description","secondRemainingBlockSync","blockNumberFromSubgraph","pb","customDescriptions","sgStatus","inline","obeyGlobalSetting","YF","alwaysShowIndicator","forceIndicatorDisplay","indicatorProps","delayed","slow","healthy","hJ","current","placement","targetRef","tooltipVisible","tooltip","justifyContent","position","bottom","right","limit_orders","ORDER_CATEGORY","LimitOrderStatus","PercentageDirection","_obj","StatusElementType","_instanceof","next_router","src","useMatchBreakpointsContext","useModal","Button","Link","BottomDrawer","Column","CurrencyInputPanel","App","ConnectWalletButton","Footer","_define_property","jsbi_umd","jsbi_umd_default","es","exchange","useActiveWeb3React","wrappedCurrency","Tokens","Trades","utils_getPriceForOneToken","inputAmount","outputAmount","equalTo","tA","currency","raw","utils","tryParseAmount","actions","types","state","getDesiredInput","outputValue","exchangeRate","inputCurrency","outputCurrency","isInverted","parsedOutAmount","parsedExchangeRate","invertedResultAsFraction","asFraction","multiply","exponentiate","TY","BigInt","decimals","WU","dt","toFixed","ih","ether","resultAsFraction","divide","quotient","toString","getDesiredOutput","inputValue","parsedInputAmount","useOrderState","v9","limitOrders","useOrderActionHandlers","dispatch","I0","onCurrencySelection","field","j","currencyId","address","c0","onSwitchTokens","KS","onUserInput","typedValue","LC","onChangeRateType","rateType","sN","getErrorMessage","account","wrappedCurrencies","currencies","currencyBalances","parsedAmounts","trade","price","input","output","toLowerCase","hasAtLeastOneParsedAmount","tradeIsNotAvailable","route","lessThan","symbol","MUL","executionPrice","DIV","invert","greaterThan","useDerivedOrderInfo","ref3","ref4","ref7","ref8","ref9","ref10","ref11","ref5","chainId","ref6","independentField","basisField","_INPUT","g","INPUT","inputCurrencyId","_OUTPUT","OUTPUT","outputCurrencyId","U8","useMemo","undefined","pu","relevantTokenBalances","K5","isExactIn","isOutputBasis","isDesiredRateUpdate","PRICE","desiredOutputAsCurrencyAmount","desiredInputAsCurrencyAmount","desiredOutputAsString","toSignificant","parsedTypedAmount","tradeAmount","bestTradeExactIn","AU","bestTradeExactOut","oneInputToken","singleTokenTrade","singleTokenPrice","parseFloat","formattedAmounts","rawAmounts","inputError","currencyIds","parseIndependentFieldURLParameter","urlParam","parseCurrencyFromURLParameter","valid","UJ","toUpperCase","queryParametersToSwapState","parsedQs","VN","g$","exactAmount","Number","isNaN","exactField","useDefaultsFromURLSearch","TL","query","useRouter","result","setResult","useEffect","parsed","sQ","_object_spread_props","bignumber","transactions_hooks","_to_consumable_array","constants","localStorageOrders","useGelatoLimitOrdersLib","orderBy","orderBy_default","OPEN_ORDERS_SWR_KEY","EXECUTED_CANCELLED_ORDERS_SWR_KEY","newOrdersFirst","a","b","updatedAt","syncOrderToLocalStorage","_","_syncOrderToLocalStorage","gelatoLimitOrders","orders","syncStatuses","allOrdersLS","lsOrdersHashSet","newOrders","typeOrdersLS","i","confOrder","graphOrder","QR","AG","filter","order","has","ZJ","type","length","find","getOrder","oldOrder","newOrder","TR","useOpenOrders","turnOn","startFetch","openOrdersLS","pendingOrdersLS","getOpenOrders","OPEN","abrupt","pendingOrder","CANCELLED","sort","refreshInterval","KI","useHistoryOrders","acc","canOrders","exeOrders","executedOrdersLS","cancelledOrdersLS","pendingCancelledOrdersLS","getCancelledOrders","getExecutedOrders","EXECUTED","limitOrders_useGelatoLimitOrdersHandlers","mutate","kY","addTransaction","h7","handleLimitOrderSubmission","orderToSubmit","overrides","witness","payload","tx","now","signer","encodeLimitOrderSubmissionWithSecret","inputToken","outputToken","owner","sendTransaction","to","O$","from","Math","round","Date","summary","createdTxHash","hash","handleLimitOrderCancellation","orderToCancel","orderDetails","checkIfOrderExists","Boolean","module","cancelLimitOrder","gasLimit","inputTokenSymbol","outputTokenSymbol","cancelledTxHash","handleInput","handleCurrencySelection","handleSwitchTokens","handleRateType","limitOrders_useGelatoLimitOrders","derivedOrderInfo","orderState","handlers","lib_esm","user_hooks","useTheme","useApproveCallback","maxAmountSpend","PriceChartContainer","core_esm","DisclaimerModal","components_ClaimWarning","memo","$c","hasAcceptedRisk","setHasAcceptedRisk","onPresentRiskDisclaimer","Wrapper","StyledSwapContainer","mediaQueries","lg","xxl","$isChartExpanded","StyledInputCurrencyWrapper","IconButton","ChartDisable","Chart","Heading","History","TransactionsModal","CurrencyInputHeader_templateObject","CurrencyInputHeader_templateObject1","CurrencyInputContainer","ColoredIconButton","textSubtle","components_CurrencyInputHeader","setIsChartDisplayed","isChartDisplayed","onPresentTransactionsModal","currentIsChartDisplayed","variant","fontSize","Input","AutoRenew","SyncAlt","Help","getRatePercentageMessage","percentageRateDifference","MARKET","formattedPercentage","toLocaleString","minimumFractionDigits","maximumFractionDigits","percentage","BELOW","ABOVE","LimitOrderPrice_templateObject","LimitOrderPrice_templateObject1","inputRegex","RegExp","OrderPriceInput","LabelContainer","DIRECTION_COLORS","components_LimitOrderPrice","handleResetToMarketPrice","realExecutionPriceAsString","Fragment","assetOneSymbol","assetTwoSymbol","isAtMarketPrice","ratePercentageMessage","priceLabelColor","mr","bold","textTransform","startIcon","event","nextUserInput","target","replace","test","hr","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","inputMode","hasCurrencyInfo","small","justifySelf","minHeight","ArrowDown","ArrowUpDown","Row","SwitchTokensButton_templateObject","StyledButton","primary","SwitchTokensButton","handleOnClick","Tz","justify","BA","padding","className","Page","ButtonMenu","ButtonMenuItem","OrderTab_templateObject","OrderTab_Wrapper","div","LimitOrderTable_OrderTab","activeIndex","onItemClick","idx","backgroundColor","card","background","Cell","ChevronRight","formatForDisplay","amount","hooks_useFormattedOrderData","_cancelledTxHash","gelatoLibrary","isSubmissionPending","ub","isCancellationPending","rawMinReturn","adjustedMinReturn","minReturn","getAdjustedMinReturn","invertedExecutionPrice","isOpen","isCancelled","isExecuted","bscScanUrls","created","s6","executed","executedTxHash","cancelled","CurrencyLogo","LimitOrderTable_TextIcon","icon","_bold","LimitOrderTable_CurrencyFormat","Modal","Tag","Spinner","TransactionConfirmationModal","LimitOrderTable_CellFormat","firstRow","secondRow","Message","components_LimitOrderDisclaimer","mt","Y","DetailLimitOrderModal_templateObject","InfoCardWrapper","DetailLimitOrderModal","formattedOrder","attemptingTxn","cancellationErrorMessage","txHash","setCancellationState","onCancelOrder","then","catch","message","limitPriceExchangeRateText","limitPriceExchangeRateTextReversed","LimitTradeInfoCard","currentPriceExchangeRateText","currentPriceExchangeRateTextReversed","flexDirection","external","href","headerBackground","cardHeader","LoadingContent","rD","ht","outline","flexGrow","flexBasis","size","StatusElement","element","TAG","LimitOrderTable_OrderStatus","_showOpenTag","showOpenTag","_element","LimitOrderTable_CompactRow","openDetailLimitOrderModal","CompactLimitOrderTable_templateObject","RowStyle","tr","backgroundDisabled","LimitOrderTable_CompactLimitOrderTable","MoreHorizontal","LimitOrderTable_FullRow","TEXT","LimitOrderTable_SpaciousLimitOrderTable","textAlign","Grid","ArrowBack","ArrowForward","SubgraphHealthIndicator","BunnyPlaceholder","LimitOrderTable_NoOrdersMessage","orderCategory","Open","Skeleton","LimitOrderTable_LoadingTable","TableNavigation_templateObject","Arrow","LimitOrderTable_TableNavigation","_itemsPerPage","itemsPerPage","currentPage","setPage","total","Array","isArray","maxPage","ceil","onPageNext","page","onPagePrev","paginatedData","slice","gridGap","gridTemplateColumns","px","OrderTable","historyOrders","openOrders","isCompact","createdAt","components_LimitOrderTable","activeTab","setIndex","handleClick","tabType","height","Logo","ConfirmLimitOrderModal_templateObject","ConfirmLimitOrderModal_InfoCardWrapper","ConfirmLimitOrderModal","currentMarketRate","currentMarketRateInverted","limitPrice","limitPriceInverted","onConfirm","customOnDismiss","swapErrorMessage","wrappedOutput","handleDismiss","ConfirmLimitOrderModal_LoadingContent","currencyToAdd","OrderContent","Xw","ConfirmLimitOrderModal_LimitTradeInfoCard","utils_getRatePercentageDifference","percentageAsFraction","subtract","gG","numerator","denominator","ImportTokenWarningModal","views_LimitOrders","Ge","router","isMobile","isTablet","vD","userChartPreference","setUserChartPreference","isChartExpanded","setIsChartExpanded","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","c","defaultTokens","e_","importTokensNotInDefault","token","tokens","onCancel","onPresentImportTokenWarningModal","gasPrice","requiredGas","requiredGasAsCurrencyAmount","inputIsBNB","gasCostInInputTokens","bufferedOutputAmount","realInputAmount","realExecutionPrice","ref12","_handlers","_derivedOrderInfo","_orderState","ref13","tradeToConfirm","ref14","setSwapState","ref15","tz","approvalState","approveCallback","ref16","approvalSubmitted","setApprovalSubmitted","maxAmountInput","hideMaxButton","handleTypeInput","handleTypeOutput","handleInputSelect","handleTypeDesiredRate","handleMaxInput","toExact","handleOutputSelect","handleApprove","handleConfirmDismiss","handlePlaceOrder","ag","handleTokenSwitch","useGasOverhead","Fh","bM","mul","q3","margin","adjustedGas","add","adjustedGasInWei","QA","ref17","showConfirmModal","UK","PENDING","showApproveFlow","NOT_APPROVED","isSideFooter","removePadding","hideFooterOnDesktop","noMinHeight","helpUrl","vm","currentSwapPrice","isFullWidthContainer","gap","showMaxButton","onMax","onCurrencySelect","otherCurrency","asset","isDark","alt","setIsOpen","O","moduleId","s","_N_E"],"sourceRoot":""}