{"version":3,"file":"static/chunks/9855-c52bdae4b0f092b7.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/partition.js","webpack://_N_E/./packages/uikit/src/components/Card/CardRibbon.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/AprRow.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolTabButtons.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/StakedCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/ExpandRow.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/PoolRow.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/PoolsTable.tsx","webpack://_N_E/./src/views/Pools/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\nimport _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  z-index: \",\n        \";\\n  background-color: \",\n        \";\\n  color: white;\\n  margin: 0;\\n  padding: 8px 0;\\n  position: absolute;\\n  right: \",\n        \";\\n  top: 0;\\n  text-align: center;\\n  transform: \",\n        \";\\n  transform-origin: top left;\\n  width: 96px;\\n\\n  &:before,\\n  &:after {\\n    background-color: \",\n        ';\\n    content: \"\";\\n    height: 100%;\\n    margin: 0 -1px; /* Removes tiny gap */\\n    position: absolute;\\n    top: 0;\\n    width: 100%;\\n  }\\n\\n  &:before {\\n    right: 100%;\\n  }\\n\\n  &:after {\\n    left: 100%;\\n  }\\n\\n  & > div {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    width: 96px;\\n  }\\n'\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar StyledCardRibbon = styled.div.withConfig({\n    componentId: \"sc-6cfbbab7-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.zIndices.ribbon;\n}, function(param) {\n    var _variantColor = param.variantColor, variantColor = _variantColor === void 0 ? \"secondary\" : _variantColor, theme = param.theme;\n    return theme.colors[variantColor];\n}, function(param) {\n    var ribbonPosition = param.ribbonPosition;\n    return ribbonPosition === \"right\" ? 0 : \"auto\";\n}, function(param) {\n    var ribbonPosition = param.ribbonPosition;\n    return ribbonPosition === \"right\" ? \"translateX(30%) translateY(0%) rotate(45deg)\" : \"translateX(0%) translateY(200%) rotate(-45deg)\";\n}, function(param) {\n    var _variantColor = param.variantColor, variantColor = _variantColor === void 0 ? \"secondary\" : _variantColor, theme = param.theme;\n    return theme.colors[variantColor];\n});\nvar CardRibbon = function(_param) {\n    var variantColor = _param.variantColor, text = _param.text, ribbonPosition = _param.ribbonPosition, props = _object_without_properties(_param, [\n        \"variantColor\",\n        \"text\",\n        \"ribbonPosition\"\n    ]);\n    return /*#__PURE__*/ _jsx(StyledCardRibbon, _object_spread_props(_object_spread({\n        variantColor: variantColor,\n        ribbonPosition: ribbonPosition\n    }, props), {\n        children: /*#__PURE__*/ _jsx(\"div\", {\n            title: text,\n            children: text\n        })\n    }));\n};\nCardRibbon.defaultProps = {\n    // eslint-disable-next-line react/default-props-match-prop-types\n    ribbonPosition: \"right\"\n};\nexport default CardRibbon;\n","import { Flex, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport Apr from 'views/Pools/components/Apr'\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n  showIcon?: boolean\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0, showIcon = true }) => {\n  const { t } = useTranslation()\n  const { vaultKey } = pool\n\n  const tooltipContent = vaultKey\n    ? t('APY includes compounding, APR doesn’t. This pool’s OVE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{vaultKey ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      <Apr pool={pool} stakedBalance={stakedBalance} performanceFee={performanceFee} showIcon={showIcon} />\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, pendingTx } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={pendingTx}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\n\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { useProfileRequirement } from 'views/Pools/hooks/useProfileRequirement'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\nimport { ProfileRequirementWarning } from '../../ProfileRequirementWarning'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, poolCategory, userData, earningTokenPrice, profileRequirement } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  const { notMeetRequired, notMeetThreshold } = useProfileRequirement(profileRequirement)\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <>\n          <Box display=\"inline\">\n            <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n              {`${earningToken.symbol} `}\n            </InlineText>\n            <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n              {t('Earned')}\n            </InlineText>\n          </Box>\n          <HarvestActions\n            earnings={earnings}\n            earningToken={earningToken}\n            sousId={sousId}\n            earningTokenPrice={earningTokenPrice}\n            isBnbPool={isBnbPool}\n            isLoading={isLoading}\n          />\n        </>\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {notMeetRequired || notMeetThreshold ? (\n          <ProfileRequirementWarning profileRequirement={profileRequirement} />\n        ) : needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\n\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport PoolCardHeader, { PoolCardHeaderTitle } from './PoolCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  const isCakePool = earningToken.symbol === 'OVE' && stakingToken.symbol === 'OVE'\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <PoolCardHeader isStaking={accountHasStakedBalance} isFinished={isFinished && sousId !== 0}>\n        <PoolCardHeaderTitle\n          title={isCakePool ? t('Manual') : t('Earn %asset%', { asset: earningToken.symbol })}\n          subTitle={isCakePool ? t('Earn OVE, stake OVE') : t('Stake OVE')}\n        />\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n      </PoolCardHeader>\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import { NextLinkFromReactRouter } from 'components/NextLink'\nimport ToggleView from 'components/ToggleView/ToggleView'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const router = useRouter()\n\n  const { t } = useTranslation()\n\n  const isExact = router.asPath === '/pools' || router.asPath === '/_mp/pools'\n\n  const viewModeToggle = <ToggleView idPrefix=\"clickPool\" viewMode={viewMode} onToggle={setViewMode} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={NextLinkFromReactRouter} to=\"/pools\" replace>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={NextLinkFromReactRouter} to=\"/pools/history\" replace>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpointsContext } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpointsContext()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!pool.userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { stakingToken, totalStaked, vaultKey } = pool\n  const { totalCakeInVault } = useVaultPoolByKey(vaultKey)\n\n  const totalStakedBalance = useMemo(() => {\n    if (vaultKey) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [vaultKey, totalCakeInVault, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit=\"   OVE\" />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useCurrentBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const currentBlock = useCurrentBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingBlockData = !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const isLoadingPublicData = hasPoolStarted ? !totalStaked.gt(0) || isLoadingBlockData : isLoadingBlockData\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import { Box, Flex, Skeleton, Text, useMatchBreakpointsContext } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { DeserializedPool, VaultKey, DeserializedPoolLockedVault } from 'state/types'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface StakedCellProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst StyledCell = styled(BaseCell)``\n\nconst StakedCell: React.FC<StakedCellProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpointsContext()\n\n  // vault\n  const vaultData = useVaultPoolByKey(pool.vaultKey)\n  const {\n    userData: {\n      userShares,\n      balance: { cakeAsBigNumber, cakeAsNumberBalance },\n      isLoading,\n    },\n  } = vaultData\n  const hasSharesStaked = userShares.gt(0)\n  const isVaultWithShares = pool.vaultKey && hasSharesStaked\n\n  // pool\n  const { stakingTokenPrice, stakingToken, userData } = pool\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const labelText = `${pool.stakingToken.symbol} ${\n    pool.vaultKey === VaultKey.CakeVault && (vaultData as DeserializedPoolLockedVault).userData.locked\n      ? t('Locked')\n      : t('Staked')\n  }`\n\n  const hasStaked = account && (stakedBalance.gt(0) || isVaultWithShares)\n\n  const userDataLoading = pool.vaultKey ? isLoading : !pool.userDataLoaded\n\n  return (\n    <StyledCell\n      role=\"cell\"\n      flex={\n        pool.vaultKey === VaultKey.CakeFlexibleSideVault\n          ? '1 0 162px'\n          : pool.vaultKey === VaultKey.CakeVault && !hasStaked\n          ? '1 0 120px'\n          : '2 0 100px'\n      }\n    >\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {userDataLoading && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasStaked ? 'primary' : 'textDisabled'}\n                  decimals={hasStaked ? 5 : 1}\n                  value={\n                    hasStaked\n                      ? pool.vaultKey\n                        ? Number.isNaN(cakeAsNumberBalance)\n                          ? 0\n                          : cakeAsNumberBalance\n                        : stakedTokenBalance\n                      : 0\n                  }\n                />\n                {hasStaked ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={pool.vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default StakedCell\n","import { useState, memo, ReactNode, useCallback, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useMatchBreakpointsContext } from '@pancakeswap/uikit'\n\nimport ExpandActionCell from './Cells/ExpandActionCell'\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst ExpandRow: React.FC<{ children: ReactNode; panel: ReactNode; initialActivity?: boolean }> = ({\n  children,\n  panel,\n  initialActivity,\n}) => {\n  const hasSetInitialValue = useRef(false)\n  const { isTablet, isDesktop } = useMatchBreakpointsContext()\n\n  const [expanded, setExpanded] = useState(initialActivity)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = useCallback(() => {\n    setExpanded((prev) => !prev)\n  }, [])\n  useEffect(() => {\n    if (initialActivity && hasSetInitialValue.current === false) {\n      setExpanded(initialActivity)\n      hasSetInitialValue.current = true\n    }\n  }, [initialActivity])\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        {children}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && panel}\n    </>\n  )\n}\n\nexport default memo(ExpandRow)\n","import { memo } from 'react'\nimport { useMatchBreakpointsContext } from '@pancakeswap/uikit'\nimport { usePool, useDeserializedPoolByVaultKey } from 'state/pools/hooks'\nimport { VaultKey } from 'state/types'\n\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\nimport StakedCell from './Cells/StakedCell'\nimport ExpandRow from './ExpandRow'\n\nexport const VaultPoolRow: React.FC<{ vaultKey: VaultKey; account: string; initialActivity?: boolean }> = memo(\n  ({ vaultKey, account, initialActivity }) => {\n    const { isXs, isSm, isMd, isLg, isXl, isXxl } = useMatchBreakpointsContext()\n    const isLargerScreen = isLg || isXl || isXxl\n    const isXLargerScreen = isXl || isXxl\n    const pool = useDeserializedPoolByVaultKey(vaultKey)\n\n    return (\n      <ExpandRow\n        initialActivity={initialActivity}\n        panel={\n          <ActionPanel account={account} pool={pool} expanded breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }} />\n        }\n      >\n        <NameCell pool={pool} />\n        {isXLargerScreen && <AutoEarningsCell pool={pool} account={account} />}\n        {isXLargerScreen ? <StakedCell pool={pool} account={account} /> : null}\n        <AutoAprCell pool={pool} />\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n      </ExpandRow>\n    )\n  },\n)\n\nconst PoolRow: React.FC<{ sousId: number; account: string; initialActivity?: boolean }> = ({\n  sousId,\n  account,\n  initialActivity,\n}) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isDesktop } = useMatchBreakpointsContext()\n  const isLargerScreen = isLg || isXl || isXxl\n  const { pool } = usePool(sousId)\n\n  return (\n    <ExpandRow\n      initialActivity={initialActivity}\n      panel={\n        <ActionPanel account={account} pool={pool} expanded breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }} />\n      }\n    >\n      <NameCell pool={pool} />\n      <EarningsCell pool={pool} account={account} />\n      {isLargerScreen && <TotalStakedCell pool={pool} />}\n      <AprCell pool={pool} />\n      {isDesktop && <EndsInCell pool={pool} />}\n    </ExpandRow>\n  )\n}\n\nexport default memo(PoolRow)\n","import { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow, { VaultPoolRow } from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  account: string\n  urlSearch?: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  scroll-margin-top: 64px;\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, account, urlSearch }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n\n  const scrollToTop = (): void => {\n    window.scrollTo({\n      top: tableWrapperEl.current.offsetTop,\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) =>\n          pool.vaultKey ? (\n            <VaultPoolRow\n              initialActivity={urlSearch.toLowerCase() === pool.earningToken.symbol?.toLowerCase()}\n              key={pool.vaultKey}\n              vaultKey={pool.vaultKey}\n              account={account}\n            />\n          ) : (\n            <PoolRow\n              initialActivity={urlSearch.toLowerCase() === pool.earningToken.symbol?.toLowerCase()}\n              key={pool.sousId}\n              sousId={pool.sousId}\n              account={account}\n            />\n          ),\n        )}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { BigNumber as EthersBigNumber } from '@ethersproject/bignumber'\nimport { formatUnits } from '@ethersproject/units'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Link } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { usePoolsPageFetch, usePoolsWithVault } from 'state/pools/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool, DeserializedPoolVault, VaultKey, DeserializedPoolLockedVault } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport { useRouter } from 'next/router'\nimport Loading from 'components/Loading'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { BSC_BLOCK_TIME } from 'config'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst FinishedTextContainer = styled(Flex)`\n  padding-bottom: 32px;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst FinishedTextLink = styled(Link)`\n  font-weight: 400;\n  white-space: nowrap;\n  text-decoration: underline;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst sortPools = (account: string, sortOption: string, pools: DeserializedPool[], poolsToSort: DeserializedPool[]) => {\n  switch (sortOption) {\n    case 'apr':\n      // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n      return orderBy(poolsToSort, (pool: DeserializedPool) => (pool.apr ? pool.apr : 0), 'desc')\n    case 'earned':\n      return orderBy(\n        poolsToSort,\n        (pool: DeserializedPool) => {\n          if (!pool.userData || !pool.earningTokenPrice) {\n            return 0\n          }\n\n          if (pool.vaultKey) {\n            const { userData, pricePerFullShare } = pool as DeserializedPoolVault\n            if (!userData || !userData.userShares) {\n              return 0\n            }\n            return getCakeVaultEarnings(\n              account,\n              userData.cakeAtLastUserAction,\n              userData.userShares,\n              pricePerFullShare,\n              pool.earningTokenPrice,\n              pool.vaultKey === VaultKey.CakeVault\n                ? (pool as DeserializedPoolLockedVault).userData.currentPerformanceFee.plus(\n                    (pool as DeserializedPoolLockedVault).userData.currentOverdueFee,\n                  )\n                : null,\n            ).autoUsdToDisplay\n          }\n          return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n        },\n        'desc',\n      )\n    case 'totalStaked': {\n      return orderBy(\n        poolsToSort,\n        (pool: DeserializedPool) => {\n          let totalStaked = Number.NaN\n          if (pool.vaultKey) {\n            const vault = pool as DeserializedPoolVault\n            if (pool.stakingTokenPrice && vault.totalCakeInVault.isFinite()) {\n              totalStaked =\n                +formatUnits(EthersBigNumber.from(vault.totalCakeInVault.toString()), pool.stakingToken.decimals) *\n                pool.stakingTokenPrice\n            }\n          } else if (pool.totalStaked?.isFinite() && pool.stakingTokenPrice) {\n            totalStaked =\n              +formatUnits(EthersBigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals) *\n              pool.stakingTokenPrice\n          }\n          return Number.isFinite(totalStaked) ? totalStaked : 0\n        },\n        'desc',\n      )\n    }\n    case 'latest':\n      return orderBy(poolsToSort, (pool: DeserializedPool) => Number(pool.sousId), 'desc')\n    default:\n      return poolsToSort\n  }\n}\n\nconst POOL_START_BLOCK_THRESHOLD = (60 / BSC_BLOCK_TIME) * 4\n\nconst Pools: React.FC = () => {\n  const router = useRouter()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools, userDataLoaded } = usePoolsWithVault()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const normalizedUrlSearch = useMemo(\n    () => (typeof router?.query?.search === 'string' ? router.query.search : ''),\n    [router.query],\n  )\n  const [_searchQuery, setSearchQuery] = useState('')\n  const searchQuery = normalizedUrlSearch && !_searchQuery ? normalizedUrlSearch : _searchQuery\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const initialBlock = useInitialBlock()\n\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const openPoolsWithStartBlockFilter = useMemo(\n    () =>\n      openPools.filter((pool) =>\n        initialBlock > 0 && pool.startBlock\n          ? Number(pool.startBlock) < initialBlock + POOL_START_BLOCK_THRESHOLD\n          : true,\n      ),\n    [initialBlock, openPools],\n  )\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.vaultKey) {\n          const vault = pool as DeserializedPoolVault\n          return vault.userData.userShares.gt(0)\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useCallback(() => {\n    return openPoolsWithStartBlockFilter.filter((pool) => {\n      if (pool.vaultKey) {\n        const vault = pool as DeserializedPoolVault\n        return vault.userData.userShares.gt(0)\n      }\n      return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n    })\n  }, [openPoolsWithStartBlockFilter])\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePoolsPageFetch()\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n  const showFinishedPools = router.pathname.includes('history')\n\n  const handleChangeSearchQuery = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => setSearchQuery(event.target.value),\n    [],\n  )\n\n  const handleSortOptionChange = useCallback((option: OptionProps) => setSortOption(option.value), [])\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools() : openPoolsWithStartBlockFilter\n  }\n\n  chosenPools = useMemo(() => {\n    const sortedPools = sortPools(account, sortOption, pools, chosenPools).slice(0, numberOfPoolsVisible)\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      return sortedPools.filter((pool) => latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery))\n    }\n    return sortedPools\n  }, [account, sortOption, pools, chosenPools, numberOfPoolsVisible, searchQuery])\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.vaultKey ? (\n          <CakeVaultCard key={pool.vaultKey} pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable urlSearch={normalizedUrlSearch} pools={chosenPools} account={account} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                    {\n                      label: t('Latest'),\n                      value: 'latest',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput initialValue={searchQuery} onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <FinishedTextContainer>\n            <Text fontSize={['16px', null, '20px']} color=\"failure\" pr=\"4px\">\n              {t('Looking for v1 OVE syrup pools?')}\n            </Text>\n            <FinishedTextLink href=\"/migration\" fontSize={['16px', null, '20px']} color=\"failure\">\n              {t('Go to migration page')}.\n            </FinishedTextLink>\n          </FinishedTextContainer>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        {/* <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[9855],{\n\n/***/ 43174:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar createAggregator = __webpack_require__(55189);\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n\n\n/***/ }),\n\n/***/ 18842:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(26042);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(69396);\n/* harmony import */ var _swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(99534);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7297);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85893);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87379);\n\n\n\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)([\n        \"\\n  z-index: \",\n        \";\\n  background-color: \",\n        \";\\n  color: white;\\n  margin: 0;\\n  padding: 8px 0;\\n  position: absolute;\\n  right: \",\n        \";\\n  top: 0;\\n  text-align: center;\\n  transform: \",\n        \";\\n  transform-origin: top left;\\n  width: 96px;\\n\\n  &:before,\\n  &:after {\\n    background-color: \",\n        ';\\n    content: \"\";\\n    height: 100%;\\n    margin: 0 -1px; /* Removes tiny gap */\\n    position: absolute;\\n    top: 0;\\n    width: 100%;\\n  }\\n\\n  &:before {\\n    right: 100%;\\n  }\\n\\n  &:after {\\n    left: 100%;\\n  }\\n\\n  & > div {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    width: 96px;\\n  }\\n'\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nvar StyledCardRibbon = styled_components__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-6cfbbab7-0\"\n}).withConfig({\n    componentId: \"sc-979ef4ea-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.zIndices.ribbon;\n}, function(param) {\n    var _variantColor = param.variantColor, variantColor = _variantColor === void 0 ? \"secondary\" : _variantColor, theme = param.theme;\n    return theme.colors[variantColor];\n}, function(param) {\n    var ribbonPosition = param.ribbonPosition;\n    return ribbonPosition === \"right\" ? 0 : \"auto\";\n}, function(param) {\n    var ribbonPosition = param.ribbonPosition;\n    return ribbonPosition === \"right\" ? \"translateX(30%) translateY(0%) rotate(45deg)\" : \"translateX(0%) translateY(200%) rotate(-45deg)\";\n}, function(param) {\n    var _variantColor = param.variantColor, variantColor = _variantColor === void 0 ? \"secondary\" : _variantColor, theme = param.theme;\n    return theme.colors[variantColor];\n});\nvar CardRibbon = function CardRibbon(_param) {\n    var variantColor = _param.variantColor, text = _param.text, ribbonPosition = _param.ribbonPosition, props = (0,_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(_param, [\n        \"variantColor\",\n        \"text\",\n        \"ribbonPosition\"\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledCardRibbon, (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z)({\n        variantColor: variantColor,\n        ribbonPosition: ribbonPosition\n    }, props), {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n            title: text,\n            children: text\n        })\n    }));\n};\nCardRibbon.defaultProps = {\n    // eslint-disable-next-line react/default-props-match-prop-types\n    ribbonPosition: \"right\"\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CardRibbon);\n\n\n/***/ }),\n\n/***/ 99855:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ views_Pools; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(7297);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(87379);\n// EXTERNAL MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(2593);\n// EXTERNAL MODULE: ./node_modules/@ethersproject/units/lib.esm/index.js + 1 modules\nvar lib_esm = __webpack_require__(61744);\n// EXTERNAL MODULE: ./node_modules/bignumber.js/bignumber.js\nvar bignumber_js_bignumber = __webpack_require__(44431);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber_js_bignumber);\n// EXTERNAL MODULE: ./node_modules/@web3-react/core/dist/core.esm.js\nvar core_esm = __webpack_require__(77044);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(97114);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(4318);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Link/Link.tsx\nvar Link = __webpack_require__(80421);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Heading/Heading.tsx + 1 modules\nvar Heading = __webpack_require__(59750);\n// EXTERNAL MODULE: ./node_modules/lodash/orderBy.js\nvar orderBy = __webpack_require__(75472);\nvar orderBy_default = /*#__PURE__*/__webpack_require__.n(orderBy);\n// EXTERNAL MODULE: ./node_modules/lodash/partition.js\nvar partition = __webpack_require__(43174);\nvar partition_default = /*#__PURE__*/__webpack_require__.n(partition);\n// EXTERNAL MODULE: ./src/contexts/Localization/index.tsx + 3 modules\nvar Localization = __webpack_require__(99150);\n// EXTERNAL MODULE: ./src/hooks/useIntersectionObserver.ts\nvar useIntersectionObserver = __webpack_require__(76538);\n// EXTERNAL MODULE: ./src/state/pools/hooks.ts + 1 modules\nvar hooks = __webpack_require__(23637);\n// EXTERNAL MODULE: ./src/utils/latinise.ts\nvar latinise = __webpack_require__(11438);\n// EXTERNAL MODULE: ./src/components/Layout/Flex.tsx\nvar Layout_Flex = __webpack_require__(40508);\n// EXTERNAL MODULE: ./src/components/Layout/Page.tsx + 1 modules\nvar Page = __webpack_require__(83559);\n// EXTERNAL MODULE: ./src/components/PageHeader/index.ts + 1 modules\nvar PageHeader = __webpack_require__(44482);\n// EXTERNAL MODULE: ./src/components/SearchInput/index.ts + 1 modules\nvar SearchInput = __webpack_require__(14450);\n// EXTERNAL MODULE: ./src/components/Select/Select.tsx\nvar Select = __webpack_require__(37370);\n// EXTERNAL MODULE: ./src/state/types.ts\nvar types = __webpack_require__(45101);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar user_hooks = __webpack_require__(68605);\n// EXTERNAL MODULE: ./src/state/user/actions.ts\nvar actions = __webpack_require__(46245);\n// EXTERNAL MODULE: ./node_modules/next/router.js\nvar next_router = __webpack_require__(11163);\n// EXTERNAL MODULE: ./src/components/Loading.tsx\nvar Loading = __webpack_require__(8080);\n// EXTERNAL MODULE: ./src/state/block/hooks.ts\nvar block_hooks = __webpack_require__(37063);\n// EXTERNAL MODULE: ./src/config/index.ts + 1 modules\nvar config = __webpack_require__(37519);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/CardRibbon.tsx\nvar CardRibbon = __webpack_require__(18842);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/CardBody.tsx\nvar CardBody = __webpack_require__(23774);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(30621);\n// EXTERNAL MODULE: ./src/utils/bigNumber.ts\nvar bigNumber = __webpack_require__(35128);\n// EXTERNAL MODULE: ./src/components/TokenImage/index.tsx\nvar TokenImage = __webpack_require__(95239);\n// EXTERNAL MODULE: ./packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(36544);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/TooltipText.tsx\nvar TooltipText = __webpack_require__(17634);\n// EXTERNAL MODULE: ./src/views/Pools/components/Apr.tsx\nvar Apr = __webpack_require__(67802);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/AprRow.tsx\n\n\n\n\nvar AprRow = function(param) {\n    var pool = param.pool, stakedBalance = param.stakedBalance, _performanceFee = param.performanceFee, performanceFee = _performanceFee === void 0 ? 0 : _performanceFee, _showIcon = param.showIcon, showIcon = _showIcon === void 0 ? true : _showIcon;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var vaultKey = pool.vaultKey;\n    var tooltipContent = vaultKey ? t(\"APY includes compounding, APR doesn\\u2019t. This pool\\u2019s OVE is compounded automatically, so we show APY.\") : t(\"This pool\\u2019s rewards aren\\u2019t compounded automatically, so we show APR\");\n    var ref = (0,useTooltip/* default */.Z)(tooltipContent, {\n        placement: \"bottom-start\"\n    }), targetRef = ref.targetRef, tooltip = ref.tooltip, tooltipVisible = ref.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                ref: targetRef,\n                children: vaultKey ? \"\".concat(t(\"APY\"), \":\") : \"\".concat(t(\"APR\"), \":\")\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Apr/* default */.Z, {\n                pool: pool,\n                stakedBalance: stakedBalance,\n                performanceFee: performanceFee,\n                showIcon: showIcon\n            })\n        ]\n    });\n};\n/* harmony default export */ var PoolCard_AprRow = (AprRow);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/StyledCard.tsx\nvar StyledCard = __webpack_require__(12020);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/CardFooter/index.tsx\nvar CardFooter = __webpack_require__(73322);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/PoolCardHeader.tsx\nvar PoolCardHeader = __webpack_require__(68624);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(44850);\n// EXTERNAL MODULE: ./src/config/constants/types.ts\nvar constants_types = __webpack_require__(97971);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useProfileRequirement.ts\nvar useProfileRequirement = __webpack_require__(67532);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Skeleton/Skeleton.tsx + 1 modules\nvar Skeleton = __webpack_require__(84091);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(96293);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/AutoRenew.tsx\nvar AutoRenew = __webpack_require__(19729);\n// EXTERNAL MODULE: ./src/hooks/useContract.ts + 1 modules\nvar useContract = __webpack_require__(5039);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useApprove.tsx + 1 modules\nvar useApprove = __webpack_require__(51029);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx\n\n\n\n\n\nvar ApprovalAction = function(param) {\n    var pool = param.pool, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var stakingTokenContract = (0,useContract/* useERC20 */.X_)(stakingToken.address || \"\");\n    var ref = (0,useApprove/* useApprovePool */.iB)(stakingTokenContract, sousId, earningToken.symbol), handleApprove = ref.handleApprove, pendingTx = ref.pendingTx;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n        children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            isLoading: pendingTx,\n            endIcon: pendingTx ? /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoRenew/* default */.Z, {\n                spin: true,\n                color: \"currentColor\"\n            }) : null,\n            disabled: pendingTx,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: t(\"Enable\")\n        })\n    });\n};\n/* harmony default export */ var CardActions_ApprovalAction = (ApprovalAction);\n\n// EXTERNAL MODULE: ./packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(65528);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Button/IconButton.tsx\nvar IconButton = __webpack_require__(5527);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Minus.tsx\nvar Minus = __webpack_require__(72943);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Add.tsx\nvar Add = __webpack_require__(543);\n// EXTERNAL MODULE: ./src/utils/formatBalance.ts\nvar formatBalance = __webpack_require__(65044);\n// EXTERNAL MODULE: ./src/components/Balance.tsx\nvar Balance = __webpack_require__(20922);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx\nvar NotEnoughTokensModal = __webpack_require__(67576);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/Modals/StakeModal.tsx + 2 modules\nvar StakeModal = __webpack_require__(29458);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx\n\n\n\n\n\n\n\n\nvar StakeAction = function(param) {\n    var pool = param.pool, stakingTokenBalance = param.stakingTokenBalance, stakedBalance = param.stakedBalance, isBnbPool = param.isBnbPool, isStaked = param.isStaked, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading;\n    var stakingToken = pool.stakingToken, stakingTokenPrice = pool.stakingTokenPrice, stakingLimit = pool.stakingLimit, isFinished = pool.isFinished, userData = pool.userData;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var stakedTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance, stakingToken.decimals);\n    var stakedTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(NotEnoughTokensModal/* default */.Z, {\n        tokenSymbol: stakingToken.symbol\n    })), 1), onPresentTokenRequired = ref[0];\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(StakeModal/* default */.Z, {\n        isBnbPool: isBnbPool,\n        pool: pool,\n        stakingTokenBalance: stakingTokenBalance,\n        stakingTokenPrice: stakingTokenPrice\n    })), 1), onPresentStake = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(StakeModal/* default */.Z, {\n        stakingTokenBalance: stakingTokenBalance,\n        isBnbPool: isBnbPool,\n        pool: pool,\n        stakingTokenPrice: stakingTokenPrice,\n        isRemovingStake: true\n    })), 1), onPresentUnstake = ref2[0];\n    var ref3 = (0,useTooltip/* default */.Z)(t(\"You\\u2019ve already staked the maximum amount you can stake in this pool!\"), {\n        placement: \"bottom\"\n    }), targetRef = ref3.targetRef, tooltip = ref3.tooltip, tooltipVisible = ref3.tooltipVisible;\n    var reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit);\n    var renderStakeAction = function() {\n        return isStaked ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                    flexDirection: \"column\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                bold: true,\n                                fontSize: \"20px\",\n                                decimals: 3,\n                                value: stakedTokenBalance\n                            }),\n                            stakingTokenPrice !== 0 && /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    decimals: 2,\n                                    value: stakedTokenDollarBalance,\n                                    prefix: \"~\",\n                                    unit: \" USD\"\n                                })\n                            })\n                        ]\n                    })\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                            variant: \"secondary\",\n                            onClick: onPresentUnstake,\n                            mr: \"6px\",\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Minus/* default */.Z, {\n                                color: \"primary\",\n                                width: \"24px\"\n                            })\n                        }),\n                        reachStakingLimit ? /*#__PURE__*/ (0,jsx_runtime.jsx)(\"span\", {\n                            ref: targetRef,\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                                variant: \"secondary\",\n                                disabled: true,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                    color: \"textDisabled\",\n                                    width: \"24px\",\n                                    height: \"24px\"\n                                })\n                            })\n                        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                            variant: \"secondary\",\n                            onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n                            disabled: isFinished,\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                color: \"primary\",\n                                width: \"24px\",\n                                height: \"24px\"\n                            })\n                        })\n                    ]\n                }),\n                tooltipVisible && tooltip\n            ]\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            disabled: isFinished,\n            onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n            children: t(\"Stake\")\n        });\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        }) : renderStakeAction()\n    });\n};\n/* harmony default export */ var StakeActions = (StakeAction);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/Modals/CollectModal.tsx + 1 modules\nvar CollectModal = __webpack_require__(68971);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx\n\n\n\n\n\n\n\nvar HarvestActions = function(param) {\n    var earnings = param.earnings, earningToken = param.earningToken, sousId = param.sousId, isBnbPool = param.isBnbPool, earningTokenPrice = param.earningTokenPrice, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var earningTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings, earningToken.decimals);\n    var formattedBalance = (0,formatBalance/* formatNumber */.uf)(earningTokenBalance, 3, 3);\n    var earningTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n    var fullBalance = (0,formatBalance/* getFullDisplayBalance */.NJ)(earnings, earningToken.decimals);\n    var hasEarnings = earnings.toNumber() > 0;\n    var isCompoundPool = sousId === 0;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(CollectModal/* default */.Z, {\n        formattedBalance: formattedBalance,\n        fullBalance: fullBalance,\n        earningToken: earningToken,\n        earningsDollarValue: earningTokenDollarBalance,\n        sousId: sousId,\n        isBnbPool: isBnbPool,\n        isCompoundPool: isCompoundPool\n    })), 1), onPresentCollect = ref[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: \"16px\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                flexDirection: \"column\",\n                children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"48px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: hasEarnings ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                bold: true,\n                                fontSize: \"20px\",\n                                decimals: 5,\n                                value: earningTokenBalance\n                            }),\n                            earningTokenPrice > 0 && /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                display: \"inline\",\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                decimals: 2,\n                                prefix: \"~\",\n                                value: earningTokenDollarBalance,\n                                unit: \" USD\"\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                color: \"textDisabled\",\n                                children: \"0\"\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                color: \"textDisabled\",\n                                children: \"0 USD\"\n                            })\n                        ]\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                disabled: !hasEarnings,\n                onClick: onPresentCollect,\n                children: isCompoundPool ? t(\"Collect\") : t(\"Harvest\")\n            })\n        ]\n    });\n};\n/* harmony default export */ var CardActions_HarvestActions = (HarvestActions);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/ProfileRequirementWarning.tsx\nvar ProfileRequirementWarning = __webpack_require__(95506);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/index.tsx\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: inline;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nvar InlineText = (0,styled_components_browser_esm/* default */.ZP)(Text/* default */.Z).withConfig({\n    componentId: \"sc-b5cd1ad6-0\"\n})(_templateObject());\nvar CardActions = function(param) {\n    var pool = param.pool, stakedBalance = param.stakedBalance;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken, poolCategory = pool.poolCategory, userData = pool.userData, earningTokenPrice = pool.earningTokenPrice, profileRequirement = pool.profileRequirement;\n    // Pools using native BNB behave differently than pools using a token\n    var isBnbPool = poolCategory === constants_types/* PoolCategory.BINANCE */.jh.BINANCE;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var allowance = (userData === null || userData === void 0 ? void 0 : userData.allowance) ? new (bignumber_default())(userData.allowance) : bigNumber/* BIG_ZERO */.HW;\n    var stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new (bignumber_default())(userData.stakingTokenBalance) : bigNumber/* BIG_ZERO */.HW;\n    var earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new (bignumber_default())(userData.pendingReward) : bigNumber/* BIG_ZERO */.HW;\n    var needsApproval = !allowance.gt(0) && !isBnbPool;\n    var isStaked = stakedBalance.gt(0);\n    var isLoading = !userData;\n    var ref = (0,useProfileRequirement/* useProfileRequirement */.f)(profileRequirement), notMeetRequired = ref.notMeetRequired, notMeetThreshold = ref.notMeetThreshold;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n            flexDirection: \"column\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            display: \"inline\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                                    color: \"secondary\",\n                                    textTransform: \"uppercase\",\n                                    bold: true,\n                                    fontSize: \"12px\",\n                                    children: \"\".concat(earningToken.symbol, \" \")\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                                    color: \"textSubtle\",\n                                    textTransform: \"uppercase\",\n                                    bold: true,\n                                    fontSize: \"12px\",\n                                    children: t(\"Earned\")\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(CardActions_HarvestActions, {\n                            earnings: earnings,\n                            earningToken: earningToken,\n                            sousId: sousId,\n                            earningTokenPrice: earningTokenPrice,\n                            isBnbPool: isBnbPool,\n                            isLoading: isLoading\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                    display: \"inline\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(InlineText, {\n                            color: isStaked ? \"secondary\" : \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: [\n                                isStaked ? stakingToken.symbol : t(\"Stake\"),\n                                \" \"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                            color: isStaked ? \"textSubtle\" : \"secondary\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: isStaked ? t(\"Staked\") : \"\".concat(stakingToken.symbol)\n                        })\n                    ]\n                }),\n                notMeetRequired || notMeetThreshold ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ProfileRequirementWarning/* ProfileRequirementWarning */.Q, {\n                    profileRequirement: profileRequirement\n                }) : needsApproval ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CardActions_ApprovalAction, {\n                    pool: pool,\n                    isLoading: isLoading\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(StakeActions, {\n                    isLoading: isLoading,\n                    pool: pool,\n                    stakingTokenBalance: stakingTokenBalance,\n                    stakedBalance: stakedBalance,\n                    isBnbPool: isBnbPool,\n                    isStaked: isStaked\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var PoolCard_CardActions = (CardActions);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\nvar PoolCard = function(param) {\n    var pool = param.pool, account = param.account;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken, isFinished = pool.isFinished, userData = pool.userData;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new (bignumber_default())(userData.stakedBalance) : bigNumber/* BIG_ZERO */.HW;\n    var accountHasStakedBalance = stakedBalance.gt(0);\n    var isCakePool = earningToken.symbol === \"OVE\" && stakingToken.symbol === \"OVE\";\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledCard/* StyledCard */.r, {\n        isFinished: isFinished && sousId !== 0,\n        ribbon: isFinished && /*#__PURE__*/ (0,jsx_runtime.jsx)(CardRibbon/* default */.Z, {\n            variantColor: \"textDisabled\",\n            text: t(\"Finished\")\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolCardHeader/* default */.Z, {\n                isStaking: accountHasStakedBalance,\n                isFinished: isFinished && sousId !== 0,\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCardHeader/* PoolCardHeaderTitle */.e, {\n                        title: isCakePool ? t(\"Manual\") : t(\"Earn %asset%\", {\n                            asset: earningToken.symbol\n                        }),\n                        subTitle: isCakePool ? t(\"Earn OVE, stake OVE\") : t(\"Stake OVE\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(TokenImage/* TokenPairImage */.q, {\n                        primaryToken: earningToken,\n                        secondaryToken: stakingToken,\n                        width: 64,\n                        height: 64\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(CardBody/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCard_AprRow, {\n                        pool: pool,\n                        stakedBalance: stakedBalance\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        mt: \"24px\",\n                        flexDirection: \"column\",\n                        children: account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCard_CardActions, {\n                            pool: pool,\n                            stakedBalance: stakedBalance\n                        }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mb: \"10px\",\n                                    textTransform: \"uppercase\",\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    bold: true,\n                                    children: t(\"Start earning\")\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {})\n                            ]\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardFooter/* default */.Z, {\n                pool: pool,\n                account: account\n            })\n        ]\n    });\n};\n/* harmony default export */ var components_PoolCard = (PoolCard);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/CakeVaultCard/index.tsx + 10 modules\nvar CakeVaultCard = __webpack_require__(43444);\n// EXTERNAL MODULE: ./src/components/NextLink.tsx\nvar NextLink = __webpack_require__(53629);\n// EXTERNAL MODULE: ./src/components/ToggleView/ToggleView.tsx\nvar ToggleView = __webpack_require__(31455);\n// EXTERNAL MODULE: ./packages/uikit/src/components/ButtonMenu/ButtonMenu.tsx\nvar ButtonMenu = __webpack_require__(50156);\n// EXTERNAL MODULE: ./packages/uikit/src/components/ButtonMenu/ButtonMenuItem.tsx\nvar ButtonMenuItem = __webpack_require__(39320);\n// EXTERNAL MODULE: ./packages/uikit/src/components/NotificationDot/NotificationDot.tsx\nvar NotificationDot = __webpack_require__(45341);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Toggle/Toggle.tsx + 2 modules\nvar Toggle = __webpack_require__(20508);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolTabButtons.tsx\n\nfunction PoolTabButtons_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  align-items: center;\\n  margin-left: 10px;\\n\\n  \",\n        \" {\\n    margin-left: 8px;\\n  }\\n\"\n    ]);\n    PoolTabButtons_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n\\n  > div {\\n    padding: 8px 0px;\\n  }\\n\\n  \",\n        \" {\\n    justify-content: flex-start;\\n    width: auto;\\n\\n    > div {\\n      padding: 0;\\n    }\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\\n  a {\\n    padding-left: 12px;\\n    padding-right: 12px;\\n  }\\n\\n  \",\n        \" {\\n    margin-left: 16px;\\n  }\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar ToggleWrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-1497ab5-0\"\n})(PoolTabButtons_templateObject(), Text/* default */.Z);\nvar ViewControls = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-1497ab5-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar Wrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-1497ab5-2\"\n})(_templateObject2(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar PoolTabButtons = function(param) {\n    var stakedOnly = param.stakedOnly, setStakedOnly = param.setStakedOnly, hasStakeInFinishedPools = param.hasStakeInFinishedPools, viewMode = param.viewMode, setViewMode = param.setViewMode;\n    var router = (0,next_router.useRouter)();\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var isExact = router.asPath === \"/pools\" || router.asPath === \"/_mp/pools\";\n    var viewModeToggle = /*#__PURE__*/ (0,jsx_runtime.jsx)(ToggleView/* default */.Z, {\n        idPrefix: \"clickPool\",\n        viewMode: viewMode,\n        onToggle: setViewMode\n    });\n    var liveOrFinishedSwitch = /*#__PURE__*/ (0,jsx_runtime.jsx)(Wrapper, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(ButtonMenu/* default */.Z, {\n            activeIndex: isExact ? 0 : 1,\n            scale: \"sm\",\n            variant: \"subtle\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(ButtonMenuItem/* default */.Z, {\n                    as: NextLink/* NextLinkFromReactRouter */.a,\n                    to: \"/pools\",\n                    replace: true,\n                    children: t(\"Live\")\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(NotificationDot/* default */.Z, {\n                    show: hasStakeInFinishedPools,\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ButtonMenuItem/* default */.Z, {\n                        id: \"finished-pools-button\",\n                        as: NextLink/* NextLinkFromReactRouter */.a,\n                        to: \"/pools/history\",\n                        replace: true,\n                        children: t(\"Finished\")\n                    })\n                })\n            ]\n        })\n    });\n    var stakedOnlySwitch = /*#__PURE__*/ (0,jsx_runtime.jsxs)(ToggleWrapper, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Toggle/* default */.Z, {\n                checked: stakedOnly,\n                onChange: function() {\n                    return setStakedOnly(!stakedOnly);\n                },\n                scale: \"sm\"\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    \" \",\n                    t(\"Staked only\")\n                ]\n            })\n        ]\n    });\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(ViewControls, {\n        children: [\n            viewModeToggle,\n            stakedOnlySwitch,\n            liveOrFinishedSwitch\n        ]\n    });\n};\n/* harmony default export */ var components_PoolTabButtons = (PoolTabButtons);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ChevronUp.tsx\nvar ChevronUp = __webpack_require__(40447);\n// EXTERNAL MODULE: ./packages/uikit/src/contexts/MatchBreakpoints/useMatchBreakpointsContext.ts\nvar useMatchBreakpointsContext = __webpack_require__(98946);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/NameCell.tsx\nvar NameCell = __webpack_require__(14405);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/BaseCell.tsx\nvar BaseCell = __webpack_require__(70709);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx\n\n\nfunction EarningsCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 4.5;\\n  \",\n        \" {\\n    flex: 1 0 120px;\\n  }\\n\"\n    ]);\n    EarningsCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-3267914a-0\"\n})(EarningsCell_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar EarningsCell = function(param) {\n    var pool = param.pool, account = param.account;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var isMobile = (0,useMatchBreakpointsContext/* default */.Z)().isMobile;\n    var sousId = pool.sousId, earningToken = pool.earningToken, poolCategory = pool.poolCategory, userData = pool.userData, earningTokenPrice = pool.earningTokenPrice;\n    var isManualCakePool = sousId === 0;\n    var earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new (bignumber_default())(userData.pendingReward) : bigNumber/* BIG_ZERO */.HW;\n    var earningTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings, earningToken.decimals);\n    var earningTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n    var hasEarnings = account && earnings.gt(0);\n    var fullBalance = (0,formatBalance/* getFullDisplayBalance */.NJ)(earnings, earningToken.decimals);\n    var formattedBalance = (0,formatBalance/* formatNumber */.uf)(earningTokenBalance, 3, 3);\n    var isBnbPool = poolCategory === constants_types/* PoolCategory.BINANCE */.jh.BINANCE;\n    var labelText = t(\"%asset% Earned\", {\n        asset: earningToken.symbol\n    });\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(CollectModal/* default */.Z, {\n        formattedBalance: formattedBalance,\n        fullBalance: fullBalance,\n        earningToken: earningToken,\n        earningsDollarValue: earningTokenDollarBalance,\n        sousId: sousId,\n        isBnbPool: isBnbPool,\n        isCompoundPool: isManualCakePool\n    })), 1), onPresentCollect = ref[0];\n    var handleEarningsClick = function(event) {\n        event.stopPropagation();\n        onPresentCollect();\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: labelText\n                }),\n                !pool.userDataLoaded && account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            mr: \"8px\",\n                            height: \"32px\",\n                            onClick: hasEarnings ? handleEarningsClick : undefined,\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    mt: \"4px\",\n                                    bold: !isMobile,\n                                    fontSize: isMobile ? \"14px\" : \"16px\",\n                                    color: hasEarnings ? \"primary\" : \"textDisabled\",\n                                    decimals: hasEarnings ? 5 : 1,\n                                    value: hasEarnings ? earningTokenBalance : 0\n                                }),\n                                hasEarnings ? /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                    children: earningTokenPrice > 0 && /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                        display: \"inline\",\n                                        fontSize: \"12px\",\n                                        color: \"textSubtle\",\n                                        decimals: 2,\n                                        prefix: \"~\",\n                                        value: earningTokenDollarBalance,\n                                        unit: \" USD\"\n                                    })\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mt: \"4px\",\n                                    fontSize: \"12px\",\n                                    color: \"textDisabled\",\n                                    children: \"0 USD\"\n                                })\n                            ]\n                        })\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_EarningsCell = (EarningsCell);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AprCell.tsx\nvar AprCell = __webpack_require__(81401);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx\n\nfunction TotalStakedCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 2 0 100px;\\n\"\n    ]);\n    TotalStakedCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\nvar TotalStakedCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-f8a117c9-0\"\n})(TotalStakedCell_templateObject());\nvar TotalStakedCell = function(param) {\n    var pool = param.pool;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var stakingToken = pool.stakingToken, totalStaked = pool.totalStaked, vaultKey = pool.vaultKey;\n    var totalCakeInVault = (0,hooks/* useVaultPoolByKey */.eB)(vaultKey).totalCakeInVault;\n    var totalStakedBalance = (0,react.useMemo)(function() {\n        if (vaultKey) {\n            return (0,formatBalance/* getBalanceNumber */.mW)(totalCakeInVault, stakingToken.decimals);\n        }\n        return (0,formatBalance/* getBalanceNumber */.mW)(totalStaked, stakingToken.decimals);\n    }, [\n        vaultKey,\n        totalCakeInVault,\n        totalStaked,\n        stakingToken.decimals\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(TotalStakedCell_StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: t(\"Total staked\")\n                }),\n                totalStaked && totalStaked.gte(0) ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                    height: \"20px\",\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                        fontSize: \"16px\",\n                        value: totalStakedBalance,\n                        decimals: 0,\n                        unit: \" OVE\"\n                    })\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_TotalStakedCell = (TotalStakedCell);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Timer.tsx\nvar Timer = __webpack_require__(22491);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(93293);\n// EXTERNAL MODULE: ./src/views/Pools/helpers.tsx\nvar helpers = __webpack_require__(53136);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/EndsInCell.tsx\n\nfunction EndsInCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 2 0 100px;\\n\"\n    ]);\n    EndsInCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\nvar EndsInCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-4c423023-0\"\n})(EndsInCell_templateObject());\nvar EndsInCell = function(param) {\n    var pool = param.pool;\n    var sousId = pool.sousId, totalStaked = pool.totalStaked, startBlock = pool.startBlock, endBlock = pool.endBlock, isFinished = pool.isFinished;\n    var currentBlock = (0,block_hooks/* useCurrentBlock */.je)();\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = (0,helpers/* getPoolBlockInfo */.zy)(pool, currentBlock), shouldShowBlockCountdown = ref.shouldShowBlockCountdown, blocksUntilStart = ref.blocksUntilStart, blocksRemaining = ref.blocksRemaining, hasPoolStarted = ref.hasPoolStarted, blocksToDisplay = ref.blocksToDisplay;\n    var isCakePool = sousId === 0;\n    var renderBlocks = shouldShowBlockCountdown ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        alignItems: \"center\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                flex: \"1.3\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                        fontSize: \"16px\",\n                        value: blocksToDisplay,\n                        decimals: 0\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        ml: \"4px\",\n                        textTransform: \"lowercase\",\n                        children: t(\"Blocks\")\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                flex: \"1\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Link/* default */.Z, {\n                    external: true,\n                    href: (0,utils/* getBscScanLink */.s6)(hasPoolStarted ? endBlock : startBlock, \"countdown\"),\n                    onClick: function(e) {\n                        return e.stopPropagation();\n                    },\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Timer/* default */.Z, {\n                        ml: \"4px\"\n                    })\n                })\n            })\n        ]\n    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n        children: \"-\"\n    });\n    // A bit hacky way to determine if public data is loading relying on totalStaked\n    // Opted to go for this since we don't really need a separate publicDataLoaded flag\n    // anywhere else\n    var isLoadingBlockData = !currentBlock || !blocksRemaining && !blocksUntilStart;\n    var isLoadingPublicData = hasPoolStarted ? !totalStaked.gt(0) || isLoadingBlockData : isLoadingBlockData;\n    var showLoading = isLoadingPublicData && !isCakePool && !isFinished;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(EndsInCell_StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: hasPoolStarted || !shouldShowBlockCountdown ? t(\"Ends in\") : t(\"Starts in\")\n                }),\n                showLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : renderBlocks\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_EndsInCell = (EndsInCell);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx + 4 modules\nvar ActionPanel = __webpack_require__(26347);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx\nvar AutoEarningsCell = __webpack_require__(39442);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx\nvar AutoAprCell = __webpack_require__(64030);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/StakedCell.tsx\n\nfunction StakedCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\"\n    ]);\n    StakedCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar StakedCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-3c2bdc91-0\"\n})(StakedCell_templateObject());\nvar StakedCell = function(param) {\n    var pool = param.pool, account = param.account;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var isMobile = (0,useMatchBreakpointsContext/* default */.Z)().isMobile;\n    // vault\n    var vaultData = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey);\n    var _userData = vaultData.userData, userShares = _userData.userShares, _balance = _userData.balance, cakeAsBigNumber = _balance.cakeAsBigNumber, cakeAsNumberBalance = _balance.cakeAsNumberBalance, isLoading = _userData.isLoading;\n    var hasSharesStaked = userShares.gt(0);\n    var isVaultWithShares = pool.vaultKey && hasSharesStaked;\n    // pool\n    var stakingTokenPrice = pool.stakingTokenPrice, stakingToken = pool.stakingToken, userData = pool.userData;\n    var stakedAutoDollarValue = (0,formatBalance/* getBalanceNumber */.mW)(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new (bignumber_default())(userData.stakedBalance) : bigNumber/* BIG_ZERO */.HW;\n    var stakedTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance, stakingToken.decimals);\n    var stakedTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var labelText = \"\".concat(pool.stakingToken.symbol, \" \").concat(pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && vaultData.userData.locked ? t(\"Locked\") : t(\"Staked\"));\n    var hasStaked = account && (stakedBalance.gt(0) || isVaultWithShares);\n    var userDataLoading = pool.vaultKey ? isLoading : !pool.userDataLoaded;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StakedCell_StyledCell, {\n        role: \"cell\",\n        flex: pool.vaultKey === types/* VaultKey.CakeFlexibleSideVault */.om.CakeFlexibleSideVault ? \"1 0 162px\" : pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && !hasStaked ? \"1 0 120px\" : \"2 0 100px\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: labelText\n                }),\n                userDataLoading && account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            mr: \"8px\",\n                            height: \"32px\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    mt: \"4px\",\n                                    bold: !isMobile,\n                                    fontSize: isMobile ? \"14px\" : \"16px\",\n                                    color: hasStaked ? \"primary\" : \"textDisabled\",\n                                    decimals: hasStaked ? 5 : 1,\n                                    value: hasStaked ? pool.vaultKey ? Number.isNaN(cakeAsNumberBalance) ? 0 : cakeAsNumberBalance : stakedTokenBalance : 0\n                                }),\n                                hasStaked ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    display: \"inline\",\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    decimals: 2,\n                                    prefix: \"~\",\n                                    value: pool.vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance,\n                                    unit: \" USD\"\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mt: \"4px\",\n                                    fontSize: \"12px\",\n                                    color: \"textDisabled\",\n                                    children: \"0 USD\"\n                                })\n                            ]\n                        })\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_StakedCell = (StakedCell);\n\n// EXTERNAL MODULE: ./src/hooks/useDelayedUnmount.ts\nvar useDelayedUnmount = __webpack_require__(30798);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx\nvar ExpandActionCell = __webpack_require__(52079);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/ExpandRow.tsx\n\nfunction ExpandRow_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  background-color: transparent;\\n  display: flex;\\n  cursor: pointer;\\n\"\n    ]);\n    ExpandRow_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\nvar StyledRow = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-485e2415-0\"\n})(ExpandRow_templateObject());\nvar ExpandRow = function(param) {\n    var children = param.children, panel = param.panel, initialActivity = param.initialActivity;\n    var hasSetInitialValue = (0,react.useRef)(false);\n    var ref = (0,useMatchBreakpointsContext/* default */.Z)(), isTablet = ref.isTablet, isDesktop = ref.isDesktop;\n    var ref1 = (0,react.useState)(initialActivity), expanded = ref1[0], setExpanded = ref1[1];\n    var shouldRenderActionPanel = (0,useDelayedUnmount/* default */.Z)(expanded, 300);\n    var toggleExpanded = (0,react.useCallback)(function() {\n        setExpanded(function(prev) {\n            return !prev;\n        });\n    }, []);\n    (0,react.useEffect)(function() {\n        if (initialActivity && hasSetInitialValue.current === false) {\n            setExpanded(initialActivity);\n            hasSetInitialValue.current = true;\n        }\n    }, [\n        initialActivity\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledRow, {\n                role: \"row\",\n                onClick: toggleExpanded,\n                children: [\n                    children,\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ExpandActionCell/* default */.Z, {\n                        expanded: expanded,\n                        isFullLayout: isTablet || isDesktop\n                    })\n                ]\n            }),\n            shouldRenderActionPanel && panel\n        ]\n    });\n};\n/* harmony default export */ var PoolsTable_ExpandRow = (/*#__PURE__*/(0,react.memo)(ExpandRow));\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/PoolRow.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar VaultPoolRow = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var vaultKey = param.vaultKey, account = param.account, initialActivity = param.initialActivity;\n    var ref = (0,useMatchBreakpointsContext/* default */.Z)(), isXs = ref.isXs, isSm = ref.isSm, isMd = ref.isMd, isLg = ref.isLg, isXl = ref.isXl, isXxl = ref.isXxl;\n    var isLargerScreen = isLg || isXl || isXxl;\n    var isXLargerScreen = isXl || isXxl;\n    var pool = (0,hooks/* useDeserializedPoolByVaultKey */.YX)(vaultKey);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolsTable_ExpandRow, {\n        initialActivity: initialActivity,\n        panel: /*#__PURE__*/ (0,jsx_runtime.jsx)(ActionPanel/* default */.Z, {\n            account: account,\n            pool: pool,\n            expanded: true,\n            breakpoints: {\n                isXs: isXs,\n                isSm: isSm,\n                isMd: isMd,\n                isLg: isLg,\n                isXl: isXl,\n                isXxl: isXxl\n            }\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(NameCell/* default */.Z, {\n                pool: pool\n            }),\n            isXLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoEarningsCell/* default */.Z, {\n                pool: pool,\n                account: account\n            }),\n            isXLargerScreen ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_StakedCell, {\n                pool: pool,\n                account: account\n            }) : null,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoAprCell/* default */.Z, {\n                pool: pool\n            }),\n            isLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_TotalStakedCell, {\n                pool: pool\n            })\n        ]\n    });\n});\nvar PoolRow = function(param) {\n    var sousId = param.sousId, account = param.account, initialActivity = param.initialActivity;\n    var ref = (0,useMatchBreakpointsContext/* default */.Z)(), isXs = ref.isXs, isSm = ref.isSm, isMd = ref.isMd, isLg = ref.isLg, isXl = ref.isXl, isXxl = ref.isXxl, isDesktop = ref.isDesktop;\n    var isLargerScreen = isLg || isXl || isXxl;\n    var pool = (0,hooks/* usePool */.AI)(sousId).pool;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolsTable_ExpandRow, {\n        initialActivity: initialActivity,\n        panel: /*#__PURE__*/ (0,jsx_runtime.jsx)(ActionPanel/* default */.Z, {\n            account: account,\n            pool: pool,\n            expanded: true,\n            breakpoints: {\n                isXs: isXs,\n                isSm: isSm,\n                isMd: isMd,\n                isLg: isLg,\n                isXl: isXl,\n                isXxl: isXxl\n            }\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(NameCell/* default */.Z, {\n                pool: pool\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_EarningsCell, {\n                pool: pool,\n                account: account\n            }),\n            isLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_TotalStakedCell, {\n                pool: pool\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(AprCell/* default */.Z, {\n                pool: pool\n            }),\n            isDesktop && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_EndsInCell, {\n                pool: pool\n            })\n        ]\n    });\n};\n/* harmony default export */ var PoolsTable_PoolRow = (/*#__PURE__*/(0,react.memo)(PoolRow));\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/PoolsTable.tsx\n\nfunction PoolsTable_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: \",\n        \";\\n  scroll-margin-top: 64px;\\n\\n  background-color: \",\n        \";\\n  > div:not(:last-child) {\\n    border-bottom: 2px solid \",\n        \";\\n  }\\n\"\n    ]);\n    PoolsTable_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction PoolsTable_templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: \",\n        \";\\n  background-color: \",\n        \";\\n  padding: 1px 1px 3px 1px;\\n  background-size: 400% 400%;\\n\"\n    ]);\n    PoolsTable_templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction PoolsTable_templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  justify-content: center;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n\"\n    ]);\n    PoolsTable_templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\nvar StyledTable = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-f5e8054-0\"\n})(PoolsTable_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n}, function(param) {\n    var theme = param.theme;\n    return theme.card.background;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.disabled;\n});\nvar StyledTableBorder = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-f5e8054-1\"\n})(PoolsTable_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n});\nvar ScrollButtonContainer = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-f5e8054-2\"\n})(PoolsTable_templateObject2());\nvar PoolsTable = function(param) {\n    var pools = param.pools, account = param.account, urlSearch = param.urlSearch;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var tableWrapperEl = (0,react.useRef)(null);\n    var scrollToTop = function() {\n        window.scrollTo({\n            top: tableWrapperEl.current.offsetTop,\n            behavior: \"smooth\"\n        });\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledTableBorder, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledTable, {\n            id: \"pools-table\",\n            role: \"table\",\n            ref: tableWrapperEl,\n            children: [\n                pools.map(function(pool) {\n                    var ref, ref1;\n                    return pool.vaultKey ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultPoolRow, {\n                        initialActivity: urlSearch.toLowerCase() === ((ref = pool.earningToken.symbol) === null || ref === void 0 ? void 0 : ref.toLowerCase()),\n                        vaultKey: pool.vaultKey,\n                        account: account\n                    }, pool.vaultKey) : /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolsTable_PoolRow, {\n                        initialActivity: urlSearch.toLowerCase() === ((ref1 = pool.earningToken.symbol) === null || ref1 === void 0 ? void 0 : ref1.toLowerCase()),\n                        sousId: pool.sousId,\n                        account: account\n                    }, pool.sousId);\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(ScrollButtonContainer, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Button/* default */.Z, {\n                        variant: \"text\",\n                        onClick: scrollToTop,\n                        children: [\n                            t(\"To Top\"),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(ChevronUp/* default */.Z, {\n                                color: \"primary\"\n                            })\n                        ]\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var PoolsTable_PoolsTable = (PoolsTable);\n\n;// CONCATENATED MODULE: ./src/views/Pools/index.tsx\n\n\nfunction Pools_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  justify-content: center;\\n\"\n    ]);\n    Pools_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction Pools_templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  position: relative;\\n\\n  justify-content: space-between;\\n  flex-direction: column;\\n  margin-bottom: 32px;\\n\\n  \",\n        \" {\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 16px 32px;\\n    margin-bottom: 0;\\n  }\\n\"\n    ]);\n    Pools_templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction Pools_templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 8px 0px;\\n\\n  \",\n        \" {\\n    width: auto;\\n    padding: 0;\\n  }\\n\"\n    ]);\n    Pools_templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  > \",\n        \" {\\n    font-size: 12px;\\n  }\\n\"\n    ]);\n    _templateObject3 = function _templateObject3() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject4() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  > div {\\n    flex: 1;\\n  }\\n\"\n    ]);\n    _templateObject4 = function _templateObject4() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject5() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  padding-bottom: 32px;\\n  flex-direction: column;\\n  \",\n        \" {\\n    flex-direction: row;\\n  }\\n\"\n    ]);\n    _templateObject5 = function _templateObject5() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject6() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  font-weight: 400;\\n  white-space: nowrap;\\n  text-decoration: underline;\\n\"\n    ]);\n    _templateObject6 = function _templateObject6() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CardLayout = (0,styled_components_browser_esm/* default */.ZP)(Layout_Flex/* default */.Z).withConfig({\n    componentId: \"sc-644ab6e0-0\"\n})(Pools_templateObject());\nvar PoolControls = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-644ab6e0-1\"\n})(Pools_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar FilterContainer = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-644ab6e0-2\"\n})(Pools_templateObject2(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar LabelWrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-644ab6e0-3\"\n})(_templateObject3(), Text/* default */.Z);\nvar ControlStretch = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-644ab6e0-4\"\n})(_templateObject4());\nvar FinishedTextContainer = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-644ab6e0-5\"\n})(_templateObject5(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.md;\n});\nvar FinishedTextLink = (0,styled_components_browser_esm/* default */.ZP)(Link/* default */.Z).withConfig({\n    componentId: \"sc-644ab6e0-6\"\n})(_templateObject6());\nvar NUMBER_OF_POOLS_VISIBLE = 12;\nvar sortPools = function(account, sortOption, pools, poolsToSort) {\n    switch(sortOption){\n        case \"apr\":\n            // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n            return orderBy_default()(poolsToSort, function(pool) {\n                return pool.apr ? pool.apr : 0;\n            }, \"desc\");\n        case \"earned\":\n            return orderBy_default()(poolsToSort, function(pool) {\n                if (!pool.userData || !pool.earningTokenPrice) {\n                    return 0;\n                }\n                if (pool.vaultKey) {\n                    var userData = pool.userData, pricePerFullShare = pool.pricePerFullShare;\n                    if (!userData || !userData.userShares) {\n                        return 0;\n                    }\n                    return (0,helpers/* getCakeVaultEarnings */.UN)(account, userData.cakeAtLastUserAction, userData.userShares, pricePerFullShare, pool.earningTokenPrice, pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault ? pool.userData.currentPerformanceFee.plus(pool.userData.currentOverdueFee) : null).autoUsdToDisplay;\n                }\n                return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber();\n            }, \"desc\");\n        case \"totalStaked\":\n            {\n                return orderBy_default()(poolsToSort, function(pool) {\n                    var ref;\n                    var totalStaked = Number.NaN;\n                    if (pool.vaultKey) {\n                        var vault = pool;\n                        if (pool.stakingTokenPrice && vault.totalCakeInVault.isFinite()) {\n                            totalStaked = +(0,lib_esm/* formatUnits */.bM)(bignumber/* BigNumber.from */.O$.from(vault.totalCakeInVault.toString()), pool.stakingToken.decimals) * pool.stakingTokenPrice;\n                        }\n                    } else if (((ref = pool.totalStaked) === null || ref === void 0 ? void 0 : ref.isFinite()) && pool.stakingTokenPrice) {\n                        totalStaked = +(0,lib_esm/* formatUnits */.bM)(bignumber/* BigNumber.from */.O$.from(pool.totalStaked.toString()), pool.stakingToken.decimals) * pool.stakingTokenPrice;\n                    }\n                    return Number.isFinite(totalStaked) ? totalStaked : 0;\n                }, \"desc\");\n            }\n        case \"latest\":\n            return orderBy_default()(poolsToSort, function(pool) {\n                return Number(pool.sousId);\n            }, \"desc\");\n        default:\n            return poolsToSort;\n    }\n};\nvar POOL_START_BLOCK_THRESHOLD = 60 / config/* BSC_BLOCK_TIME */.hJ * 4;\nvar Pools = function() {\n    var router = (0,next_router.useRouter)();\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var account = (0,core_esm/* useWeb3React */.Ge)().account;\n    var ref = (0,hooks/* usePoolsWithVault */.f6)(), pools = ref.pools, userDataLoaded = ref.userDataLoaded;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserPoolStakedOnly */.tw)(), 2), stakedOnly = ref1[0], setStakedOnly = ref1[1];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserPoolsViewMode */.Yi)(), 2), viewMode = ref2[0], setViewMode = ref2[1];\n    var ref3 = (0,react.useState)(NUMBER_OF_POOLS_VISIBLE), numberOfPoolsVisible = ref3[0], setNumberOfPoolsVisible = ref3[1];\n    var ref4 = (0,useIntersectionObserver/* default */.Z)(), observerRef = ref4.observerRef, isIntersecting = ref4.isIntersecting;\n    var normalizedUrlSearch = (0,react.useMemo)(function() {\n        var ref;\n        return typeof (router === null || router === void 0 ? void 0 : (ref = router.query) === null || ref === void 0 ? void 0 : ref.search) === \"string\" ? router.query.search : \"\";\n    }, [\n        router.query\n    ]);\n    var ref5 = (0,react.useState)(\"\"), _searchQuery = ref5[0], setSearchQuery = ref5[1];\n    var searchQuery = normalizedUrlSearch && !_searchQuery ? normalizedUrlSearch : _searchQuery;\n    var ref6 = (0,react.useState)(\"hot\"), sortOption = ref6[0], setSortOption = ref6[1];\n    var chosenPoolsLength = (0,react.useRef)(0);\n    var initialBlock = (0,block_hooks/* useInitialBlock */.Xh)();\n    var ref7 = (0,react.useMemo)(function() {\n        return partition_default()(pools, function(pool) {\n            return pool.isFinished;\n        });\n    }, [\n        pools\n    ]), finishedPools = ref7[0], openPools = ref7[1];\n    var openPoolsWithStartBlockFilter = (0,react.useMemo)(function() {\n        return openPools.filter(function(pool) {\n            return initialBlock > 0 && pool.startBlock ? Number(pool.startBlock) < initialBlock + POOL_START_BLOCK_THRESHOLD : true;\n        });\n    }, [\n        initialBlock,\n        openPools\n    ]);\n    var stakedOnlyFinishedPools = (0,react.useMemo)(function() {\n        return finishedPools.filter(function(pool) {\n            if (pool.vaultKey) {\n                var vault = pool;\n                return vault.userData.userShares.gt(0);\n            }\n            return pool.userData && new (bignumber_default())(pool.userData.stakedBalance).isGreaterThan(0);\n        });\n    }, [\n        finishedPools\n    ]);\n    var stakedOnlyOpenPools = (0,react.useCallback)(function() {\n        return openPoolsWithStartBlockFilter.filter(function(pool) {\n            if (pool.vaultKey) {\n                var vault = pool;\n                return vault.userData.userShares.gt(0);\n            }\n            return pool.userData && new (bignumber_default())(pool.userData.stakedBalance).isGreaterThan(0);\n        });\n    }, [\n        openPoolsWithStartBlockFilter\n    ]);\n    var hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0;\n    (0,hooks/* usePoolsPageFetch */.l7)();\n    (0,react.useEffect)(function() {\n        if (isIntersecting) {\n            setNumberOfPoolsVisible(function(poolsCurrentlyVisible) {\n                if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n                    return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE;\n                }\n                return poolsCurrentlyVisible;\n            });\n        }\n    }, [\n        isIntersecting\n    ]);\n    var showFinishedPools = router.pathname.includes(\"history\");\n    var handleChangeSearchQuery = (0,react.useCallback)(function(event) {\n        return setSearchQuery(event.target.value);\n    }, []);\n    var handleSortOptionChange = (0,react.useCallback)(function(option) {\n        return setSortOption(option.value);\n    }, []);\n    var chosenPools;\n    if (showFinishedPools) {\n        chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools;\n    } else {\n        chosenPools = stakedOnly ? stakedOnlyOpenPools() : openPoolsWithStartBlockFilter;\n    }\n    chosenPools = (0,react.useMemo)(function() {\n        var sortedPools = sortPools(account, sortOption, pools, chosenPools).slice(0, numberOfPoolsVisible);\n        if (searchQuery) {\n            var lowercaseQuery = (0,latinise/* latinise */.b)(searchQuery.toLowerCase());\n            return sortedPools.filter(function(pool) {\n                return (0,latinise/* latinise */.b)(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery);\n            });\n        }\n        return sortedPools;\n    }, [\n        account,\n        sortOption,\n        pools,\n        chosenPools,\n        numberOfPoolsVisible,\n        searchQuery\n    ]);\n    chosenPoolsLength.current = chosenPools.length;\n    var cardLayout = /*#__PURE__*/ (0,jsx_runtime.jsx)(CardLayout, {\n        children: chosenPools.map(function(pool) {\n            return pool.vaultKey ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CakeVaultCard/* default */.Z, {\n                pool: pool,\n                showStakedOnly: stakedOnly\n            }, pool.vaultKey) : /*#__PURE__*/ (0,jsx_runtime.jsx)(components_PoolCard, {\n                pool: pool,\n                account: account\n            }, pool.sousId);\n        })\n    });\n    var tableLayout = /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolsTable_PoolsTable, {\n        urlSearch: normalizedUrlSearch,\n        pools: chosenPools,\n        account: account\n    });\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(PageHeader/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                    justifyContent: \"space-between\",\n                    flexDirection: [\n                        \"column\",\n                        null,\n                        null,\n                        \"row\"\n                    ],\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        flex: \"1\",\n                        flexDirection: \"column\",\n                        mr: [\n                            \"8px\",\n                            0\n                        ],\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                as: \"h1\",\n                                scale: \"xxl\",\n                                color: \"secondary\",\n                                mb: \"24px\",\n                                children: t(\"Syrup Pools\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                scale: \"md\",\n                                color: \"text\",\n                                children: t(\"Just stake some tokens to earn.\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                scale: \"md\",\n                                color: \"text\",\n                                children: t(\"High APR, low risk.\")\n                            })\n                        ]\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Page/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolControls, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(components_PoolTabButtons, {\n                                stakedOnly: stakedOnly,\n                                setStakedOnly: setStakedOnly,\n                                hasStakeInFinishedPools: hasStakeInFinishedPools,\n                                viewMode: viewMode,\n                                setViewMode: setViewMode\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(FilterContainer, {\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(LabelWrapper, {\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                fontSize: \"12px\",\n                                                bold: true,\n                                                color: \"textSubtle\",\n                                                textTransform: \"uppercase\",\n                                                children: t(\"Sort by\")\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(ControlStretch, {\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Select/* default */.Z, {\n                                                    options: [\n                                                        {\n                                                            label: t(\"Hot\"),\n                                                            value: \"hot\"\n                                                        },\n                                                        {\n                                                            label: t(\"APR\"),\n                                                            value: \"apr\"\n                                                        },\n                                                        {\n                                                            label: t(\"Earned\"),\n                                                            value: \"earned\"\n                                                        },\n                                                        {\n                                                            label: t(\"Total staked\"),\n                                                            value: \"totalStaked\"\n                                                        },\n                                                        {\n                                                            label: t(\"Latest\"),\n                                                            value: \"latest\"\n                                                        }, \n                                                    ],\n                                                    onOptionChange: handleSortOptionChange\n                                                })\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(LabelWrapper, {\n                                        style: {\n                                            marginLeft: 16\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                fontSize: \"12px\",\n                                                bold: true,\n                                                color: \"textSubtle\",\n                                                textTransform: \"uppercase\",\n                                                children: t(\"Search\")\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(SearchInput/* default */.Z, {\n                                                initialValue: searchQuery,\n                                                onChange: handleChangeSearchQuery,\n                                                placeholder: \"Search Pools\"\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    showFinishedPools && /*#__PURE__*/ (0,jsx_runtime.jsxs)(FinishedTextContainer, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: [\n                                    \"16px\",\n                                    null,\n                                    \"20px\"\n                                ],\n                                color: \"failure\",\n                                pr: \"4px\",\n                                children: t(\"Looking for v1 OVE syrup pools?\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(FinishedTextLink, {\n                                href: \"/migration\",\n                                fontSize: [\n                                    \"16px\",\n                                    null,\n                                    \"20px\"\n                                ],\n                                color: \"failure\",\n                                children: [\n                                    t(\"Go to migration page\"),\n                                    \".\"\n                                ]\n                            })\n                        ]\n                    }),\n                    account && !userDataLoaded && stakedOnly && /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                        justifyContent: \"center\",\n                        mb: \"4px\",\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Loading/* default */.Z, {})\n                    }),\n                    viewMode === actions/* ViewMode.CARD */.wO.CARD ? cardLayout : tableLayout,\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {\n                        ref: observerRef\n                    })\n                ]\n            })\n        ]\n    });\n};\n/* harmony default export */ var views_Pools = (Pools);\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","__unused_webpack_exports","__webpack_require__","partition","createAggregator","result","value","key","exports","__unused_webpack_module","__webpack_exports__","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__","_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_2__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_templateObject","data","Z","StyledCardRibbon","ZP","div","withConfig","componentId","param","theme","zIndices","ribbon","_variantColor","variantColor","colors","ribbonPosition","CardRibbon","_param","text","props","jsx","children","title","defaultProps","d","views_Pools","_sliced_to_array","_tagged_template_literal","jsx_runtime","react","styled_components_browser_esm","bignumber","lib_esm","bignumber_js_bignumber","bignumber_default","n","core_esm","Text","Flex","Link","Heading","orderBy","orderBy_default","partition_default","Localization","useIntersectionObserver","hooks","latinise","Layout_Flex","Page","PageHeader","SearchInput","Select","types","user_hooks","actions","next_router","Loading","block_hooks","config","CardBody","ConnectWalletButton","bigNumber","TokenImage","useTooltip","TooltipText","Apr","PoolCard_AprRow","pool","stakedBalance","_performanceFee","performanceFee","_showIcon","showIcon","t","$G","vaultKey","tooltipContent","ref","placement","targetRef","tooltip","tooltipVisible","jsxs","alignItems","justifyContent","concat","StyledCard","CardFooter","PoolCardHeader","Box","constants_types","useProfileRequirement","Skeleton","Button","AutoRenew","useContract","useApprove","CardActions_ApprovalAction","_isLoading","isLoading","sousId","stakingToken","earningToken","stakingTokenContract","X_","address","iB","symbol","handleApprove","pendingTx","Fragment","width","height","endIcon","spin","color","disabled","onClick","useModal","IconButton","Minus","Add","formatBalance","Balance","NotEnoughTokensModal","StakeModal","StakeActions","stakingTokenBalance","isBnbPool","isStaked","stakingTokenPrice","stakingLimit","isFinished","userData","stakedTokenBalance","mW","decimals","stakedTokenDollarBalance","multipliedBy","onPresentTokenRequired","tokenSymbol","onPresentStake","ref1","onPresentUnstake","ref2","isRemovingStake","ref3","reachStakingLimit","gt","gte","flexDirection","bold","fontSize","prefix","unit","variant","mr","CollectModal","CardActions_HarvestActions","earnings","earningTokenPrice","earningTokenBalance","formattedBalance","uf","earningTokenDollarBalance","fullBalance","NJ","hasEarnings","toNumber","isCompoundPool","earningsDollarValue","onPresentCollect","mb","display","ProfileRequirementWarning","InlineText","PoolCard_CardActions","poolCategory","profileRequirement","jh","BINANCE","allowance","HW","pendingReward","needsApproval","f","notMeetRequired","notMeetThreshold","textTransform","Q","components_PoolCard","account","accountHasStakedBalance","isCakePool","r","isStaking","e","asset","subTitle","q","primaryToken","secondaryToken","mt","CakeVaultCard","NextLink","ToggleView","ButtonMenu","ButtonMenuItem","NotificationDot","Toggle","PoolTabButtons_templateObject","_templateObject1","_templateObject2","ToggleWrapper","ViewControls","mediaQueries","sm","Wrapper","components_PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","viewMode","setViewMode","router","useRouter","isExact","asPath","viewModeToggle","idPrefix","onToggle","liveOrFinishedSwitch","activeIndex","scale","as","a","to","replace","show","id","stakedOnlySwitch","checked","onChange","ChevronUp","useMatchBreakpointsContext","NameCell","BaseCell","EarningsCell_templateObject","StyledCell","Cells_EarningsCell","isMobile","labelText","role","J","textAlign","userDataLoaded","event","stopPropagation","undefined","AprCell","TotalStakedCell_templateObject","TotalStakedCell_StyledCell","Cells_TotalStakedCell","totalStaked","totalCakeInVault","eB","totalStakedBalance","useMemo","Timer","utils","helpers","EndsInCell_templateObject","EndsInCell_StyledCell","Cells_EndsInCell","startBlock","endBlock","currentBlock","je","zy","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","renderBlocks","flex","ml","external","href","s6","isLoadingPublicData","showLoading","ActionPanel","AutoEarningsCell","AutoAprCell","StakedCell_templateObject","StakedCell_StyledCell","Cells_StakedCell","vaultData","_userData","userShares","_balance","balance","cakeAsBigNumber","cakeAsNumberBalance","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","om","CakeVault","locked","hasStaked","userDataLoading","CakeFlexibleSideVault","Number","isNaN","useDelayedUnmount","ExpandActionCell","ExpandRow_templateObject","StyledRow","PoolsTable_ExpandRow","memo","panel","initialActivity","hasSetInitialValue","useRef","isTablet","isDesktop","useState","expanded","setExpanded","shouldRenderActionPanel","toggleExpanded","useCallback","prev","useEffect","current","isFullLayout","VaultPoolRow","isXs","isSm","isMd","isLg","isXl","isXxl","isXLargerScreen","YX","breakpoints","isLargerScreen","PoolsTable_PoolRow","AI","PoolsTable_templateObject","PoolsTable_templateObject1","PoolsTable_templateObject2","StyledTable","radii","card","background","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable_PoolsTable","pools","urlSearch","tableWrapperEl","map","toLowerCase","window","scrollTo","top","offsetTop","behavior","Pools_templateObject","Pools_templateObject1","Pools_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","FinishedTextContainer","md","FinishedTextLink","sortPools","sortOption","poolsToSort","apr","pricePerFullShare","UN","cakeAtLastUserAction","currentPerformanceFee","plus","currentOverdueFee","autoUsdToDisplay","times","NaN","vault","isFinite","bM","O$","from","toString","POOL_START_BLOCK_THRESHOLD","hJ","chosenPools","Ge","f6","tw","Yi","numberOfPoolsVisible","setNumberOfPoolsVisible","ref4","observerRef","isIntersecting","normalizedUrlSearch","query","search","ref5","_searchQuery","setSearchQuery","searchQuery","ref6","setSortOption","chosenPoolsLength","initialBlock","Xh","ref7","finishedPools","openPools","openPoolsWithStartBlockFilter","filter","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","length","l7","poolsCurrentlyVisible","showFinishedPools","pathname","includes","handleChangeSearchQuery","target","handleSortOptionChange","option","sortedPools","slice","lowercaseQuery","b","cardLayout","showStakedOnly","tableLayout","options","label","onOptionChange","style","marginLeft","initialValue","placeholder","pr","wO","CARD"],"sourceRoot":""}